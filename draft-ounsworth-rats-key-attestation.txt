



Remote ATtestation ProcedureS                               M. Ounsworth
Internet-Draft                                                   Entrust
Intended status: Standards Track                             H. Birkholz
Expires: 18 June 2025                                     Fraunhofer SIT
                                                              T. Fossati
                                                                  Linaro
                                                              M. Wiseman
                                                         Beyond Identity
                                                           H. Tschofenig
                                                                   H-BRS
                                                        15 December 2024


                            Key Attestation
              draft-ounsworth-rats-key-attestation-latest

Abstract

   This document specifies a format for key attestation claims to
   provide evidence of the security properties of trusted execution
   environments and secure elements in which private keys may be
   generated and stored.  This evidence is intended to be used by a
   Relying Party, such as a Certification Authority (CA), as part of
   validating an incoming certificate signing request (CSR).  The
   specification defines key claims using ASN.1 and CDDL.

Discussion Venues

   This note is to be removed before publishing as an RFC.

   Discussion of this document takes place on the Remote ATtestation
   ProcedureS Working Group mailing list (rats@ietf.org), which is
   archived at https://mailarchive.ietf.org/arch/browse/rats/.

   Source for this draft and an issue tracker can be found at
   https://github.com/hannestschofenig/key-attestation.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 18 June 2025.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Terminology
   3.  Architecture
   4.  Information Model
   5.  Data Model
     5.1.  Key Claims for ASN.1
   6.  Key Claims for EAT
   7.  Security Considerations
   8.  IANA Considerations
     8.1.  Key Claims for ASN.1
     8.2.  Key Claims for EAT
   9.  References
     9.1.  Normative References
     9.2.  Informative References
   Appendix A.  Acknowledgements
   Authors' Addresses

1.  Introduction

   When a PKI End Entity provides a Certificate Signing Request (CSR) in
   requesting a certificate from a Certification Authority (CA), that
   entity may wish to provide evidence of the security properties of the
   hardware security module where the private key resides.  This
   evidence is verified by a Relying Party, such as a CA, as part of the
   CSR validation against a given certificate policy.
   [[I-D.ietf-lamps-csr-attestation]] specifies how to carry evidence
   within PKCS#10 [[RFC2986]] or Certificate Request Message Format
   (CRMF) [[RFC4211]].

   The content and encoding of this evidence in a CSR are not
   constrained by [[I-D.ietf-lamps-csr-attestation]].  Hence, it is
   possible to use the Entity Attestation Token (EAT)
   [I-D.ietf-rats-eat] or, when a DER-based encoding of claims is
   desired, [I-D.ietf-rats-pkix-evidence].  For the latter, ASN.1
   [X.680][RFC5912] is used to describe the claims, and for EATs the
   claims are defined in CDDL.

   This specification defines the architecture for performing key
   attestation and registers claims for use with [I-D.ietf-rats-eat] and
   [I-D.ietf-rats-pkix-evidence].

2.  Terminology

   The following terms are used in this document:

   Root of Trust (RoT):
      A set of software and/or hardware components that need to be
      trusted to act as a security foundation required for accomplishing
      the security goals of a system.  In our case, the RoT is expected
      to offer the functionality for attesting to the state of the
      platform, and to attest the properties of the identity key (IK).
      More precisely, it has to atttest the integrity of the IK (public
      as well as private key) and the confidentiality of the IK private
      key.

   Attestation Key (AK):
      Cryptographic key belonging to the RoT that is only used to sign
      attestation tokens.

   Platform Attestation Key (PAK):
      An AK used specifically for signing attestation tokens relating to
      the state of the platform.

   Key Attestation:
      Evidence containing properties of the environment(s) in which the
      private keys are generated and stored.  For example, a Relying
      Party may want to know whether a private key is stored in a
      hardware security module and cannot be exported in cleartext.

   Key Attestation Key (KAK):
      An AK used specifically for signing KATs.  In some systems only a
      single AK is used.  In that case the AK is used as a PAK and a
      KAK.

   Identity Key (IK):
      The IK consists of a private and a public key.  The private key is
      used by the usage protocol.  The public key is included in the Key
      Attestation Token.  The IK is protected by the RoT.

   Usage Protocol:
      A (security) protocol that requires demonstrating possession of
      the private component of the IK.

   Attestation Token (AT):
      A collection of claims that a RoT assembles (and signs) with the
      purpose of informing - in a verifiable way - relying parties about
      the identity and state of the platform.  Essentially a type of
      Evidence as per the RATS architecture terminology [RFC9334].

   Platform Attestation Token (PAT):
      An AT containing claims relating to the security state of the
      platform, including software constituting the platform trusted
      computing base (TCB).  The process of generating a PAT typically
      involves gathering data during measured boot.

   Key Attestation Token (KAT):
      An AT containing a claim with a public key.  The KAT may also
      contain other claims, such as those indicating its validity.  The
      KAT is signed by the KAK.  The key attestation service, which is
      part of the platform root of trust (RoT), conceptually acts as a
      local certification authority since the KAT behaves like a
      certificate.

   Combined Attestation Bundle (CAB):
      A structure used to bundle a KAT and a PAT together for transport
      in the usage protocol.  If the KAT already includes a PAT, in form
      of a nested token, then it already corresponds to a CAB.  A CAB is
      equivalent to a certificate that binds the identity of the
      platform's TCB with the IK public key.

   Presenter:
      Party that proves possession of a private key to a recipient of a
      KAT.

   Recipient:
      Party that receives the KAT containing the proof-of-possession key
      information from the presenter.

   Key Attestation Service (KAS):
      The issuer that creates the KAT and bundles a KAT together with a
      PAT in a CAB.

   The reader is assumed to be familiar with the vocabulary and concepts
   defined in [RFC9334].

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  Architecture

   Key attestation is an extension to the attestation functionality
   described in [RFC9334].  We describe this conceptually by splitting
   the internals of the attester into two parts, platform attestation
   and key attestation.  This split is shown in Figure 1.  These are
   logical roles and implementations may combine them into a single
   physical entity.

   Security-sensitive functionality, like attestation, has to be placed
   into the Root of Trust (RoT).  Since the RoT itself may be comprised
   of different components, the design allows platform attestation to be
   separated from key attestation whereby platform attestation is more
   privileged than the key attestation code.  Cryptographic services,
   used by key attestation and by platform attestation, are typically
   part of separate components within the RoT but they are not shown in
   the figure.

   The protocol used for communication between the Presenter and the
   Recipient is referred as the Usage Protocol.  The Usage Protocol,
   which is outside the scope of this specification, needs to support
   proof-of-possession of the private key (explained further below).
   Examples of usage protocols are attested TLS
   [I-D.fossati-tls-attestation] or attested CSR
   [I-D.ietf-lamps-csr-attestation].

     .------------------------------------.
    | .----------------------------------. |
    | | Attester                         | |
    | | .-------------.  .-------------. | |
    | | | Key         |  | Platform    | | |
    | | | Attestation |  | Attestation | | |
    | | | Service     |  | Service     | | |
    | | '-------------'  '-------------' | |
    | '----------------------------------' |
    |       ^                              |
    |       |       Root of Trust (RoT)    |
     '------+-----------------------------'
            |
            |
            v
    .-----------------.                 .-----------------.
    |                 | Usage Protocol  |                 |
    |    Presenter    +---------------->|    Recipient    |
    |                 |                 |                 |
    '-----------------'                 '-----------------'

                           Figure 1: Architecture

   The detailed implementations of key attestation may vary but the
   following description aims to illustrate one possible approach.  The
   goal of this algorithm is to demonstrate to the recipient that the
   sIK (private part of the IK) has certain security properties.
   Properties of interest could, for example, be 'private key is stored
   in a hardware security model manufacturered by example.com and cannot
   be exported in the clear.'.

   The process starts with the the Presenter triggering the generation
   of the IK.  The IK consists of a public key (pIK) and a private key
   (sIK).  The Presenter may, for example, use the following API call to
   trigger the generation of the key pair for a given algorithm and to
   obtain a key handle (key_id).

   key_id = GenerateKeyPair(alg_id)

   The private key is created and stored such that it is only accessible
   to the KAS rather than to other software layers at the host, such as
   the TLS protocol layer i.e. the Presenter.

   Next, the KAS needs to trigger the creation of the Platform
   Attestation Token (PAT) by the Platform Attestation Service.  The PAT
   needs to be linked to the Key Attestation Token (KAT) and this
   linkage can occur in a number of ways.  One approach is described in
   this specification in [I-D.bft-rats-kat].  The Key Attestation Token
   (KAT) includes the public key of the IK (pIK) and is then signed with
   the Key Attestation Key (KAK).

   To ensure freshness of the PAT and the KAT a nonce is used, as
   suggested by the RATS architecture [RFC9334].  Here is the symbolic
   API call to request a KAT and a PAT, which are concatenated together
   as the CAB.

   cab = createCAB(key_id, nonce)

   Once the CAB has been sent by the Presenter to the Recipient, the
   Presenter has to demonstrate possession of the private key.  The
   signature operation uses the private key of the IK (sIK).  How this
   proof-of-possession of the private key is accomplished depends on the
   details of the usage protocol and is outside the scope of this
   specification.

   The Recipient of the CAB and the proof-of-possession data (such as a
   digital signature) first extracts the PAT and the KAT.  The PAT and
   the KAT may need to be conveyed to a Verifier.  If the PAT is in the
   form of attestation results the checks can be performed locally at
   the Recipient, whereby the following checks are made:

   *  The signature covering the PAT passes verification when using
      available trust anchor(s).

   *  The chaining of the PAT and the KAT has to be verified.  The
      detailed verification procedure depends on the chaining mechanism
      utilized.

   *  The claims in the PAT are matched against stored reference values.

   *  The signature protecting the KAT must pass verification.

   *  The KAT is checked for replays.

   Once all these steps are completed, the verifier produces the
   attestation result and includes (if needed) the IK public key (pIK).

4.  Information Model

   This section describes the semantics of the key claims as part of the
   information model.

   An initial set of key claims is defined:

   +================================+=================================+
   | Claim                          | Description                     |
   +================================+=================================+
   | KeyId                          | Identifies the subject key,     |
   |                                | with a vendor-specific format   |
   |                                | constrained to ASCII            |
   +--------------------------------+---------------------------------+
   | PubKey                         | Represents the subject public   |
   |                                | key being attested.             |
   +--------------------------------+---------------------------------+
   | Purpose                        | Defines the intended usage for  |
   |                                | the key.                        |
   +--------------------------------+---------------------------------+
   | NonExportable                  | Indicates if the key is non-    |
   |                                | exportable.                     |
   +--------------------------------+---------------------------------+
   | Imported                       | Shows whether the key was       |
   |                                | imported.                       |
   +--------------------------------+---------------------------------+
   | KeyExpiry                      | Defines the expiry date or "not |
   |                                | after" time for the key.        |
   +--------------------------------+---------------------------------+
   | FipsBoot                       | Indicates whether the           |
   |                                | cryptographic module was booted |
   |                                | in a specific FIPS state,       |
   +--------------------------------+---------------------------------+
   | including any required self-   |                                 |
   | tests and conditions specified |                                 |
   | by its FIPS certificate.       |                                 |
   +--------------------------------+---------------------------------+

                                 Table 1

5.  Data Model

5.1.  Key Claims for ASN.1

   The following table defines key claims relevant for key attestation
   described in ASN.1 for use in X.509 certificates and DER-encoded data
   structures.

           +===============+=====+==============+=============+
           | Claim         | OID | Value        | Status      |
           +===============+=====+==============+=============+
           | KeyId         | TBD | IA5String    | OPTIONAL    |
           +---------------+-----+--------------+-------------+
           | PubKey        | TBD | OCTET STRING | RECOMMENDED |
           +---------------+-----+--------------+-------------+
           | Purpose       | TBD | CHOICE       | RECOMMENDED |
           +---------------+-----+--------------+-------------+
           | NonExportable | TBD | BOOLEAN      | RECOMMENDED |
           +---------------+-----+--------------+-------------+
           | Imported      | TBD | BOOLEAN      | RECOMMENDED |
           +---------------+-----+--------------+-------------+
           | KeyExpiry     | TBD | Time         | OPTIONAL    |
           +---------------+-----+--------------+-------------+
           | FipsBoot      | TBD | BOOLEAN      | RECOMMENDED |
           +---------------+-----+--------------+-------------+

                                 Table 2

   KeyId EVIDENCE-CLAIM ::= IA5String IDENTIFIED BY TBD

   PubKey EVIDENCE-CLAIM ::= OCTET STRING IDENTIFIED BY TBD

   Purpose EVIDENCE-CLAIM ::= CHOICE IDENTIFIED BY TBD {
      Sign, Decrypt, Unwrap, ...
   }

   NonExportable EVIDENCE-CLAIM ::= BOOLEAN IDENTIFIED BY TBD

   Imported EVIDENCE-CLAIM ::= BOOLEAN IDENTIFIED BY TBD

   KeyExpiry EVIDENCE-CLAIM ::= Time

   FipsBoot EVIDENCE-CLAIM ::= BOOLEAN IDENTIFIED BY TBD

6.  Key Claims for EAT

                +================+===========+============+
                | Claim Name     | Claim Key | CBOR Type  |
                +================+===========+============+
                | key-id         | TBD       | tstr       |
                +----------------+-----------+------------+
                | pub-key        | TBD       | bstr       |
                +----------------+-----------+------------+
                | purpose        | TBD       | tstr/array |
                +----------------+-----------+------------+
                | non-exportable | TBD       | bool       |
                +----------------+-----------+------------+
                | imported       | TBD       | bool       |
                +----------------+-----------+------------+
                | key-expiry     | TBD       | time       |
                +----------------+-----------+------------+
                | fips-mode      | TBD       | bool       |
                +----------------+-----------+------------+

                                  Table 3

7.  Security Considerations

   A Verifier MAY reject an evidence claim if it lacks required
   information per their appraisal policy.  For example, if a Relying
   Party mandates a FIPS-certified device, it SHOULD reject evidence
   lacking sufficient information to verify the device's FIPS
   certification status.

   "FIPS Boot" alone does not guarantee "FIPS Certification".  This
   claim should be used alongside a valid FIPS certification.

8.  IANA Considerations

   Please replace "RFCthis" with the RFC number assigned to this
   document.

8.1.  Key Claims for ASN.1

   This document requests the registration of new Object Identifiers
   (OIDs) for the key attestation claims defined in this specification.
   The OIDs are to be registered under an appropriate OID arc managed by
   IANA.

   The following OIDs are requested:

                +==================+=========+===========+
                | Claim Name       | OID     | Reference |
                +==================+=========+===========+
                | key-id           | TBD.OID | RFCthis   |
                +------------------+---------+-----------+
                | pub-key          | TBD.OID | RFCthis   |
                +------------------+---------+-----------+
                | purpose          | TBD.OID | RFCthis   |
                +------------------+---------+-----------+
                | non-exportable   | TBD.OID | RFCthis   |
                +------------------+---------+-----------+
                | imported         | TBD.OID | RFCthis   |
                +------------------+---------+-----------+
                | key-expiry       | TBD.OID | RFCthis   |
                +------------------+---------+-----------+
                | fips-mode        | TBD.OID | RFCthis   |
                +------------------+---------+-----------+
                | vendor-info      | TBD.OID | RFCthis   |
                +------------------+---------+-----------+
                | nested-evidences | TBD.OID | RFCthis   |
                +------------------+---------+-----------+

                                 Table 4

   Note:

   *  The TBD.OID values will be assigned by IANA during the
      registration process.

   *  These OIDs are intended for use in ASN.1 data structures for the
      key attestation claims defined in this document.

8.2.  Key Claims for EAT

   This document requests the registration of new claims in the "EAT
   Claims" registry defined by [I-D.ietf-rats-eat].  These claims are
   specific to key attestation and are intended for use in the context
   of the Entity Attestation Token (EAT).

   The following claims should be added to the registry:

          +================+===========+============+===========+
          | Claim Name     | Claim Key | CBOR Type  | Reference |
          +================+===========+============+===========+
          | key-id         | TBD       | tstr       | RFCthis   |
          +----------------+-----------+------------+-----------+
          | pub-key        | TBD       | bstr       | RFCthis   |
          +----------------+-----------+------------+-----------+
          | purpose        | TBD       | tstr/array | RFCthis   |
          +----------------+-----------+------------+-----------+
          | non-exportable | TBD       | bool       | RFCthis   |
          +----------------+-----------+------------+-----------+
          | imported       | TBD       | bool       | RFCthis   |
          +----------------+-----------+------------+-----------+
          | key-expiry     | TBD       | time       | RFCthis   |
          +----------------+-----------+------------+-----------+
          | fips-mode      | TBD       | bool       | RFCthis   |
          +----------------+-----------+------------+-----------+

                                  Table 5

   Note:

   *  The exact "Claim Key" values (TBD) will be assigned by IANA during
      the registration process.

   *  The CBOR types are defined as per [RFC8949], with appropriate
      encoding rules for each claim.

9.  References

9.1.  Normative References

   [I-D.ietf-rats-eat]
              Lundblade, L., Mandyam, G., O'Donoghue, J., and C.
              Wallace, "The Entity Attestation Token (EAT)", Work in
              Progress, Internet-Draft, draft-ietf-rats-eat-31, 6
              September 2024, <https://datatracker.ietf.org/doc/html/
              draft-ietf-rats-eat-31>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

   [RFC8949]  Bormann, C. and P. Hoffman, "Concise Binary Object
              Representation (CBOR)", STD 94, RFC 8949,
              DOI 10.17487/RFC8949, December 2020,
              <https://www.rfc-editor.org/rfc/rfc8949>.

   [RFC9334]  Birkholz, H., Thaler, D., Richardson, M., Smith, N., and
              W. Pan, "Remote ATtestation procedureS (RATS)
              Architecture", RFC 9334, DOI 10.17487/RFC9334, January
              2023, <https://www.rfc-editor.org/rfc/rfc9334>.

   [X.680]    ITU-T, "Information technology -- Abstract Syntax Notation
              One (ASN.1): Specification of basic notation", n.d.,
              <https://www.itu.int/rec/T-REC-X.680>.

9.2.  Informative References

   [I-D.bft-rats-kat]
              Brossard, M., Fossati, T., Tschofenig, H., and H.
              Birkholz, "An EAT-based Key Attestation Token", Work in
              Progress, Internet-Draft, draft-bft-rats-kat-05, 21
              November 2024, <https://datatracker.ietf.org/doc/html/
              draft-bft-rats-kat-05>.

   [I-D.fossati-tls-attestation]
              Tschofenig, H., Sheffer, Y., Howard, P., Mihalcea, I.,
              Deshpande, Y., Niemi, A., and T. Fossati, "Using
              Attestation in Transport Layer Security (TLS) and Datagram
              Transport Layer Security (DTLS)", Work in Progress,
              Internet-Draft, draft-fossati-tls-attestation-08, 21
              October 2024, <https://datatracker.ietf.org/doc/html/
              draft-fossati-tls-attestation-08>.

   [I-D.ietf-lamps-csr-attestation]
              Ounsworth, M., Tschofenig, H., Birkholz, H., Wiseman, M.,
              and N. Smith, "Use of Remote Attestation with
              Certification Signing Requests", Work in Progress,
              Internet-Draft, draft-ietf-lamps-csr-attestation-14, 21
              October 2024, <https://datatracker.ietf.org/doc/html/
              draft-ietf-lamps-csr-attestation-14>.

   [I-D.ietf-rats-pkix-evidence]
              Ounsworth, M., Kettlewell, R., Fiset, J., Tschofenig, H.,
              Reddy.K, T., and M. Wiseman, "PKI-based Attestation
              Evidence", Work in Progress, Internet-Draft, draft-ietf-
              rats-pkix-evidence-00, 11 October 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-rats-
              pkix-evidence-00>.

   [RFC2986]  Nystrom, M. and B. Kaliski, "PKCS #10: Certification
              Request Syntax Specification Version 1.7", RFC 2986,
              DOI 10.17487/RFC2986, November 2000,
              <https://www.rfc-editor.org/rfc/rfc2986>.

   [RFC4211]  Schaad, J., "Internet X.509 Public Key Infrastructure
              Certificate Request Message Format (CRMF)", RFC 4211,
              DOI 10.17487/RFC4211, September 2005,
              <https://www.rfc-editor.org/rfc/rfc4211>.

   [RFC5912]  Hoffman, P. and J. Schaad, "New ASN.1 Modules for the
              Public Key Infrastructure Using X.509 (PKIX)", RFC 5912,
              DOI 10.17487/RFC5912, June 2010,
              <https://www.rfc-editor.org/rfc/rfc5912>.

Appendix A.  Acknowledgements

   This specification is the work of a design team created by the chairs
   of the LAMPS working group.  This specification has been developed
   based on discussions in that design team.

Authors' Addresses

   Mike Ounsworth
   Entrust Limited
   2500 Solandt Road – Suite 100
   Ottawa, Ontario  K2K 3G5
   Canada
   Email: mike.ounsworth@entrust.com


   Henk Birkholz
   Fraunhofer SIT
   Email: henk.birkholz@ietf.contact


   Thomas Fossati
   Linaro
   Email: thomas.fossati@linaro.org


   Monty Wiseman
   Beyond Identity
   United States of America
   Email: monty.wiseman@beyondidentity.com


   Hannes Tschofenig
   University of Applied Sciences Bonn-Rhein-Sieg
   Germany
   Email: Hannes.Tschofenig@gmx.net
