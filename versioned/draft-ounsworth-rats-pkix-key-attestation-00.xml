<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.23 (Ruby 3.0.2) -->
<?rfc rfcedstyle="yes"?>
<?rfc tocindent="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>
<?rfc toc_levels="4"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ounsworth-rats-pkix-key-attestation-00" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.27.0 -->
  <front>
    <title abbrev="PKIX Key Attestation">PKIX Key Attestation</title>
    <seriesInfo name="Internet-Draft" value="draft-ounsworth-rats-pkix-key-attestation-00"/>
    <author initials="M." surname="Ounsworth" fullname="Mike Ounsworth">
      <organization abbrev="Entrust">Entrust Limited</organization>
      <address>
        <postal>
          <street>2500 Solandt Road â€“ Suite 100</street>
          <city>Ottawa, Ontario</city>
          <code>K2K 3G5</code>
          <country>Canada</country>
        </postal>
        <email>mike.ounsworth@entrust.com</email>
      </address>
    </author>
    <author initials="J.-P." surname="Fiset" fullname="Jean-Pierre Fiset">
      <organization abbrev="Crypto4A">Crypto4A Inc.</organization>
      <address>
        <postal>
          <street>1550A Laperriere Ave</street>
          <city>Ottawa, Ontario</city>
          <code>K1Z 7T2</code>
          <country>Canada</country>
        </postal>
        <email>jp@crypto4a.com</email>
      </address>
    </author>
    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization abbrev="H-BRS">University of Applied Sciences Bonn-Rhein-Sieg</organization>
      <address>
        <postal>
          <country>Germany</country>
        </postal>
        <email>Hannes.Tschofenig@gmx.net</email>
      </address>
    </author>
    <author initials="H." surname="Birkholz" fullname="Henk Birkholz">
      <organization>Fraunhofer SIT</organization>
      <address>
        <email>henk.birkholz@ietf.contact</email>
      </address>
    </author>
    <author initials="M." surname="Wiseman" fullname="Monty Wiseman">
      <organization>Beyond Identity</organization>
      <address>
        <postal>
          <country>USA</country>
        </postal>
        <email>monty.wiseman@beyondidentity.com</email>
      </address>
    </author>
    <author initials="N." surname="Smith" fullname="Ned Smith">
      <organization>Intel Corporation</organization>
      <address>
        <postal>
          <country>USA</country>
        </postal>
        <email>ned.smith@intel.com</email>
      </address>
    </author>
    <date year="2025" month="March" day="03"/>
    <area>Security</area>
    <workgroup>Remote ATtestation procedureS</workgroup>
    <keyword>Internet-Draft</keyword>
    <abstract>
      <?line 111?>

<t>This document specifies a vendor-agnostic format for attesting to the protection properties of a symmetric or asymmetric cryptographic key within a hardware cryptographic module to support applications such as providing evidence to a Certification Authority that a key is being protected in accordance with the requested certificate profile, or that HSMs can perform key import and maintain the private key protection properties in a robust way even when migrating keys across HSM vendors. This specification includes a format for requesting a key attestation containing certain attributes. This specification is called "PKIX Attestation" because it is designed to be easy to implement on top of a code base that already supports X.509 and PKCS#11 data models.</t>
    </abstract>
    <note removeInRFC="true">
      <name>Discussion Venues</name>
      <t>Discussion of this document takes place on the
    Remote ATtestation ProcedureS Working Group mailing list (rats@ietf.org),
    which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/rats/"/>.</t>
      <t>Source for this draft and an issue tracker can be found at
    <eref target="https://github.com/hannestschofenig/key-attestation"/>.</t>
    </note>
  </front>
  <middle>
    <?line 115?>

<section anchor="introduction">
      <name>Introduction</name>
      <t>This specification is targeted at attesting to the storage of cryptographic key
material -- symmetric keys or asymmetric private keys -- within a hardware cryptographic
module such as a Hardware Security Module (HSM) or Trusted Platform Module (TPM).
HSMs and TPMs are devices whose primary purpose is to hold cryptographic keys and support interfaces whereby they can be used to perform encrypt, decrypt, sign, MAC and other keyed cryptographic operations on provided data without the key material ever leaving the hardware module.
Typically an HSM or TPM holds an uses cryptographic keys on behalf of an application such as a Certification Authority, a code signing service, a TLS server.
However, also included in the scope of this draft are single-purpose cryptographic devices such as smartcards which may hold only a single application key for a single purpose such as authenticating to a near-field "tap" terminal.
Within this specification we will generically refer to the attesting device as an "HSM", and to the cryptographic keys that it holds an operates on behalf of some other application as "application keys".</t>
      <t>The goal of this specification is to provide a standardized format in which an HSM can attest that one or more application keys are contained within a hardware module, and attest to any additional attributes relating to the protection of this key material.</t>
      <t>This requires providing evidence to the key protection properties of that key, referred to in
this specification as "key attributes", as well as to the operational state of the hardware platform,
referred to as "platform attributes". This specification also provides a format for requesting that a cryptographic module produce a key attestation about a specific application key, the application keys in a specific sub-environment of the HSM, or that the returned attestation contain a specific set of attributes.
See <xref target="sec-data-model"/> for the full information model.</t>
      <t>As described below in <xref target="sec-arch"/> "Architecture and Conceptual Model", this specification
uses a simplification of the Remote ATtestation procedureS (RATS) Architecture <xref target="RFC9334"/>
by assuming that the attesting environment and the target environment
are the same environment, and that this environment only produces evidence as this aligns with the
target hardware platforms. As such, the attestation data format specified in <xref target="sec-data-model"/> only contains
evidence (referred to in this document as "attributes") and does not provide for any form of endorsement except for
endorsement of the device's attestation signing key which is endorsed via an X.509 certificate chain rooted
in a trust anchor belonging either to the device manufacturer or to the device operator, as described in <xref target="sec-ak-chain"/>.</t>
      <t>Unlike other attestation data formats defined by the RATS working group, the format defined in this
document is targeting devices designed to operate within Public Key Infrastructure (PKI) ecosystems;
this motivates the following design choices:</t>
      <ul spacing="normal">
        <li>
          <t>Attestation data structure defined in ASN.1 <xref target="X.680"/> and encoded in Distinguished Encoding Rules (DER) <xref target="X.690"/>.</t>
        </li>
        <li>
          <t>Endorsement of attesting key uses an X.509 certificate chain <xref target="RFC5280"/>.</t>
        </li>
        <li>
          <t>Key attributes are mostly just a mapping of the private key properties from PKCS#11 <xref target="PKCS11"/>.</t>
        </li>
      </ul>
      <t>For these reasons, this attestation format is called "PKIX Key Attestation" and may be used,
for example within a Certificate Signing Request (CSR) object; <xref target="I-D.ietf-lamps-csr-attestation"/> specifies how to carry evidence within PKCS#10 <xref target="RFC2986"/> or Certificate Request Message Format (CRMF) <xref target="RFC4211"/>.</t>
      <t>This document provides a vendor-agnostic format for attesting to the logical and physical protection properties of a cryptographic key and it envisions uses such as providing evidence to a Certification Authority that a key is being protected in accordance with the requested certificate profile, or that HSMs can perform key import and maintain the private key protection properties in a robust way even when migrating keys across HSMs from different vendors.</t>
    </section>
    <section anchor="terminology">
      <name>Terminology</name>
      <t>The reader is assumed to be familiar with the vocabulary and concepts
defined in <xref target="RFC9334"/>.</t>
      <t>The following terms are used in this document:</t>
      <dl newline="true">
        <dt>Root of Trust (RoT):</dt>
        <dd>
          <t>A set of software and/or hardware components that need to be trusted
to act as a security foundation required for accomplishing the security
goals of a system. In our case, the RoT is expected to offer the
functionality for attesting to the state of the platform, and to attest
the properties of the application key. More precisely, it has to attest
the integrity of the application key (public as well as private key) and the
confidentiality of the private part of the application key. This document makes a simplifying
assumption that the RoT, the attesting environment holding the
attestation key, and the target environment being measured and attested
are all the same environment.</t>
        </dd>
        <dt>Attestation Key (AK):</dt>
        <dd>
          <t>Cryptographic key belonging to the RoT that is only used to sign
attestation tokens.</t>
        </dd>
        <dt>Hardware Security Module (HSM):</dt>
        <dd>
          <t>a physical computing device that safeguards and manages secrets (most importantly cryptographic keys),
and performs encryption, decryption, signing, MACing and other cryptographic operations with the managed
cryptographic keys. HSMs can sometimes host user applications within a secure enclave environment within
the HSM that are often used to extend the cryptographic functionality of the HSM.
This specification takes a broad definition of what counts as an HSM to include smartcards,
USB tokens, and similar devices which this specification refers to as "personal cryptographic tokens",
as well as TPMs, in addition to the usual PCI card, rack-mount, and blade server form-factor
of HSM which this specification refers to as "enterprise-grade" or "cloud-service grade" HSMs.</t>
        </dd>
        <dt>Key Attestation:</dt>
        <dd>
          <t>Evidence containing properties of the environment(s) in which the private
keys are generated and stored. For example, a Relying Party may want to know whether
a private key is stored in a hardware security module and cannot be
exported in cleartext.</t>
        </dd>
        <dt>Usage Protocol:</dt>
        <dd>
          <t>A (security) protocol that requires demonstrating possession of the
private component of the application key.</t>
        </dd>
        <dt>Attestation Token (AT):</dt>
        <dd>
          <t>A collection of claims that a RoT assembles (and signs) with the
purpose of informing - in a verifiable way - relying parties about the
identity and state of the platform. Essentially a type of Evidence as
per the RATS architecture terminology <xref target="RFC9334"/>.</t>
        </dd>
        <dt>Platform Attestation Entity:</dt>
        <dd>
          <t>An Entity containing attributes relating to the security state of the
platform,. The process of generating a platform entity typically involves gathering
data during measured boot.</t>
        </dd>
        <dt>Key Attestation Entity:</dt>
        <dd>
          <t>An Entity containing attributes relating to a specific application key
protected by the HSM. The key attestation service is part
of the root of trust (RoT).</t>
        </dd>
        <dt>Application Key:</dt>
        <dd>
          <t>The application key consists of a private and a public key.  The private key is
used by the usage protocol.  The public key is included in the Key
Attestation Token. The Key Attestation Entity makes claims about the
protection of this key.</t>
        </dd>
        <dt>Trust Anchor:</dt>
        <dd>
          <t>As defined in <xref target="RFC6024"/> and <xref target="RFC9019"/>, a Trust Anchor
"represents an authoritative entity via a public key and
associated data.  The public key is used to verify digital
signatures, and the associated data is used to constrain the types
of information for which the trust anchor is authoritative." The
Trust Anchor may be a certificate, a raw public key, or other
structure, as appropriate.  It can be a non-root certificate when
it is a certificate.</t>
        </dd>
        <dt>Presenter:</dt>
        <dd>
          <t>Party that proves possession of a private key to a recipient of a key
attestation token. Typically this will be an application layer entity,
such as a cryptographiclibrary constructing a Certificate Signing Request
that must embed attestation evidence, or a TLS library attempting to
perform attested TLS. The Presenter is not fulfilling any roles in the
RATS architecture.</t>
        </dd>
        <dt>Recipient:</dt>
        <dd>
          <t>Party that receives the attestation evidence containing the proof-of-possession key
information from the presenter. The Recipient is likely fulfilling
the roles of Verifier and Relying Party in the RATS architecture,
but the exact details of this arrangement is out-of-scope for this
specification.</t>
        </dd>
        <dt>Key Attestation Service (KAS):</dt>
        <dd>
          <t>The module within the HSM that is responsible for parsing the
PKIX Attestation Request, measuring the
Platform and the Key attributes, constructing the PKIX Attestation
object, and signing it with the AK. The KAS fulfills the role of
Attester in the RATS architecture.
Note that real HSMs may or may not implement the Attester as a
single internal module, but this abstraction is used for the
design and security analysis of this specification.</t>
        </dd>
      </dl>
      <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCPÂ 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>
      <?line -18?>

</section>
    <section anchor="sec-arch">
      <name>Architecture and Conceptual Model</name>
      <t>Key attestation is an extension to the attestation functionality
described in <xref target="RFC9334"/>. In the general RATS Architecture, an attesting device
consists of a hardware Root of Trust (RoT) which provides the basis for trust in the device,
and then one or more layers of attestations where an attesting environment collects
and signs measurements (evidence) about a target environment. Trust is
established by chaining the cryptographic signatures on each layer of
evidence up to the next layer of attester until the RoT is reached, and trust
is established in the RoT via 3rd party endorsements.
The target devices for this specification tend to operate on a different
architecture and trust model: the devices consist of one single logical environment
(combining the RATS roles of RoT, attesting environment, and target environment together into
a single entity), and trust is established via product validations conducted by third-party
testing labs against standardized security and functional requirements such
as FIPS 140-3 or a given Common Criteria protection profile. A FIPS or CC
certification provided by a testing lab would conceptually count as an
endorsement of the hardware platform in the RATS architecture, but they
are often not digitally-signed
artifacts, and are often conveyed out of band, sometimes via a website or even
via a paper certificate and so they are out of scope for the wire format
specified in this document.</t>
      <t>As such, the attestation data format defined in this document does not
capture the full functionality of the RATS architecture. If a device producing
evidence in the specified format requires to also carry nested attestation
statements or endorsements, then it must
be achieved by placing the attestation from this draft within another wrapper
layer such as RATS Conceptual Message Wrapper (CMW) [I-D.ietf-rats-msg-wrap-11].</t>
      <figure anchor="fig-arch">
        <name>Architecture</name>
        <artset>
          <artwork type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="448" width="488" viewBox="0 0 488 448" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
              <path d="M 48,368 L 48,432" fill="none" stroke="black"/>
              <path d="M 56,32 L 56,304" fill="none" stroke="black"/>
              <path d="M 72,208 L 72,256" fill="none" stroke="black"/>
              <path d="M 104,264 L 104,360" fill="none" stroke="black"/>
              <path d="M 128,96 L 128,200" fill="none" stroke="black"/>
              <path d="M 144,264 L 144,360" fill="none" stroke="black"/>
              <path d="M 192,368 L 192,432" fill="none" stroke="black"/>
              <path d="M 200,96 L 200,144" fill="none" stroke="black"/>
              <path d="M 248,152 L 248,200" fill="none" stroke="black"/>
              <path d="M 312,96 L 312,144" fill="none" stroke="black"/>
              <path d="M 320,208 L 320,256" fill="none" stroke="black"/>
              <path d="M 336,368 L 336,432" fill="none" stroke="black"/>
              <path d="M 360,32 L 360,304" fill="none" stroke="black"/>
              <path d="M 480,368 L 480,432" fill="none" stroke="black"/>
              <path d="M 56,32 L 360,32" fill="none" stroke="black"/>
              <path d="M 200,96 L 312,96" fill="none" stroke="black"/>
              <path d="M 200,144 L 312,144" fill="none" stroke="black"/>
              <path d="M 72,208 L 320,208" fill="none" stroke="black"/>
              <path d="M 72,256 L 320,256" fill="none" stroke="black"/>
              <path d="M 56,304 L 360,304" fill="none" stroke="black"/>
              <path d="M 48,368 L 192,368" fill="none" stroke="black"/>
              <path d="M 336,368 L 480,368" fill="none" stroke="black"/>
              <path d="M 192,400 L 328,400" fill="none" stroke="black"/>
              <path d="M 48,432 L 192,432" fill="none" stroke="black"/>
              <path d="M 336,432 L 480,432" fill="none" stroke="black"/>
              <polygon class="arrowhead" points="336,400 324,394.4 324,405.6 " fill="black" transform="rotate(0,328,400)"/>
              <polygon class="arrowhead" points="256,152 244,146.4 244,157.6 " fill="black" transform="rotate(270,248,152)"/>
              <polygon class="arrowhead" points="152,360 140,354.4 140,365.6 " fill="black" transform="rotate(90,144,360)"/>
              <polygon class="arrowhead" points="136,96 124,90.4 124,101.6 " fill="black" transform="rotate(270,128,96)"/>
              <polygon class="arrowhead" points="112,264 100,258.4 100,269.6 " fill="black" transform="rotate(270,104,264)"/>
              <g class="text">
                <text x="100" y="52">Hardware</text>
                <text x="172" y="52">Security</text>
                <text x="236" y="52">Module</text>
                <text x="116" y="84">Platform</text>
                <text x="200" y="84">environment</text>
                <text x="256" y="116">Application</text>
                <text x="228" y="132">Keys</text>
                <text x="188" y="196">measurements</text>
                <text x="128" y="228">Attestation</text>
                <text x="112" y="244">Service</text>
                <text x="48" y="324">Attestation</text>
                <text x="172" y="324">PKIX</text>
                <text x="64" y="340">Request</text>
                <text x="200" y="340">Attestation</text>
                <text x="224" y="388">Usage</text>
                <text x="284" y="388">Protocol</text>
                <text x="120" y="404">Presenter</text>
                <text x="408" y="404">Recipient</text>
              </g>
            </svg>
          </artwork>
          <artwork type="ascii-art"><![CDATA[
      .-------------------------------------.
      | Hardware Security Module            |
      |                                     |
      |   Platform environment              |
      |        ^        .-------------.     |
      |        |        | Application |     |
      |        |        | Keys        |     |
      |        |        '-------------'     |
      |        |              ^             |
      |        |              |             |
      |        | measurements |             |
      | .------------------------------.    |
      | | Attestation                  |    |
      | | Service                      |    |
      | '------------------------------'    |
      |     ^    |                          |
      |     |    |                          |
      '-----+----+--------------------------'
Attestation |    | PKIX
    Request |    | Attestation
            |    v
     .-----------------.                 .-----------------.
     |                 | Usage Protocol  |                 |
     |    Presenter    +---------------->|    Recipient    |
     |                 |                 |                 |
     '-----------------'                 '-----------------'
]]></artwork>
        </artset>
      </figure>
      <t><xref target="fig-arch"/> depicts a typical workflow where an external tool queries the HSM
for the status of one or more cryptographic keys that it is protecting ("Application Keys").
The "Presenter" may be, for example, a command-line or graphical user interface which will display
the evidence to an operator or auditor; a cryptographic library which will include
the evidence in a CSR for transmission to a Certification Authority; a TLS library
which will include the evidence in at attested TLS session <xref target="I-D.fossati-tls-attestation"/>;
or similar applications, refered to as the "Usage Protocol".</t>
      <t>This model does not assume any internal structure or logical separation within the HSM
except for the existence of some kind of attestation service which may or may not be logically separate
from the overall HSM Root of Trust, and that this attestation service measures the
required evidence about both the hardware environment and the application keys
that are being attested.
In addition to emitting key attestation evidence, an HSM may also need to parse it,
for example when running in an operational mode that only allows importing keys
from other HSMs at a comparable security level (requires checking for specific claims) or within the same operational network (requires checking the trust anchor of the attestation key certificate chain).
This implies that the attestation service needs to be
part of the core HSM "kernel" and therefore would be subject to validations such as
FIPS 140-3 or Common Criteria, which motivates a design requirement to keep the evidence
data format as simple as possible and as close as possible to existing functionality
and data models of existing HSM and TPM products.
As such, the information model presented in <xref target="sec-data-model"/>
will feel familiar to implementers with experience with PKI and PKCS#11.</t>
      <section anchor="sec-ak-chain">
        <name>Attestation Key Certificate Chain</name>
        <t>The data format in this specification represents attestation evidence and
requires third-party endorsement in order to establish trust. Part of this
endorsement is a trust anchor that chains to the HSM's attestation key (AK)
which signs the evidence. In practice the trust anchor will usually be a
manufacturing CA belonging to the device vendor which proves
that the device is genuine and not counterfeit. The trust anchor can also belong
to the device operator as would be the case when the AK certificate is replaced
as part of onboarding the device into a new operational network.</t>
        <t>Note that the data format specified in <xref target="sec-data-model"/> allows for zero, one, or multiple
'SignatureBlock's, so a single evidence statement could be un-protected, or could be endorsed by multiple
AK chains leading to different trust anchors. See <xref target="sec-verif-proc"/> for a discussion of handling multiple SignatureBlocks.</t>
      </section>
    </section>
    <section anchor="sec-data-model">
      <name>Information Model</name>
      <t>This section describes the semantics of the key claims as part of the information
model.</t>
      <t>The envelop structure is:</t>
      <sourcecode type="asn.1"><![CDATA[
PkixAttestation ::= SEQUENCE {
    tbs TbsPkixAttestation,
    signatures SEQUENCE SIZE (0..MAX) of SignatureBlock
}

TbsPkixAttestation ::= SEQUENCE {
    version INTEGER,
    reportedEntities SEQUENCE SIZE (1..MAX) OF ReportedEntity
}

SignatureBlock ::= SEQUENCE {
   certChain SEQUENCE of Certificate,
   signatureAlgorithm AlgorithmIdentifier,
   signatureValue OCTET STRING
}
]]></sourcecode>
      <t>A PkixAttestation message is composed of a protected section known as the To-Be-Signed or TBS. The integrity of the To-Be-Signed section is ensured with one or multiple cryptographic signatures over the content of the section. There is a provision to carry the X.509 certificates supporting the signature(s).</t>
      <t>The TBS section is composed of a version number, to ensure future extensibility, and a sequence of reported entities.</t>
      <t>For compliance with this specification, <tt>TbsPkixAttestation.version</tt> <bcp14>MUST</bcp14> be <tt>1</tt>.
This envelope format is not extensible; future specifications which make compatibility-breaking changes <bcp14>MUST</bcp14> increment the version number.</t>
      <t>EDNOTE: do we want extension marks on the TbsAttestation object? I can see pros and cons to doing that.</t>
      <t><tt>SignatureBlock.certChain</tt> <bcp14>MUST</bcp14> contain at least one X.509 certificate as per <xref target="RFC5280"/>.
While there might exist attesting environments which use out-of-band or non-X.509 mechanisms for communicating
the AK public key to the Verifier, these <bcp14>SHALL</bcp14> be considered non-compliant with this specification.</t>
      <t>The attribute format is intended to be generic, flexible, and extensible with a default set of attributes defined in this document. Attributes are grouped into entities; an entity can be either a key, a platform, or a request containing a set of claims that are requested to be filled by the attesting environment.</t>
      <sourcecode type="asn.1"><![CDATA[
ReportedEntity ::= SEQUENCE {
    entityType         OBJECT IDENTIFIER,
    reportedAttributes SEQUENCE SIZE (1..MAX) OF ReportedAttribute
}
]]></sourcecode>
      <t>A reported entity is a unit of observation measured by the Attester (the HSM). In this specification, there are three types of entities defined:
- Platform Entity : An entity that reports attributes about the platform, itself. A PKIX Attestation <bcp14>MAY</bcp14> contain only one Platform Entity.
- Key Entity : An entity that represents a single cryptographic key found in a HSM ad its associated attributes. A PKIX Attestation <bcp14>MAY</bcp14> contain one or more Key Entities.
- Transaction Entity : An entity reporting attributes observed from the request itself. A PKIX Attestation <bcp14>MAY</bcp14> contain only one Transaction Entity.</t>
      <t>A reported entity is composed of an Object Identifier (OID), specifying the entity type, and a sequence of reported attributes associated with the entity.</t>
      <t>Although this specification defines only three types of entities, implementations <bcp14>MAY</bcp14> define additional entity types by registering additional OIDs.</t>
      <t>An Attester (HSM) which is requested to provide information about unrecognized entity types <bcp14>MUST</bcp14> fail the operation.</t>
      <t>A Verifier which encounters an unrecognized entity type <bcp14>MAY</bcp14> ignore it.</t>
      <sourcecode type="asn.1"><![CDATA[
id-pkix-attest                    OBJECT IDENTIFIER ::= { 1 2 3 999 }
id-pkix-attest-entity-type        OBJECT IDENTIFIER ::= { id-pkix-attest 0 }
id-pkix-attest-entity-transaction OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 0 }
id-pkix-attest-entity-platform    OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 1 }
id-pkix-attest-entity-key         OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 2 }
id-pkix-attest-entity-request     OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 3 }
]]></sourcecode>
      <t>TODO: do we need entity types for "platform policy" and "key policy" ?</t>
      <t>A PKIX Attestation <bcp14>MUST NOT</bcp14> contain more than one platform entity since duplicate and conflicting platform claims across multiple platform entities can easily lead to security bugs.
A parser <bcp14>MUST</bcp14> fail with an error if it encouters multiple platform entities.</t>
      <t>A PKIX Attestation <bcp14>MUST NOT</bcp14> contain more than one transaction entity. A transaction entity contains attributes that are related to the request such as a "nonce".
A parser <bcp14>MUST</bcp14> fail with an error if it encouters multiple transaction entities.</t>
      <t>A PKIX Attestation <bcp14>MAY</bcp14> contain one or more application key entities. Each key entity <bcp14>SHOULD</bcp14> describe a unique application key. Multiple ReportedEntity objects of type <tt>entity-key</tt> that describe the same application key <bcp14>SHOULD</bcp14> be avoided since different or conflicting claims could lead to security issues on the part of the Verifier or Relying Party.</t>
      <t>TODO: note that we need to be careful about whether it is allowed to include the AK(s) and other "platform-owned" keys in the set of keys you can attest, or only attesting application keys.</t>
      <t>Each reported attribute is composed of an Object Identifier (OID), identifying the type of the attribute, and a value which must be one of the prescribed data types.</t>
      <sourcecode type="asn.1"><![CDATA[
ReportedAttribute ::= SEQUENCE {
    attributeType      OBJECT IDENTIFIER,
    value              OPTIONAL AttributeValue
}

AttributeValue :== CHOICE {
   bytes       [0] IMPLICIT OCTET STRING
   utf8String  [1] IMPLICIT UTF8String,
   bool        [2] IMPLICIT BOOLEAN,
   time        [3] IMPLICIT GeneralizedTime,
   int         [4] IMPLICIT INTEGER,
   oid         [5] IMPLICIT OBJECT IDENTIFIER
}
]]></sourcecode>
      <t>An attribute type is generally associated with a single entity type. In the following sub-sections, defined attributes are grouped according to their related entity types.</t>
      <t>There are circumstances where an attribute type can be repeated for a given entity while other attribute types are unique.
For example, the <tt>hwmodel</tt>, <tt>uptime</tt>, and <tt>fipsboot</tt> attributes are not allowed to have multiple instances since these are global measurements of the platform. However, other attribute types such as <tt>usermods</tt> allow multiple instances as an HSM can have more than one user module loaded. The tables below list for each attribute type whether multiples are allowed.
For attribute types that do not allow multiples, a parser <bcp14>MUST</bcp14> fail with an error if it encouters multiple instances.
For attribute types that allow multiples, a parser <bcp14>MUST</bcp14> treat each one as an independent attribute and <bcp14>MUST NOT</bcp14>, for example, consider later ones to overwrite the previous one. Appraisal policies and profiles <bcp14>SHOULD</bcp14> be clear about how to handle multiples when requiring attribute types that allow multiples.</t>
      <t>PKIX Attestation Requests are discussed in <xref target="sec-reqs"/>.
In the tables in the sections that follow, the column "Request Contains a Value" specifies whether,
when the given attribute appears in a request, whether it is to be a valued or un-valued request attribute as described in <xref target="sec-reqs"/>.</t>
      <section anchor="transaction-attributes">
        <name>Transaction Attributes</name>
        <t>A default and vendor-agnostic set of transaction attributes is defined in this section.</t>
        <t>These attribute types <bcp14>MAY</bcp14> be contained within a transaction entity; i.e. an entity identified by <tt>id-pkix-attest-entity-transaction</tt>.</t>
        <table>
          <thead>
            <tr>
              <th align="left">Attribute</th>
              <th align="left">AttributeValue</th>
              <th align="left">Reference</th>
              <th align="left">Multiple Allowed</th>
              <th align="left">Request Contains a Value</th>
              <th align="left">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">nonce</td>
              <td align="left">bytes</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST</bcp14></td>
              <td align="left">Repeats a "nonce" provided during the atttestation request.</td>
            </tr>
            <tr>
              <td align="left">timestamp</td>
              <td align="left">time</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">The time at which this attestation was generated. Corresponds to EAT IAT claim.</td>
            </tr>
          </tbody>
        </table>
        <section anchor="nonce">
          <name>nonce</name>
          <t>The nonce attribute is used to provide "freshness" quality as to the information provided by the Attester (HSM) in the PkixAttestation message. A client requesting a PkixAttestation message <bcp14>MAY</bcp14> provide a nonce value as part of the request. This nonce value, if provided, <bcp14>SHOULD</bcp14> be repeated as an attribute to the transaction entity.</t>
        </section>
        <section anchor="time">
          <name>time</name>
          <t>The time at which this attestation was generated, according to the internal system clock of the HSM.</t>
          <t>Note that it is common for HSMs to not have an accurate system clock; consider an HSM for a root CA kept offline and booted up infrequently in an local network segregated from all other network, or a smart card which boots up only when held against an NFC reader. Implementers of emitters <bcp14>SHOULD</bcp14> include this attribute only if the device reliably knows its own time (for example has had recent contact with an NTP server). Implementers of parsers <bcp14>SHOULD</bcp14> be wary of trusting the contents of this attribute. A challenge-response protocol that makes use of the nonce attribute is a far more reliable way of establishing freshness.</t>
        </section>
      </section>
      <section anchor="platform-attributes">
        <name>Platform Attributes</name>
        <t>A default and vendor-agnostic set of platform attributes is defined in this section.</t>
        <t>These attribute types <bcp14>MAY</bcp14> be contained within a platform entity; i.e. an entity identified by <tt>id-pkix-attest-entity-platform</tt>.</t>
        <table>
          <thead>
            <tr>
              <th align="left">Attribute</th>
              <th align="left">AttributeValue</th>
              <th align="left">Reference</th>
              <th align="left">Multiple Allowed</th>
              <th align="left">Request Contains a Value</th>
              <th align="left">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">vendor</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">A human-readable string by which the vendor identifies themself.</td>
            </tr>
            <tr>
              <td align="left">oemid</td>
              <td align="left">bytes</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">The EAT OEM ID as defined in <xref target="I-D.ietf-rats-eat"/>.</td>
            </tr>
            <tr>
              <td align="left">hwmodel</td>
              <td align="left">utf8String</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Model or product line of the hardware module.</td>
            </tr>
            <tr>
              <td align="left">hwserial</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Serial number of the hardware module, often matches the number engraved or stickered on the case.</td>
            </tr>
            <tr>
              <td align="left">swversion</td>
              <td align="left">utf8String</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">A text string identifying the firmware or software running on the HSM.</td>
            </tr>
            <tr>
              <td align="left">dbgstat</td>
              <td align="left">int</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Indicates whether the HSM is currently in a debug state, or is capable in the future of being turned to a debug state. Semantics and integer codes are defined in <xref target="I-D.ietf-rats-eat"/>.</td>
            </tr>
            <tr>
              <td align="left">uptime</td>
              <td align="left">int</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Contains the number of seconds that have elapsed since the entity was last booted.</td>
            </tr>
            <tr>
              <td align="left">bootcount</td>
              <td align="left">int</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Contains a count of the number of times the entity has been booted.</td>
            </tr>
            <tr>
              <td align="left">usermods</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">Yes</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">This attribute lists user modules currently loaded onto the HSM in a human readable format, preferabbly JSON.</td>
            </tr>
            <tr>
              <td align="left">fipsboot</td>
              <td align="left">bool</td>
              <td align="left">[FIPS.140-3]</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Indicates whether the devices is currently running in FIPS mode.</td>
            </tr>
            <tr>
              <td align="left">fipsver</td>
              <td align="left">utf8String</td>
              <td align="left">[FIPS.140-3]</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Indicates the version of the FIPS CMVP standard that is being enforced. At time of writing this is typically "FIPS 140-2" or "FIPS 140-3".</td>
            </tr>
            <tr>
              <td align="left">fipslevel</td>
              <td align="left">int</td>
              <td align="left">[FIPS.140-3]</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Indicates the FIPS Level to which the device is currently operating in compliance with.</td>
            </tr>
            <tr>
              <td align="left">envid</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">Yes</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">An environment ID, which will typically be a URI, UUID, or similar.</td>
            </tr>
            <tr>
              <td align="left">envdesc</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">Yes</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Further description of the environment.</td>
            </tr>
          </tbody>
        </table>
        <t>TODO: find the actual reference for "FIPS Mode" -- FIPS 140-3 does not define it (at least not the 11 page useless version of 140-3 that I found).</t>
        <t>Each attribute has an assigned OID, see <xref target="sec-asn1-mod"/>.</t>
        <t>Some of the attributes defined in this specification have further details below.</t>
        <section anchor="usermods">
          <name>usermods</name>
          <t>Most HSMs have some concept of trusted execution environment where user software modules can be loaded inside the HSM to run with some level of privileged access to the application keys. This attribute lists user modules currently loaded onto the HSM in a human readable format, preferably JSON.</t>
        </section>
        <section anchor="fipsboot-fipsver-and-fipslevel">
          <name>fipsboot, fipsver and fipslevel</name>
          <t>FIPS 140-3 CMVP validation places stringent requirements on the mode of operation of the device and the cryptography offered by the module, including only enabling FIPS-approved algorithms, certain requirements on entropy sources, and extensive start-up self-tests. FIPS 140-3 offers compliance levels 1 through 4 with increasingly strict requirements. Many HSMs include a configuration setting that allows the device to be taken out of FIPS mode and thus enable additional functionality or performance, and some offer configuration settings to change between compliance levels.</t>
          <t>The boolean attribute <tt>fipsboot</tt> indicates whether the device is currently operating in FIPS mode. For most HSMs, changing this configuration setting from <tt>fipsboot=true</tt> to <tt>fips-boos=false</tt> is destructive and will result in zeroization of all cryptographic keys held within the module.</t>
          <t>The UTF8String attribet <tt>fipsver</tt> indicates the version of the FIPS CMVP specification with which the device's operational mode is compliant. At the time of writing, the strings "FIPS 140-2" or "FIPS 140-3" <bcp14>SHOULD</bcp14> be used.</t>
          <t>The integer attribute <tt>fipslevel</tt> indicates the compliance level to which the device is currently operating and <bcp14>MUST</bcp14> only be 1, 2, 3, or 4. The <tt>fipslevel</tt> attribute has no meaning if <tt>fipsboot</tt> is absent or <tt>false</tt>.</t>
          <t>The FIPS status information in a PKIX Attestation indicates only the mode of operation of the device and is not authoritative of its validation status.
This information is available on the NIST CMVP website or by contacting the device vendor.
As an example, some devices may have the option to enable FIPS mode in configuration even if the vendor has not sumbitted this model for validation. As another example, a device may be running in a mode consistent with FIPS Level 3 but the device was only validated and certified to Level 2.
A Relying Party wishing to know the validation status of the device <bcp14>MUST</bcp14> couple the device state information contained in the attestation with a valid FIPS CMVP certificate for the device.</t>
        </section>
        <section anchor="envid">
          <name>envid</name>
          <t>An identifier for an environment to which the attested keys belong. These will be an a vendor-chosen format, but are constrained to ASCII as URIs, UUID, and similar types of identifiers are envisioned.</t>
          <t>There <bcp14>MAY</bcp14> be multiple envid attributes if the attested keys simultaneously belong to multiple environments.</t>
          <t>Note that by including envid as a Platform Attribute, this implies that it applies to all attested key entities. If the HSM needs to attest multiple keys across multiple disjoint environments, then multiple PKIXAttestations are required. This naturally enforces privacy constraints of only attesting a single environment at a time.</t>
          <t>If an envdid request attribute contains a value, this means that the Presenter is requesting that only keys belogning to the given environment be included in the returned attestation.</t>
        </section>
        <section anchor="envdesc">
          <name>envdesc</name>
          <t>Further description of the environment beyond hwvendor, hwmodel, hwserial, swversion; for example if there is a need to describe multiple logical partitions within the same device. Contents could be a human-readable description or other identifiers.</t>
        </section>
      </section>
      <section anchor="key-attributes">
        <name>Key Attributes</name>
        <t>A default and vendor-agnostic set of key attributes is defined in this section.</t>
        <t>These attribute types <bcp14>MAY</bcp14> be contained within a key entity; i.e. an entity identified by <tt>id-pkix-attest-entity-key</tt>.</t>
        <table>
          <thead>
            <tr>
              <th align="left">Attribute</th>
              <th align="left">AttributeValue</th>
              <th align="left">Reference</th>
              <th align="left">Multiple Allowed</th>
              <th align="left">Request Contains a Value</th>
              <th align="left">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">identifier</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">Yes</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Identifies the subject key, with a vendor-specific format which could be numeric, UUID, or other textual identifier.</td>
            </tr>
            <tr>
              <td align="left">spki</td>
              <td align="left">bytes</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">A complete DER-encoded SubjectPublicKeyInfo representing the public key associated with the asymetric key pair being attested.</td>
            </tr>
            <tr>
              <td align="left">purpose</td>
              <td align="left">bytes</td>
              <td align="left">
                <xref target="PKCS11"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Defines the intended usage for the key.</td>
            </tr>
            <tr>
              <td align="left">extractable</td>
              <td align="left">bool</td>
              <td align="left">
                <xref target="PKCS11"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Indicates if the key is able to be exported from the module. Corresponds directly to PKCS#11 CKA_EXTRACTABLE.</td>
            </tr>
            <tr>
              <td align="left">sensitive</td>
              <td align="left">bool</td>
              <td align="left">
                <xref target="PKCS11"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Indicates that the key cannot leave the module in plaintext. Corresponds directly to PKCS#11 CKA_SENSITIVE.</td>
            </tr>
            <tr>
              <td align="left">never-extractable</td>
              <td align="left">bool</td>
              <td align="left">
                <xref target="PKCS11"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Indicates if the key was able to be exported from the module. Corresponds directly to PKCS#11  CKA_NEVER_EXTRACTABLE.</td>
            </tr>
            <tr>
              <td align="left">local</td>
              <td align="left">bool</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Indicates whether the key was generated locally or imported.</td>
            </tr>
            <tr>
              <td align="left">expiry</td>
              <td align="left">time</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Defines the expiry date or "not after" time for the key.</td>
            </tr>
            <tr>
              <td align="left">protection</td>
              <td align="left">bytes</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Indicates any additional key protection properties.</td>
            </tr>
          </tbody>
        </table>
        <t>PKCS#11 private key attributes can be somewhat complex to parse, especially as their exact meanings can vary by the key type and the exact details of key export mechanisms supported by the HSM.</t>
        <t>In most cases, the Verifier of a PKIX Attestation will want to know simply that the key is in hardware and cannot be extracted to be used with a software cryptographic module. A setting of <tt>extractable=false</tt> satisfies this requirement. Generally <tt>extractable=true &amp;&amp; sensitive=true</tt> also satisfies this requirement as the key cannot be extracted in plaintext, but only under key wrap. This is common in HSM clustering scenarios, and is also common in scenarios where keys are exported under wrap so that they can be stored in an off-board database for re-import later, thus allowing the HSM to protect and manage a much larger set of keys than it has internal memory for. The <tt>never-extractable</tt> and <tt>local</tt> attributes give additional assurance that the key has always been in hardware and was not imported from software.</t>
        <section anchor="purpose">
          <name>purpose</name>
          <t>TODO: probably need to define a mapping from PKCS#11 CKA enums to a bit-indexed byte array.</t>
        </section>
        <section anchor="protection">
          <name>protection</name>
          <t>Indicates any additional key protection properties around use or modification of this key. These are generalized properties and will not apply the same way to all HSM vendors. Consult vendor documentation for the in-context meaning of these flags.</t>
          <t>TODO: define a bit-indexed byte array</t>
          <t>BIT MASK / Boolean Array {DualControl (0), CardControl (1), PasswordControl (2), ...}</t>
          <t>We may need to say that the first X are reserved for use by future RFCs that update this specification, and beyond that is private use.</t>
        </section>
      </section>
      <section anchor="sec-additional-attr-types">
        <name>Additional Entity and Attribute Types</name>
        <t>It is expected that HSM vendors will register additional Entity and Attribute types by assigning OIDs from their own proprietary OID arcs to hold data describing additional proprietary key properties.</t>
        <t>An Attester (HSM) which is requested to provide information about unrecognized Entity or Attribute types <bcp14>MUST</bcp14> fail the operation.</t>
        <t>A Verifier which encounters an unrecognized Entity or Attribute type <bcp14>MAY</bcp14> ignore it.</t>
      </section>
      <section anchor="encoding">
        <name>Encoding</name>
        <t>A PKIXAttestation is to be DER encoded <xref target="X.690"/>.</t>
        <t>If a textual representation is required, then the DER encoding <bcp14>MAY</bcp14> be subsequently encoded into Base64.</t>
        <t>EDNOTE: I think we have to be precise about which flavour of Base64 we are referrring to.</t>
      </section>
    </section>
    <section anchor="signing-procedure">
      <name>Signing Procedure</name>
      <t>The <tt>SignatureBlock.signatureValue</tt> signs over the DER-encoded to-be-signed attestation data
<tt>PkixAttestation.tbs</tt> and <bcp14>MUST</bcp14> be validated with the subject public key of the leaf
X.509 certificate contained in the <tt>SignatureBlock.certChain</tt>.</t>
    </section>
    <section anchor="sec-verif-proc">
      <name>Verification Procedure</name>
      <t>The <tt>SignatureBlock.signatureValue</tt> signs over the DER-encoded to-be-signed attestation data
<tt>PkixAttestation.tbs</tt> and <bcp14>MUST</bcp14> be validated with the subject public key of the leaf
X.509 certificate contained in the <tt>SignatureBlock.certChain</tt>.</t>
      <t>Note that a PkixAttestation <bcp14>MAY</bcp14> contain zero or more SignatureBlocks.
A PkixAttestation with zero SignatureBlocks is unsigned, <bcp14>MUST</bcp14> be treated as un-protected and un-trusted,
and any signature validation procedure <bcp14>MUST</bcp14> fail.</t>
      <t>More than one SignatureBlocks <bcp14>MAY</bcp14> be used to convey a number of different semantics.
For example, the HSM's Attesting Service might hold multiple Attestation Keys on different cryptographic
algorithms in order to provide algorithm redundancy in the case that one algorithm becomes cryptographically broken. In this case a Verifier would be expected to validate all SignatureBlocks. Alternatively, the HSM's Attesting Service may hold multiple Attestion Keys (or multiple X.509 certificates for the same key) from multiple operational environments to which it belongs. In this case a Verifier would be expected to only validate the SignatureBlock corresponding to its own environment. Alternatively, multiple SignatureBlocks could be used to convey counter-signatures from external parties, in which case the Verifier will need to be equipped with environment-specific verification logic. Multiple of these cases, and potentially others, could be present in a single PkixAttestation object.</t>
      <t>Note that each SignatureBlock is a fully detached signature over the tbs content with no binding between the signed content and the SignatureBlocks, or between SignatureBlocks, meaning that a third party can add a
counter-signature of the evidence after the fact, or an attacker can remove a SignatureBlock without leaving any artifact. See {#sec-detached-sigs} for further discussion.</t>
    </section>
    <section anchor="sec-reqs">
      <name>Attestation Requests</name>
      <t>EDNOTE: MikeO: this is complex, but I'm not really sure how to define a request format in any simpler way. Ideas are welcome!</t>
      <t>This section specifies a standardized format that a Presenter can use to request a PKIX Attestation about a specific key or set of keys, a specific environment, or containing specific attributes.</t>
      <t>Hardware Security Modules range greatly in size and complexity from personal cryptographic tokens containing a single application key such as a smartcard acting as a personal ID card, up to clusters of enterprise-grade HSMs serving an entire cloud service.</t>
      <t>The manufacturer of a HSM device with limited capabilities may implement a response to the attestation request which includes a fixed set of reported entities, each with a fixed set of reported attributes and parses an Attestion Request object only for the purposes of extracting the nonce.</t>
      <t>On the other hand, an enterprise grade HSM with the capability to hold a large number of private keys is expected to be capable of parsing attestation requests such that a Presenter can request attestation of specific key(s) by their identifier, or request attestation of all keys with given key attributes within a given sub-environment of the HSM. A full implementation will also create a PKIX Attestation containing exactly the set of requested attributes so that the Presenter can fine-tune the information that it wishes to disclose to the Recipient.</t>
      <t>A PKIX Attestation Request consists of a un-signed TbsPkixAttestation object containing a single <tt>ReportedEntity</tt> identified with <tt>id-pkix-attest-entity-request</tt>, called a request entity. A TbsPkixAttestation containing a request entity <bcp14>MUST NOT</bcp14> contain any other type of entities. Request entities <bcp14>MAY</bcp14> contain Attributes of any type; transaction, platform, key, or any additional attribute type. Any attribute contained in a request entity is called a request attribute. Request entities <bcp14>MUST NOT</bcp14> appear in PKIX Attestation response objects. The TbsPkixAttestation object of an attestation request <bcp14>MAY</bcp14> appear inside a signed PKIXAttestation for the purposes of authenticating and authorizing the requester, but the semantics of doing so are left to the implementer.</t>
      <t>An Attester that supports Attestation Requests <bcp14>MUST</bcp14>, at the minimum, support extracting the value from a <tt>nonce</tt> attribute and echoing it into a <tt>nonce</tt> attribute within a TransactionEntity.</t>
      <t>Some request attributes contain a value that the HSM uses as a filter or search parameter in constructing the PKIX Attestation; these are called valued requests attributes.
Other requests attributes omit the optional <tt>value</tt> field so that they consist of only the attribute type OID and indicate that the HSM <bcp14>SHOULD</bcp14> collect and return the appropriate measurement; these are called un-valued request attributes.
An Attester <bcp14>SHOULD</bcp14> return a PKIX Attestation containing exactly the set of attributes listed in the request, including both valued and un-valued request attributes but <bcp14>MAY</bcp14> omit requested attributes if it cannot be measured in the current device configuration.
Note that an Attestation Request will contain all request attributes inside a single request entity, but the HSM <bcp14>MUST</bcp14> sort the attributes in the response PKIX Attestation into the appropriate entity types.
For example, if the request contains the key <tt>purpose</tt> attribute (either valued or un-valued), then all returned key entities will contain the <tt>purpose</tt> attribute when this data is available for the given key.
The tables in the following sections indicate whether an attribute of the given type <bcp14>MUST</bcp14>, <bcp14>MAY</bcp14>, or <bcp14>MUST NOT</bcp14> contain a value when included in a request entity.</t>
      <t>Generally errors should be handled gracefully by simply omitting an unfulfillable request attribute from the response.
An example would be if the <tt>hwserial</tt> attribute was requested but the devices does not have a serial number.
However in some cases a fatal error <bcp14>MAY</bcp14> be returned, for example if attestation of a specific key is requested by key identifier or SubjectPublicKeyInfo but the HSM does not contain a matching key.
HSMs <bcp14>SHOULD</bcp14> ignore request attributes with unrecognized type OIDs.</t>
      <t>Generally, the Attester <bcp14>SHOULD NOT</bcp14> include additional attributes beyond those that were requested. This is to allow the Presenter to fine-tune the information that will be disclosed to the Recipient.
Further privacy concerns are discussed in <xref target="sec-cons-privacy"/>.
However, in some contexts this <bcp14>MAY</bcp14> be appropriate, for example, a request containing only a key <tt>identifier</tt> attribute could be responded to with the full set of platform and key attributes that apply to that key.
Discretion is left to implementers.</t>
      <t>For both error handling and privacy reasons, the Presenter <bcp14>SHOULD</bcp14> check that the returned PKIX Attestation contains the expected attributes prior to forwarding it to the Recipient.</t>
    </section>
    <section anchor="sec-profiles">
      <name>Appraisal Policies and Profiles</name>
      <t>This section provides some sample profiles of appraisal policies that verifiers
<bcp14>MAY</bcp14> apply when evaluating evidence. These appraisal profiles represent environment-specific requirements
on the contents of the evidence and / or endorsement certificate chain.</t>
      <section anchor="key-import-into-an-hsm">
        <name>Key Import into an HSM</name>
        <t>An HSM which is compliant with this draft <bcp14>SHOULD</bcp14> validate any PKIX Key Attestations that are provided
along with the key being imported.</t>
        <t>The SignatureBlocks <bcp14>MUST</bcp14> be validated and <bcp14>MUST</bcp14> chain to a trust anchor known to the HSM. In most cases this will
be the same trust anchor that endorsed the HSMs own AK, but the HSM <bcp14>MAY</bcp14> be configured with set of third party trust anchors from which it will accept key attestations.</t>
        <t>If the HSM is operating in FIPS Mode, then it <bcp14>MUST</bcp14> only import keys from HSMs also operating in FIPS Mode.</t>
        <t>The claims <tt>key-purpose</tt>, <tt>key-extractable</tt>, <tt>key-never-extractable</tt>, <tt>key-local</tt> <bcp14>MUST</bcp14> be checked and honoured during key import, which typically means that after import, the key <bcp14>MUST NOT</bcp14> claim a stronger protection property than it had on the previous hardware. In other words, Key Attestation allows and requires that key protection properties be preserved over export / import operations between different HSMs, and this format provides a vendor-agnostic
way to acheive this.</t>
        <t>How to handle errors is outside the scope of this specification and is left to implementors; for example the
key import <bcp14>MAY</bcp14> be aborted, or a prompt <bcp14>MAY</bcp14> be given to the user administrator, or any similar reasonable error handling logic.</t>
      </section>
      <section anchor="cabrowser-forum-code-signing">
        <name>CA/Browser Forum Code-Signing</name>
        <t>TODO: ... intro text</t>
        <t>The subscriber <bcp14>MUST</bcp14>:</t>
        <ul spacing="normal">
          <li>
            <t>Provide the CA with a CSR containing the subscriber key.</t>
          </li>
          <li>
            <t>Provide an attestation token as per this specification describing the private key protection properties of the subscriber's private key. This token <bcp14>MAY</bcp14> be transported inside the CSR as per draft-ietf-lamps-csr-attest, or it <bcp14>MAY</bcp14> be transported adjacent to the CSR over any other certificate enrollment mechanism.</t>
          </li>
        </ul>
        <t>The CA / RA / RP / Verifier <bcp14>MUST</bcp14>:</t>
        <ul spacing="normal">
          <li>
            <t>Ensure that the subscriber key which is the subject of the CSR is also described by a KAT by matching either the key fingerprint or full SubjectPublicKeyInfo.</t>
          </li>
          <li>
            <t>The hardware root-of-trust described by a PAT has a valid and active FIPS certificate according to the NIST CMVP database.</t>
          </li>
          <li>
            <t>The attestation signing key (AK) which has signed the attestation token chains to a root certificate that A) belongs to the hardware vendor described in the PAT token, and B) is trusted by the CA / RA / RP / Verifier to endorse hardware from this vendor, for example through a CA's partner program or through a network operator's device on-boarding process.</t>
          </li>
          <li>
            <t>The key is protected by a module running in FIPS mode. The parsing logic is to start at the leaf KAT token that matches the key in the CSR and parsing towards the root PAT ensuring that there is at least one <tt>fipsboot=true</tt> and no <tt>fipsboot=false</tt> on that path.</t>
          </li>
        </ul>
      </section>
    </section>
    <section anchor="sec-asn1-mod">
      <name>ASN.1 Module</name>
      <sourcecode type="asn.1"><![CDATA[
<CODE STARTS>

PKIX-Key-Attest-2025
      { iso(1) identified-organization(3) dod(6) internet(1) 
        security(5) mechanisms(5) pkix(7) id-mod(0) 
        id-mod-pkik-key-attest-2025(TBDMOD) }


PkixAttestation ::= SEQUENCE {
    tbs TbsPkixAttestation,
    signatures SEQUENCE SIZE (0..MAX) of SignatureBlock
}

TbsPkixAttestation ::= SEQUENCE {
    version INTEGER,
    reportedEntities SEQUENCE SIZE (1..MAX) OF ReportedEntity
}

ReportedEntity ::= SEQUENCE {
    entityType         OBJECT IDENTIFIER,
    reportedAttributes SEQUENCE SIZE (1..MAX) OF ReportedAttribute
}

ReportedAttribute ::= SEQUENCE {
    attributeType      OBJECT IDENTIFIER,
    value              AttributeValue
}

AttributeValue :== CHOICE {
   bytes       [0] IMPLICIT OCTET STRING
   utf8String  [1] IMPLICIT UTF8String,
   bool        [2] IMPLICIT BOOLEAN,
   time        [3] IMPLICIT GeneralizedTime,
   int         [4] IMPLICIT INTEGER,
   oid         [5] IMPLICIT OBJECT IDENTIFIER
}

SignatureBlock ::= SEQUENCE {
   certChain SEQUENCE of Certificate,
   signatureAlgorithm AlgorithmIdentifier,
   signatureValue OCTET STRING
}

id-pkix-attest OBJECT IDENTIFIER ::= { 1 2 3 999 }

id-pkix-attest-entity-type        OBJECT IDENTIFIER ::= { id-pkix-attest 0 }
id-pkix-attest-entity-transaction OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 0 }
id-pkix-attest-entity-platform    OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 1 }
id-pkix-attest-entity-key         OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 2 }

id-pkix-attest-attribute-type OBJECT IDENTIFIER ::= { id-pkix-attest 1 }

id-pkix-attest-attribute-transaction       OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-type 0 }
id-pkix-attest-attribute-transaction-nonce OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-transaction 0 }

id-pkix-attest-attribute-platform            OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-type 1 }
id-pkix-attest-attribute-platform-vendor     OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 0 }
id-pkix-attest-attribute-platform-hwserial   OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 1 }
id-pkix-attest-attribute-platform-fipsboot   OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 2 }
id-pkix-attest-attribute-platform-desc       OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 3 }
id-pkix-attest-attribute-platform-time       OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 4 }
id-pkix-attest-attribute-platform-swversion  OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 5 }
id-pkix-attest-attribute-platform-oemid      OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 6 }
id-pkix-attest-attribute-platform-debugstat  OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 7 }
id-pkix-attest-attribute-platform-uptime     OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 8 }
id-pkix-attest-attribute-platform-bootcount  OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 9 }
id-pkix-attest-attribute-platform-usermods   OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 8 }
id-pkix-attest-attribute-platform-envid      OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 9 }
id-pkix-attest-attribute-platform-envdesc    OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 10 }
id-pkix-attest-attribute-platform-fipsver  OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 11 }
id-pkix-attest-attribute-platform-fipslevel  OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 12 }



id-pkix-attest-attribute-key                   OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-type 2 }
id-pkix-attest-attribute-key-identifier        OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 0 }
id-pkix-attest-attribute-key-spki              OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 1 }
id-pkix-attest-attribute-key-purpose           OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 2 }
id-pkix-attest-attribute-key-extractable       OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 3 }
id-pkix-attest-attribute-key-never-extractable OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 4 }
id-pkix-attest-attribute-key-local             OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 5 }
id-pkix-attest-attribute-key-expiry            OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 6 }
id-pkix-attest-attribute-key-protection        OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 7 }

<CODE ENDS>

]]></sourcecode>
    </section>
    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <t>Please replace "RFCthis" with the RFC number assigned to this document.</t>
      <t>TODO: list out all the OIDs that need IANA registration.</t>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>A Verifier <bcp14>MAY</bcp14> reject a PKIX Attestation if it lacks required attributes per their
appraisal policy. For example, if a Relying Party mandates a FIPS-certified device,
it <bcp14>SHOULD</bcp14> reject evidence lacking sufficient information to verify the device's FIPS
certification status.</t>
      <section anchor="sec-cons-simple">
        <name>Simple to Implement</name>
        <t>The nature of attestation requires the attestation service to be implemented in an extremely privileged position within the HSM so that it can collect measurements of both the hardware environment and the application keys being attested. For many HSM and TPM architectures, this will place the Attestation Service inside the "HSM kernel" and potentially subject to FIPS 140-3 or Common Criteria validation and change control. For both security and compliance reasons there is incentive for the emitting and parsing logic to be simple and easy to implement correctly. Additionally, when the data formats contained in this specification are parsed within an HSM boundary -- that would be parsing a request entity, or parsing an attestation produced by a different HSM -- implementers <bcp14>SHOULD</bcp14> opt for simple logic that rejects any data that does not match the expected format instead of attempting to be flexible.</t>
        <t>In particular, Attesting Services <bcp14>SHOULD</bcp14> generate the attestation object from scratch and avoid copying any content from the request. Attesting Services <bcp14>MUST NOT</bcp14> allow unrecognized attributes or any attribute value other than the nonce to be echoed from the request into the attestation object.</t>
      </section>
      <section anchor="sec-detached-sigs">
        <name>Detached Signatures</name>
        <t>TODO beef this up</t>
        <t>No indication within the tbs content about what or how many signatures to expect.</t>
        <t>A SignatureBlock can be trivially stripped off without leaving any evidence.</t>
        <t>When multiple SignatureBlocks are used for providing third party counter-signatures, note that the counter signature only covers the tbs content and not existing SignatureBlocks.</t>
      </section>
      <section anchor="sec-cons-privacy">
        <name>Privacy</name>
        <t>Often, a TPM will host cryptographic keys for both the kernel and userspace of a local operating system but a Presenter may only represents a single user or application.
Similarly, a single enterprise-grade Hardware Security Module will often host cryptographic keys for an entire multi-tenant cloud service and the Presenter or Reciever or Recipient belongs only to a single tenant. For example the HSM backing a TLS-terminating loadbalancer fronting thousands of un-related web domains.
In these cases, disclosing that two different keys reside on the same hardware, or in some cases even disclosing the existance of a given key, let alone its attributes, to an unauthorized party would constitute an egregious privacy violation.</t>
        <t>Implementions <bcp14>SHOULD</bcp14> be careful to avoid over-disclosure of information, for example by authenticating the Presenter as described in <xref target="sec-cons-auth-the-presenter"/> and only returning results for keys and envirnments for which it is authorized.
In absence of an existing mechanism for authenticating and authorizing administrative connections to the HSM, the attestation request <bcp14>MAY</bcp14> be authenticated by embedding the TbsPkixAttestation of the request inside a PKIXAttestation signed with a certificate belogning to the Presenter.</t>
        <t>Furthermore, enterprise and cloud-services grade HSMs <bcp14>SHOULD</bcp14> support the full set of attestation request functionality described in <xref target="sec-reqs"/> so that Presenters can fine-tune the content of a PKIX Attestation such that it is appropriate for the intended Recipient.</t>
      </section>
      <section anchor="sec-cons-auth-the-presenter">
        <name>Authenticating and Authorizing the Presenter</name>
        <t>The Presenter represents a priviledged role within the architecture of this specification as it gets to learn about the existence of application keys and their protection properties, as well as details of the platform.
The Presenter is in the position of deciding how much information to disclose to the Recipient, and to request a suitably redacted attestation from the HSM.</t>
        <t>For personal cryptographic tokens it might be appropriate for the attestation request interface to be un-authenticated. However, for enterprise and cloud-services grade HSMs the Presenter <bcp14>SHOULD</bcp14> be authenticated using the HSM's native authentication mechanism. The details will be HSM-specific and are thus left up to the implementer, however it is <bcp14>RECOMMENDED</bcp14> to implement an authorization framework similar to the following.</t>
        <t>A Presenter <bcp14>SHOULD</bcp14> be allowed to request attestation for any application keys which it is allowed to use.
For example, a TLS application that is correctly authenticated to the HSM in order to use its TLS keys <bcp14>SHOULD</bcp14> be able to request attestation of those same keys without needing to perform any additional authentication or requiring any additional roles or permissions.
HSMs that wish to allow a Presenter to request attestation of keys which is not allowed to use, for example for the purposes of displaying HSM status information on an administrative console or UI, <bcp14>SHOULD</bcp14> have a "Attestation Requester" role or permission and <bcp14>SHOULD</bcp14> enforce the HSM's native access controls such that the Presenter can only retrieve attestations for keys for which it has read access.</t>
      </section>
      <section anchor="proof-of-possession-of-application-keys">
        <name>Proof-of-Possession of Application Keys</name>
        <t>With asymmetric keys within a Public Key Infrastructure (PKI) it is common to require a key holder to prove that they are in control of the private key by using it. This is called "proof-of-possession (PoP)". This specification intentionally does not provide a mechnaism for PoP of application keys and relies on the Presenter, Recipient, Verifier, and Relying Party trusting the Attester to correctly report the cryptographic keys that it is holding.</t>
        <t>It would be easy to add a PoP Key Attribute that uses the attested application key to sign over, for example, the Transaction Entity, however this is a bad idea and <bcp14>MUST NOT</bcp14> be added as a custom attribute for several reasons.</t>
        <t>First, an application key intended, for example, for TLS <bcp14>SHOULD</bcp14> only be used with the TLS protocol and introducing a signature oracle whereby the TLS application key is used to sign attestation content could lead to cross-protocol attacks whereby the attacker submits a nonce value which is in fact not random but is crafted in such a way as to appear as a valid message in some other protocol context or exploit some other weakness in the signature algorithm.</t>
        <t>Second, the Presenter who has connected to the HSM to request an attestation may have permissions to view the requested application keys but not permission to use them, as in the case where the Presenter is an administrative UI displaying HSM status information to an systems administrator or auditor.
Requiring the Attestation Service to use the attested application keys could, in some architectures, require the Attestation Service to resolve complex access control logic and handle complex error conditions for each requested key, which violates the "simple to implement" design principle outlined in <xref target="sec-cons-simple"/>. More discussion of authenticating the Presenter can be found in <xref target="sec-cons-auth-the-presenter"/>.</t>
        <t>In cases where explicit PoP is required for a given attested application key, it <bcp14>MUST</bcp14> be done as part of the regular usage protocol for which that key is intended and performed through the HSM's regular application interface, not its attestation interface. For example, PoP could be performed by signing a Certificate Signing Request (CSR), through a PKI enrollment protocol such as Certificate Management Protocol (CMP) which includes a challenge-response PoP, by using the key within a TLS handshake, or some other protocol which is part of the key's intended usage.</t>
      </section>
    </section>
  </middle>
  <back>
    <references anchor="sec-combined-references">
      <name>References</name>
      <references anchor="sec-normative-references">
        <name>Normative References</name>
        <reference anchor="RFC2119" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC9334">
          <front>
            <title>Remote ATtestation procedureS (RATS) Architecture</title>
            <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
            <author fullname="D. Thaler" initials="D." surname="Thaler"/>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="N. Smith" initials="N." surname="Smith"/>
            <author fullname="W. Pan" initials="W." surname="Pan"/>
            <date month="January" year="2023"/>
            <abstract>
              <t>In network protocol exchanges, it is often useful for one end of a communication to know whether the other end is in an intended operating state. This document provides an architectural overview of the entities involved that make such tests possible through the process of generating, conveying, and evaluating evidentiary Claims. It provides a model that is neutral toward processor architectures, the content of Claims, and protocols.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9334"/>
          <seriesInfo name="DOI" value="10.17487/RFC9334"/>
        </reference>
        <reference anchor="RFC5280" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5280.xml">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author fullname="D. Cooper" initials="D." surname="Cooper"/>
            <author fullname="S. Santesson" initials="S." surname="Santesson"/>
            <author fullname="S. Farrell" initials="S." surname="Farrell"/>
            <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="W. Polk" initials="W." surname="Polk"/>
            <date month="May" year="2008"/>
            <abstract>
              <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5280"/>
          <seriesInfo name="DOI" value="10.17487/RFC5280"/>
        </reference>
        <reference anchor="RFC8949">
          <front>
            <title>Concise Binary Object Representation (CBOR)</title>
            <author fullname="C. Bormann" initials="C." surname="Bormann"/>
            <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
            <date month="December" year="2020"/>
            <abstract>
              <t>The Concise Binary Object Representation (CBOR) is a data format whose design goals include the possibility of extremely small code size, fairly small message size, and extensibility without the need for version negotiation. These design goals make it different from earlier binary serializations such as ASN.1 and MessagePack.</t>
              <t>This document obsoletes RFC 7049, providing editorial improvements, new details, and errata fixes while keeping full compatibility with the interchange format of RFC 7049. It does not create a new version of the format.</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="94"/>
          <seriesInfo name="RFC" value="8949"/>
          <seriesInfo name="DOI" value="10.17487/RFC8949"/>
        </reference>
        <reference anchor="I-D.ietf-rats-eat">
          <front>
            <title>The Entity Attestation Token (EAT)</title>
            <author fullname="Laurence Lundblade" initials="L." surname="Lundblade">
              <organization>Security Theory LLC</organization>
            </author>
            <author fullname="Giridhar Mandyam" initials="G." surname="Mandyam">
              <organization>Mediatek USA</organization>
            </author>
            <author fullname="Jeremy O'Donoghue" initials="J." surname="O'Donoghue">
              <organization>Qualcomm Technologies Inc.</organization>
            </author>
            <author fullname="Carl Wallace" initials="C." surname="Wallace">
              <organization>Red Hound Software, Inc.</organization>
            </author>
            <date day="6" month="September" year="2024"/>
            <abstract>
              <t>   An Entity Attestation Token (EAT) provides an attested claims set
   that describes state and characteristics of an entity, a device like
   a smartphone, IoT device, network equipment or such.  This claims set
   is used by a relying party, server or service to determine the type
   and degree of trust placed in the entity.

   An EAT is either a CBOR Web Token (CWT) or JSON Web Token (JWT) with
   attestation-oriented claims.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-rats-eat-31"/>
        </reference>
        <reference anchor="X.680" target="https://www.itu.int/rec/T-REC-X.680">
          <front>
            <title>Information technology -- Abstract Syntax Notation One (ASN.1): Specification of basic notation</title>
            <author>
              <organization>ITU-T</organization>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="X.690">
          <front>
            <title>Information technology - ASN.1 encoding Rules: Specification of Basic Encoding Rules (BER), Canonical Encoding Rules (CER) and Distinguished Encoding Rules (DER)</title>
            <author>
              <organization>ITU-T</organization>
            </author>
            <date year="2015" month="November"/>
          </front>
          <seriesInfo name="ISO/IEC" value="8825-1:2015"/>
        </reference>
        <reference anchor="PKCS11" target="https://docs.oasis-open.org/pkcs11/pkcs11-spec/v3.1/cs01/pkcs11-spec-v3.1-cs01.html">
          <front>
            <title>PKCS #11 Specification Version 3.1</title>
            <author initials="T." surname="Cox" fullname="Tony Cox">
              <organization>OASIS PKCS 11 TC</organization>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="RFC8174" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
      </references>
      <references anchor="sec-informative-references">
        <name>Informative References</name>
        <reference anchor="RFC5912">
          <front>
            <title>New ASN.1 Modules for the Public Key Infrastructure Using X.509 (PKIX)</title>
            <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="June" year="2010"/>
            <abstract>
              <t>The Public Key Infrastructure using X.509 (PKIX) certificate format, and many associated formats, are expressed using ASN.1. The current ASN.1 modules conform to the 1988 version of ASN.1. This document updates those ASN.1 modules to conform to the 2002 version of ASN.1. There are no bits-on-the-wire changes to any of the formats; this is simply a change to the syntax. This document is not an Internet Standards Track specification; it is published for informational purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5912"/>
          <seriesInfo name="DOI" value="10.17487/RFC5912"/>
        </reference>
        <reference anchor="RFC2986" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2986.xml">
          <front>
            <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
            <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
            <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
            <date month="November" year="2000"/>
            <abstract>
              <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2986"/>
          <seriesInfo name="DOI" value="10.17487/RFC2986"/>
        </reference>
        <reference anchor="RFC6024">
          <front>
            <title>Trust Anchor Management Requirements</title>
            <author fullname="R. Reddy" initials="R." surname="Reddy"/>
            <author fullname="C. Wallace" initials="C." surname="Wallace"/>
            <date month="October" year="2010"/>
            <abstract>
              <t>A trust anchor represents an authoritative entity via a public key and associated data. The public key is used to verify digital signatures, and the associated data is used to constrain the types of information for which the trust anchor is authoritative. A relying party uses trust anchors to determine if a digitally signed object is valid by verifying a digital signature using the trust anchor's public key, and by enforcing the constraints expressed in the associated data for the trust anchor. This document describes some of the problems associated with the lack of a standard trust anchor management mechanism and defines requirements for data formats and push-based protocols designed to address these problems. This document is not an Internet Standards Track specification; it is published for informational purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6024"/>
          <seriesInfo name="DOI" value="10.17487/RFC6024"/>
        </reference>
        <reference anchor="RFC9019">
          <front>
            <title>A Firmware Update Architecture for Internet of Things</title>
            <author fullname="B. Moran" initials="B." surname="Moran"/>
            <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
            <author fullname="D. Brown" initials="D." surname="Brown"/>
            <author fullname="M. Meriac" initials="M." surname="Meriac"/>
            <date month="April" year="2021"/>
            <abstract>
              <t>Vulnerabilities in Internet of Things (IoT) devices have raised the need for a reliable and secure firmware update mechanism suitable for devices with resource constraints. Incorporating such an update mechanism is a fundamental requirement for fixing vulnerabilities, but it also enables other important capabilities such as updating configuration settings and adding new functionality.</t>
              <t>In addition to the definition of terminology and an architecture, this document provides the motivation for the standardization of a manifest format as a transport-agnostic means for describing and protecting firmware updates.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9019"/>
          <seriesInfo name="DOI" value="10.17487/RFC9019"/>
        </reference>
        <reference anchor="RFC4211" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4211.xml">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate Request Message Format (CRMF)</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="September" year="2005"/>
            <abstract>
              <t>This document describes the Certificate Request Message Format (CRMF) syntax and semantics. This syntax is used to convey a request for a certificate to a Certification Authority (CA), possibly via a Registration Authority (RA), for the purposes of X.509 certificate production. The request will typically include a public key and the associated registration information. This document does not define a certificate request protocol. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4211"/>
          <seriesInfo name="DOI" value="10.17487/RFC4211"/>
        </reference>
        <reference anchor="I-D.bft-rats-kat">
          <front>
            <title>An EAT-based Key Attestation Token</title>
            <author fullname="Mathias Brossard" initials="M." surname="Brossard">
              <organization>arm</organization>
            </author>
            <author fullname="Thomas Fossati" initials="T." surname="Fossati">
              <organization>Linaro</organization>
            </author>
            <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
         </author>
            <author fullname="Henk Birkholz" initials="H." surname="Birkholz">
         </author>
            <date day="21" month="November" year="2024"/>
            <abstract>
              <t>   This document defines an evidence format for key attestation based on
   the Entity Attestation Token (EAT).

Discussion Venues

   This note is to be removed before publishing as an RFC.

   Discussion of this document takes place on the Remote ATtestation
   ProcedureS Working Group mailing list (rats@ietf.org), which is
   archived at https://mailarchive.ietf.org/arch/browse/rats/.

   Source for this draft and an issue tracker can be found at
   https://github.com/thomas-fossati/draft-kat.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-bft-rats-kat-05"/>
        </reference>
        <reference anchor="I-D.ietf-lamps-csr-attestation">
          <front>
            <title>Use of Remote Attestation with Certification Signing Requests</title>
            <author fullname="Mike Ounsworth" initials="M." surname="Ounsworth">
              <organization>Entrust Limited</organization>
            </author>
            <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
              <organization>Siemens</organization>
            </author>
            <author fullname="Henk Birkholz" initials="H." surname="Birkholz">
              <organization>Fraunhofer SIT</organization>
            </author>
            <author fullname="Monty Wiseman" initials="M." surname="Wiseman">
              <organization>Beyond Identity</organization>
            </author>
            <author fullname="Ned Smith" initials="N." surname="Smith">
              <organization>Intel Corporation</organization>
            </author>
            <date day="1" month="February" year="2025"/>
            <abstract>
              <t>   A PKI end entity requesting a certificate from a Certification
   Authority (CA) may wish to offer trustworthy claims about the
   platform generating the certification request and the environment
   associated with the corresponding private key, such as whether the
   private key resides on a hardware security module.

   This specification defines an attribute and an extension that allow
   for conveyance of Evidence and Attestation Results in Certificate
   Signing Requests (CSRs), such as PKCS#10 or Certificate Request
   Message Format (CRMF) payloads.  This provides an elegant and
   automatable mechanism for transporting Evidence to a Certification
   Authority.

   Including Evidence and Attestation Results along with a CSR can help
   to improve the assessment of the security posture for the private
   key, and can help the Certification Authority to assess whether it
   satisfies the requested certificate profile.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-lamps-csr-attestation-16"/>
        </reference>
        <reference anchor="I-D.ietf-rats-msg-wrap">
          <front>
            <title>RATS Conceptual Messages Wrapper (CMW)</title>
            <author fullname="Henk Birkholz" initials="H." surname="Birkholz">
              <organization>Fraunhofer SIT</organization>
            </author>
            <author fullname="Ned Smith" initials="N." surname="Smith">
              <organization>Intel</organization>
            </author>
            <author fullname="Thomas Fossati" initials="T." surname="Fossati">
              <organization>Linaro</organization>
            </author>
            <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
              <organization>University of Applied Sciences Bonn-Rhein-Sieg</organization>
            </author>
            <author fullname="Dionna Glaze" initials="D." surname="Glaze">
              <organization>Google LLC</organization>
            </author>
            <date day="15" month="November" year="2024"/>
            <abstract>
              <t>   This document defines the RATS conceptual message wrapper (CMW)
   format, a type of encapsulation format that can be used for any RATS
   messages, such as Evidence, Attestation Results, Endorsements, and
   Reference Values.  Additionally, the document describes a collection
   type that enables the aggregation of one or more CMWs into a single
   message.

   This document also defines corresponding CBOR tag, JSON Web Tokens
   (JWT) and CBOR Web Tokens (CWT) claims, as well as an X.509
   extension.  These allow embedding the wrapped conceptual messages
   into CBOR-based protocols, web APIs, and PKIX protocols.  In
   addition, a Media Type and a CoAP Content-Format are defined for
   transporting CMWs in HTTP, MIME, CoAP and other Internet protocols.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-rats-msg-wrap-11"/>
        </reference>
        <reference anchor="I-D.fossati-tls-attestation">
          <front>
            <title>Using Attestation in Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
            <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
         </author>
            <author fullname="Yaron Sheffer" initials="Y." surname="Sheffer">
              <organization>Intuit</organization>
            </author>
            <author fullname="Paul Howard" initials="P." surname="Howard">
              <organization>Arm Limited</organization>
            </author>
            <author fullname="IonuÈ› Mihalcea" initials="I." surname="Mihalcea">
              <organization>Arm Limited</organization>
            </author>
            <author fullname="Yogesh Deshpande" initials="Y." surname="Deshpande">
              <organization>Arm Limited</organization>
            </author>
            <author fullname="Arto Niemi" initials="A." surname="Niemi">
              <organization>Huawei</organization>
            </author>
            <author fullname="Thomas Fossati" initials="T." surname="Fossati">
              <organization>Linaro</organization>
            </author>
            <date day="21" month="October" year="2024"/>
            <abstract>
              <t>   The TLS handshake protocol allows authentication of one or both peers
   using static, long-term credentials.  In some cases, it is also
   desirable to ensure that the peer runtime environment is in a secure
   state.  Such an assurance can be achieved using attestation which is
   a process by which an entity produces evidence about itself that
   another party can use to appraise whether that entity is found in a
   secure state.  This document describes a series of protocol
   extensions to the TLS 1.3 handshake that enables the binding of the
   TLS authentication key to a remote attestation session.  This enables
   an entity capable of producing attestation evidence, such as a
   confidential workload running in a Trusted Execution Environment
   (TEE), or an IoT device that is trying to authenticate itself to a
   network access point, to present a more comprehensive set of security
   metrics to its peer.  These extensions have been designed to allow
   the peers to use any attestation technology, in any remote
   attestation topology, and mutually.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-fossati-tls-attestation-08"/>
        </reference>
      </references>
    </references>
    <?line 913?>

<section anchor="samples">
      <name>Samples</name>
      <t>A reference implementation of this specification can be found at https://github.com/hannestschofenig/keyattestation</t>
      <t>It produces the following sample attestation:</t>
      <artwork><![CDATA[
PkixAttestation:
 tbs=TbsPkixAttestation:
  version=2
  reportedEntities=SequenceOf:
   ReportedEntity:
    entityType=1.2.3.999.0.0
    reportedAttributes=SequenceOf:
     ReportedAttribute:
      attributeType=1.2.3.999.1.0.0
      value=AttributeValue:
       bytes=0102030405


   ReportedEntity:
    entityType=1.2.3.999.0.1
    reportedAttributes=SequenceOf:
     ReportedAttribute:
      attributeType=1.2.3.999.1.1.0
      value=AttributeValue:
       utf8String=HSM-123

     ReportedAttribute:
      attributeType=1.2.3.999.1.1.1
      value=AttributeValue:
       bool=True

     ReportedAttribute:
      attributeType=1.2.3.999.1.1.2
      value=AttributeValue:
       utf8String=Model ABC

     ReportedAttribute:
      attributeType=1.2.3.999.1.1.4
      value=AttributeValue:
       utf8String=3.1.9

     ReportedAttribute:
      attributeType=1.2.3.999.1.1.3
      value=AttributeValue:
       time=202502032234Z


   ReportedEntity:
    entityType=1.2.3.999.0.2
    reportedAttributes=SequenceOf:
     ReportedAttribute:
      attributeType=1.2.3.999.1.2.0
      value=AttributeValue:
       utf8String=26d765d8-1afd-4dfb-a290-cf867ddecfa1

     ReportedAttribute:
      attributeType=1.2.3.999.1.2.3
      value=AttributeValue:
       bool=False

     ReportedAttribute:
      attributeType=1.2.3.999.1.2.1
      value=AttributeValue:
       bytes=0x3059301306072a8648ce3d020106082a8648ce3d03010703420004422548f88fb782ffb5eca3744452c72a1e558fbd6f73be5e48e93232cc45c5b16c4cd10c4cb8d5b8a17139e94882c8992572993425f41419ab7e90a42a494272


   ReportedEntity:
    entityType=1.2.3.999.0.2
    reportedAttributes=SequenceOf:
     ReportedAttribute:
      attributeType=1.2.3.999.1.2.0
      value=AttributeValue:
       utf8String=49a96ace-e39a-4fd2-bec1-13165a99621c

     ReportedAttribute:
      attributeType=1.2.3.999.1.2.3
      value=AttributeValue:
       bool=True

     ReportedAttribute:
      attributeType=1.2.3.999.1.2.1
      value=AttributeValue:
       bytes=0x3059301306072a8648ce3d020106082a8648ce3d03010703420004422548f88fb782ffb5eca3744452c72a1e558fbd6f73be5e48e93232cc45c5b16c4cd10c4cb8d5b8a17139e94882c8992572993425f41419ab7e90a42a494272


   ReportedEntity:
    entityType=1.2.3.888.0
    reportedAttributes=SequenceOf:
     ReportedAttribute:
      attributeType=1.2.3.888.1
      value=AttributeValue:
       utf8String=partition 1




 signatures=SequenceOf:
  SignatureBlock:
   certChain=SequenceOf:
    Certificate:
     tbsCertificate=TBSCertificate:
      version=v3
      serialNumber=510501933685942792810365453374472870755160518925
      signature=AlgorithmIdentifier:
       algorithm=1.2.840.113549.1.1.11
       parameters=0x0500

      issuer=Name:
       rdnSequence=RDNSequence:
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.10
          value=0x0c0449455446
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.11
          value=0x0c0452415453
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.3
          value=0x0c06414b20525341


      validity=Validity:
       notBefore=Time:
        utcTime=250117171303Z

       notAfter=Time:
        generalTime=20520604171303Z


      subject=Name:
       rdnSequence=RDNSequence:
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.10
          value=0x0c0449455446
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.11
          value=0x0c0452415453
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.3
          value=0x0c06414b20525341


      subjectPublicKeyInfo=SubjectPublicKeyInfo:
       algorithm=AlgorithmIdentifier:
        algorithm=1.2.840.113549.1.1.1
        parameters=0x0500

       subjectPublicKey=31795268810366627125468059984427145931784542919710733587190808152893606542214208096328883077225607136393362795609997601968312039001251339428349101203532726047646450301142882318337709398316574407647199690000689245113739552615279534528145776090813314822312012607567736073057936820713733090928849092672110937300300755561797808000438134839458043673852453722969649609202093945235393494912138691342219564365300965387743701570507112064401758218314760153081271981340812350365663466513620853326534252424706992841033652817461354632316129312597825542820569667842318342646457447037125609399476844336456206583416539426479221164971369788464727307915820767918489601

      extensions=Extensions:
       Extension:
        extnID=2.5.29.14
        critical=False
        extnValue=0x04148919595e0ef169f5cbbd47e134fce298cc693091
       Extension:
        extnID=2.5.29.35
        critical=False
        extnValue=0x301680148919595e0ef169f5cbbd47e134fce298cc693091
       Extension:
        extnID=2.5.29.19
        critical=True
        extnValue=0x30030101ff


     signatureAlgorithm=AlgorithmIdentifier:
      algorithm=1.2.840.113549.1.1.11
      parameters=0x0500

     signature=12977775424631768289542539102653382982431795551146145281750189553757940982572813264428982985997740595878077027853994515775116752030963858469651548765808775269857271167748512795017916284867051302884465315751010913658016640170608413935780119349866986170148033301955753116984041271273907756544780231564646860424999020990745523383622980115200446260103173103500647838758197610238552349053064525420240826193553395378873725256584269666918504793674497748455574822238022085054752185687440807655337724821853332688158460379554906105417720665175648371832825939577039874730442790337726004105878168375998123110331993348833629325492

   signatureAlgorithm=AlgorithmIdentifier:
    algorithm=1.2.840.113549.1.1.10
    parameters=RSASSA_PSS_params:
     hashAlgorithm=AlgorithmIdentifier:
      algorithm=2.16.840.1.101.3.4.2.1

     maskGenAlgorithm=AlgorithmIdentifier:
      algorithm=1.2.840.113549.1.1.8

     saltLength=20
     trailerField=1


   signatureValue=0x9b6ac1932f1cd85befbde054e084577ebc9181bcf05179658a700e22556fc3f1931f59dc9734efe08df204fcfe55c64c6a97e8d520e58c1f64080b6cce1c08e88db510c06d6914a818b70df82326b37a2abe54fab0567d748e1e82e2de954cac63c5ab3bc92fff9cb8aa64fbcb83dd8bacbce96392f91dd40ee05058adceb11f5cf0c379241fd470918abceea70fd01c0cbc64d96067fe549ec443738655bc2bcf7e5bd54c15d5e5ac2f4ad180d973a7e6025126ccd2b45d78e9944662237959ef73f47e9ae0fa9b0c55177bb6f867a90b41d0efb72c192f15a66531d030bc85fed3d135aea4045e024ef2e807517504d313dbea4b0f709d0553b60793b2dcaa
  SignatureBlock:
   certChain=SequenceOf:
    Certificate:
     tbsCertificate=TBSCertificate:
      version=v3
      serialNumber=43752118382009037811618748949928339462896457144
      signature=AlgorithmIdentifier:
       algorithm=1.2.840.10045.4.3.2

      issuer=Name:
       rdnSequence=RDNSequence:
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.10
          value=0x0c0449455446
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.11
          value=0x0c0452415453
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.3
          value=0x0c07414b2050323536


      validity=Validity:
       notBefore=Time:
        utcTime=250117171428Z

       notAfter=Time:
        generalTime=20520604171428Z


      subject=Name:
       rdnSequence=RDNSequence:
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.10
          value=0x0c0449455446
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.11
          value=0x0c0452415453
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.3
          value=0x0c07414b2050323536


      subjectPublicKeyInfo=SubjectPublicKeyInfo:
       algorithm=AlgorithmIdentifier:
        algorithm=1.2.840.10045.2.1
        parameters=0x06082a8648ce3d030107

       subjectPublicKey=57095560233504924588952816185508037812996307929249104847846164660564888397123390877585670462836285725041261897550020311481127562655774333675293173915140722

      extensions=Extensions:
       Extension:
        extnID=2.5.29.14
        critical=False
        extnValue=0x04145b70a79817f79ff637d2f7e3dc446c2109d7bbd4
       Extension:
        extnID=2.5.29.35
        critical=False
        extnValue=0x301680145b70a79817f79ff637d2f7e3dc446c2109d7bbd4
       Extension:
        extnID=2.5.29.19
        critical=True
        extnValue=0x30030101ff


     signatureAlgorithm=AlgorithmIdentifier:
      algorithm=1.2.840.10045.4.3.2

     signature=182167519797146035745575043154801415115532979136731128676399180692664821804883990401552040789643013103202424486088058364982966709324496782518079519267269438816178719668437

   signatureAlgorithm=AlgorithmIdentifier:
    algorithm=1.2.840.10045.2.1
    parameters=0x06082a8648ce3d030107

   signatureValue=0x304402201e7703f63bff951917714e5fa813de5265f151a6802165ef0be5f1fe6c91225b02200ad06b41a5062b07ff3ad37c7d112e19575f0e14a9750fe95e615550b88b5fed



DER Base64:
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
]]></artwork>
    </section>
    <section anchor="acknowledgements">
      <name>Acknowledgements</name>
      <t>This specification is the work of a design team created by the chairs
of the RATS working group. This specification has been developed
based on discussions in that design team and also with great amounts of
input taken from discussions on the RATS mailing list.</t>
    </section>
  </back>
  <!-- ##markdown-source:
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
K5T9WWqJshEsAXs5DwEZtcc2nn2PF8ZLLS4BoeoOhw0F6ArfbG3dZhYSOxMm
UVpQ6jIkDVh1sZQmlyiS4Hsb3eTZxXIuTSdekHB0IYjhxQUpsHqrO27gvMpq
rLvi5ar/DYKJDXL248TpYg9y0qxB9OKtWpdKIj/lnk/W/CRFi45uSblnJhIg
WfczU8Bz4fzBU43S03JNeI6pvImra+RzXJ2CJ+4nkoyaGCUnw7d4ECqzo0Ew
qL1YxXaUeriHVh+SFxYeONwAbr2aS++75hcQkZ/fiia1aExaiuX0/9iVxeit
ps7MX3c2oNjtB8Jhw1iCxOE7QB3Ig7WGrqxxCpfNU6e1ryrZsAqYmityqn5i
xk/Ray5u0VDEmagGqhrLjxMblSIhrAhSiQPn+ScKixxVX42yVfa55TZ7lZJI
o/w5EzjEXSft9tSc462qvbD1tFfVRlb2bHjRHV5SuwJZiwAKh14go7YsW4Xp
gw2orzk9dy6fe9EdnL/cbbYFRg4oFcHUKyRdG8Lz/UQBkaUFSYcUYPyI4fHM
vmd/XR6bVGxZPzUY5yftOOjwuE4Lb9NB9ySFfwmEFO5NbvLN9ILKN+ZTWIu3
o69Wy/j1wcEU1r4eF4EgD2DlwJ9XsTMLJ17gTw9gTdp5kjIhokhx2sKS5cLa
0685oJ5xNb020Jn+ZtcHBT/IVPw3ZWM3A//NkFoZO97ZBB/NpN2/zqTVv7GK
5WKl2Gq1iqVi6YlM+uyQ5m4Cvfg+nR+vDW6p4UVm/Bv1KuVcy/c55f1NySqV
S5VStVSDY/2+TVh/5iasb9tEko7/Bk18q1wxfseU1jfBLQznb0bR2vs9M5W/
c3MDuiuy3en+nkmr3zlpBd5p/Z4JK98yIeZZvsH6HETEcrlSvf1uTCz/mZhY
/m5MLNfdRr3mNguWPXELVXcyLtjlVqngTJr1BtgSzsS2fhys5W8DK6HpEdZ7
/Z6pvo0imJM8Vkq1VqVkVUr1UqNsN+vVpuNVXDhWC75pat/AQ6VGqVItl0ql
arVcrlWbk2ZzMm40y5PJuOY5dqVRrVZrZQfGsbxaDX5z65NGZezVvGrTa1XK
lbLjVGtObWzVnarjWiX433HTrY2bttWwKi2vVW02y06z1SrXGuVWCyarTapW
1WrZ44bXKtnVsl1tVcuN8v/q2FZt2a06aDQFr9KyC9WJWy6MPccqWBWrXrNb
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
47Lr2PZ/C3MfAArcBlgFKBegvgHbAjZqAatogroFmg8qmsCtW6jHWFWpKvyw
tQ8ch4yDYvkfJv1/TwOtIQy0UgXV7vofadSDXvGjRj2/+g+j/n8tnPnPNOuJ
s5SftOlz/NpP2/hgQ4JeBeIDLPdSFS3kJqjKoB0DZ6zVQIoimyyDDY12WRl+
B10bdDmw++pgu9XrJVTAQHkCKw6GaJEyDApdo4SsFDQq1IprqKjCeC2wjEsY
vgPVHHhvGZQ3UNtraM2C8gXMGb0JoMzXLDDdy+X/MqOvBsqB3QANsTFptCaT
eqXhlkEAV1wQynWnDHq720AD7E82+v7wZfxXG307ElEz7UDhBwwAowMQCbX9
GtorqFpU0M4CaABWWKBVgAmIVhOYK1YZVBdQuUCXKtVbZbCh0GgooSYP5g4Y
VGC4wH8aKNAxAgS6Ppou5SqYY6VmE7SzSr2Kxl+9jl4j+L5VR+8GjAEqk0Vu
nXqrWmkiLTTQq1WvN0GH+COMgxQFfxv17ujUaN+gHWV5aPIAeoxBM4V1g15n
Vb3aBLTciuuBZVoDdc6yAaUAxDVvUgJVd2JNvDro3KBhj3GMku2W6qAD2rVS
vTwuNSaTiu1WGk7DBTB7YHQ2apOSB5ozkHBpAkqxVwfw1krjZnOMyiFGevAi
b75Y+7Ux6Pf72y/dbtu/6rYv+pvptO8Nur3jjh8ezspOu33Y/jjoXB13tvR3
p91u97p37cfBYX8z+NIuDQ6vNuPpzfH76dnb2027Mzi+2PSmN2/57x48v3k7
PDo9PRn1tvD8oDN1PrerbtC+gN8u3h4MOhfJ2Bf9QffKerg9vo77vaPuxZf2
hfZ877B99eXkrrc+G7VvtO8Pj9ulLazH4jX1YZ5Le9A/3namN/xMG/ZlO5uT
jVpXF9Z1P7i7vT/9cmPdHk5Xgw9Hi9tuqXR7fOuffOhtYY7VTfmmenrn3sN6
7m4XvcdBe5OsdTqA9bY3t1NtzIvL8eDoftPDecLb/pe7Enx30xefD9sXzuHF
tN278K/7r/qvKtOHV1bj/Wnp8ujk7ftZ7fquYT04jZo3PLvfDuLHo8fxUTw6
7Q1GJ3fX6/dHj2fevD+N/dt3H9/fnnY/lo46i2iy7N6/v593nbtuJ07OoQv7
Dwbdprbe9uDd4UXtZnRfvvlwOj/5cPXl7ENvdXp8ez/wLf/2w+ARzujLYHRj
wTO107v+403qvPqHdF7HN9qYvd6HL53bAZx6Z/v5eDiotuC7425XfN703rZL
/Xan158Pz/3zVfXkYOVt79ze5fBxG3rXN69a48rZq4/3d8vB3cng0vnwOO59
uTzsbavW2J85o2A57J/0F8Pr7WJ0MW91Lm4/V+oXy+7y3UXQ37zd3BzBfo89
OMyju/ZVZ3oFa72tti82J87x0dY9npfsD611/7AHeG17gOs97w5wvXQFf592
4O/uexswfApnN7u8tRsnJ1bv9vPq5rw++jyaLb50/NvD1ePhqH3amd5/nt37
x61NCc49PoK3HgYXpU13c3N4fXHx/rB9+e7y+vJY++4EvhteXF+OBhfNzeEF
fXd42L7tDLed4VWpt+l3nNPB3dVmMOpVBiPnEejjy4fZ9Hxw17bg/8uDw4vH
0y9wJoenNpwlruOkMz297rTDQac3P7ru3WjfxYPO0bvO9dHg8fALrhe/Gww6
90cn/aN3o4sR7HvYx3W8Q3ycPTinSIOdi/bhdNo7bx/C7xdhFz532ieHtXpn
fris12/uP0feUXPZvDiflUavSg/Tq7vF9uyz71VK7aOru8bV7fvo/cl1fHXc
fTwGwht4H65mpcf4883CGned5XgTNO7r7VLly8lycnywWdx8ad0tWt2K/eH9
l8tXS+9m/Hh5fn55fXpbvuq4nn00/PL5ut8+a3bCWWN29CF+/xhU4gd33jl7
eHcXw64f47f+8Oii4tjB6P1h48vo+t3kbHp9ehrVLm5mvXgUfR5MgutlNL/2
GpXysXdwVe9PtlZ3fVo+2d5MPlfHr95to5lXnVWtm83HybjthdNq9VWr83j7
0flyf24f9O6H5w+jm8+Nz6NSreNddO8+rpdH/aHv3o6nXmm1Lt+ebNzG1X2p
9eXVxLWuh+Na80tYnp46r6bxwfo8uB9XBtH70C7ddG6d7vnV46AL9NBu26ej
wVFv8xbx4bJ01unc9I7697cfrqtnzQ+BtW1Yb6ujUbO6vBvYo+7loNM8bltX
bn9zcTPo2O1nn23zsz3guwebi6MBkG970sye+Yk48077eHz6OJi2/KOrcumx
HNceLNABl9P22fVZrfvx48mH23I8aG1OGmfjzqLRDuNF40v5+OD45rp0trqy
viy7m9JnZ3LZskuPwdFoftk5Wy/Ht7cHw8Hqzl2fNhcXwKk6n3vV6NE592bd
Zcu9Ct81qpub68v3bx+uji7dL9Or2eFgE3xe9MaNxef++8+b81Lv4VX72j2Y
fb6r9u5m77pH1/ZJeP22el/tfTmqVK5Op+fv/IcQRGip83C6HK/7Z7Ory9u3
Hxatdmf+8O7x9tXBVTi7+wx617vDS+sdSMtwCkdZPvt8ctu9HPsX5+ul21tN
l5vNq2Xjut/6fDc+np3cROeP/VkZuKyzbsTvHtz2yXryanq57kfT+9nV+bjc
7W8XtVKw7cS9eH3ePovff/gy6h/WvcPt5KA7HJ5cbN5vUvB+P+jUp0yn8+ns
ftq5vRj02tPjGX+n85VpD86lvShHnftt0ykfPTw8eJ2rav/y4yTaXk7HXzZX
H+dzP2if9efXD5uD49FbK3DmX0YP1X5l2zn/8urauR3Yy0loDQ/nd53Wfbe9
ir/MNv16v2z1Bp2VfTkMj0+c01fdwSKuhJ8f5qN6fHTbcvtVb7o+8eZX2/im
+SE6a94/HNS21c+LUWNbPXf9+rZZ/3A2fHVZuTpcdy4+vK+cxZctpzk4rb3r
HFw5747fP5zVg8NW2zk8ebwvf+gEB/Oh99g7/TKbf2i+b7ZefWhdD47cj/Oo
23pfujm8deqTRXveW3w5fV/6+PFuOe/d+v3K/LZROS9NltH01TIeXF+6jdXD
LPh8seqUzl5VTjr3D0f27XzgtjcP/Y+vSq2eFX2+6H2cvjtrrqdvrz5e9UqP
5+P6fXzuvCsdXTVu3t43TpzPyPdnG+D7xw3g+50V6jzX5WkbuHB72r/q1INl
dLDtLd+23IPN+aq5qZ+EtfZkPp5uulMlw3vw/GZw2DsdtGOktV53uukNr66v
Lu+07zab3tX90dXVl97FoF2l79obIPmreHoFesrpXXt6tCltT0egRwHfBx5f
GtzN7ON2E/SYK/j/m83pIcqEi+3ZUfgHzPdfJaPf31196QAPKxFfOpxefOh0
Lsdgzt4cHXiT1t1k2Hp17lweb2Zd12tYh+0Jyq23w0Hv+LD9Yfr8s+f07CXx
uF5n1Gb9pB2qvYH8A1kPik/vqtu/6F5MNsP1eWsQl6eXzXv/lX9xcXH6we5N
5gery7ZbXscn7zo3w9683u5P3x1/OTm4/vD57M77fNgCZdnfBp3N25tW6N6d
VD84k4fy+MwLG+vTq+f0vd7lXafX9tueuzkvnx28uj6+dB9H81dhr1Ub3k6O
Lpdhe3brNU9qk7evxu96/odNf9pddaIL++r4/WZycLY6bU4ue+vja3dyOBsu
3YuD5cfF0fXViX8C2P9GdpRrO3jzEtXh8/VVRl4lIqfU850K2HJAFLKsPHsh
LnVWNz7gVRNRbIjKgcv2aEjvYSL+NArXy9xSRyyfGtPFOdjnMlyCvYFXYNBV
P0n1iyhqslep+amIG+8A4SuscTWmvcC+OVhoa/jBEpsC2Hj3AhXJ6+OJgkha
5cL2+RYaP8ZeCP8/Y75NwQ4fAQA=

-->

</rfc>
