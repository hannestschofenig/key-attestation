<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.23 (Ruby 3.0.2) -->
<?rfc rfcedstyle="yes"?>
<?rfc tocindent="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>
<?rfc toc_levels="4"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ounsworth-rats-pkix-key-attestation-00" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.27.0 -->
  <front>
    <title abbrev="PKIX Key Attestation">PKIX Key Attestation</title>
    <seriesInfo name="Internet-Draft" value="draft-ounsworth-rats-pkix-key-attestation-00"/>
    <author initials="M." surname="Ounsworth" fullname="Mike Ounsworth">
      <organization abbrev="Entrust">Entrust Limited</organization>
      <address>
        <postal>
          <street>2500 Solandt Road - Suite 100</street>
          <city>Ottawa, Ontario</city>
          <code>K2K 3G5</code>
          <country>Canada</country>
        </postal>
        <email>mike.ounsworth@entrust.com</email>
      </address>
    </author>
    <author initials="J.-P." surname="Fiset" fullname="Jean-Pierre Fiset">
      <organization abbrev="Crypto4A">Crypto4A Inc.</organization>
      <address>
        <postal>
          <street>1550A Laperriere Ave</street>
          <city>Ottawa, Ontario</city>
          <code>K1Z 7T2</code>
          <country>Canada</country>
        </postal>
        <email>jp@crypto4a.com</email>
      </address>
    </author>
    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization abbrev="H-BRS">University of Applied Sciences Bonn-Rhein-Sieg</organization>
      <address>
        <postal>
          <country>Germany</country>
        </postal>
        <email>Hannes.Tschofenig@gmx.net</email>
      </address>
    </author>
    <author initials="H." surname="Birkholz" fullname="Henk Birkholz">
      <organization>Fraunhofer SIT</organization>
      <address>
        <email>henk.birkholz@ietf.contact</email>
      </address>
    </author>
    <author initials="M." surname="Wiseman" fullname="Monty Wiseman">
      <organization>Beyond Identity</organization>
      <address>
        <postal>
          <country>USA</country>
        </postal>
        <email>monty.wiseman@beyondidentity.com</email>
      </address>
    </author>
    <author initials="N." surname="Smith" fullname="Ned Smith">
      <organization>Intel Corporation</organization>
      <address>
        <postal>
          <country>USA</country>
        </postal>
        <email>ned.smith@intel.com</email>
      </address>
    </author>
    <date year="2025" month="March" day="04"/>
    <area>Security</area>
    <workgroup>RATS</workgroup>
    <keyword>Internet-Draft</keyword>
    <abstract>
      <?line 116?>

<t>This document specifies a vendor-agnostic format for attesting to the protection properties of a symmetric or asymmetric cryptographic key within a hardware cryptographic module to support applications such as providing evidence to a Certification Authority that a key is being protected in accordance with the requested certificate profile, or that HSMs can perform key import and maintain the private key protection properties in a robust way even when migrating keys across HSM vendors. This specification includes a format for requesting a key attestation containing certain attributes. This specification is called "PKIX Attestation" because it is designed to be easy to implement on top of a code base that already supports X.509 and PKCS#11 data models.</t>
    </abstract>
    <note removeInRFC="true">
      <name>Discussion Venues</name>
      <t>Discussion of this document takes place on the
    Remote ATtestation ProcedureS Working Group mailing list (rats@ietf.org),
    which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/rats/"/>.</t>
      <t>Source for this draft and an issue tracker can be found at
    <eref target="https://github.com/hannestschofenig/key-attestation"/>.</t>
    </note>
  </front>
  <middle>
    <?line 120?>

<section anchor="introduction">
      <name>Introduction</name>
      <t>This specification is targeted at attesting to the storage of cryptographic key
material -- symmetric keys or asymmetric private keys -- within a hardware cryptographic
module such as a Hardware Security Module (HSM) or Trusted Platform Module (TPM).
HSMs and TPMs are devices whose primary purpose is to hold cryptographic keys and support interfaces whereby they can be used to perform encrypt, decrypt, sign, MAC and other keyed cryptographic operations on provided data without the key material ever leaving the hardware module.
Typically an HSM or TPM holds an uses cryptographic keys on behalf of an application such as a Certification Authority, a code signing service, a TLS server.
However, also included in the scope of this draft are single-purpose cryptographic devices such as smartcards which may hold only a single application key for a single purpose such as authenticating to a near-field "tap" terminal.
Within this specification we will generically refer to the attesting device as an "HSM", and to the cryptographic keys that it holds an operates on behalf of some other application as "application keys".</t>
      <t>The goal of this specification is to provide a standardized format in which an HSM can attest that one or more application keys are contained within a hardware module, and attest to any additional attributes relating to the protection of this key material.</t>
      <t>This requires providing evidence to the key protection properties of that key, referred to in
this specification as "key attributes", as well as to the operational state of the hardware platform,
referred to as "platform attributes". This specification also provides a format for requesting that a cryptographic module produce a key attestation about a specific application key, the application keys in a specific sub-environment of the HSM, or that the returned attestation contain a specific set of attributes.
See <xref target="sec-data-model"/> for the full information model.</t>
      <t>As described below in <xref target="sec-arch"/> "Architecture and Conceptual Model", this specification
uses a simplification of the Remote ATtestation procedureS (RATS) Architecture <xref target="RFC9334"/>
by assuming that the attesting environment and the target environment
are the same environment, and that this environment only produces evidence as this aligns with the
target hardware platforms. As such, the attestation data format specified in <xref target="sec-data-model"/> only contains
evidence (referred to in this document as "attributes") and does not provide for any form of endorsement except for
endorsement of the device's attestation signing key which is endorsed via an X.509 certificate chain rooted
in a trust anchor belonging either to the device manufacturer or to the device operator, as described in <xref target="sec-ak-chain"/>.</t>
      <t>Unlike other attestation data formats defined by the RATS working group, the format defined in this
document is targeting devices designed to operate within Public Key Infrastructure (PKI) ecosystems;
this motivates the following design choices:</t>
      <ul spacing="normal">
        <li>
          <t>Attestation data structure defined in ASN.1 <xref target="X.680"/> and encoded in Distinguished Encoding Rules (DER) <xref target="X.690"/>.</t>
        </li>
        <li>
          <t>Endorsement of attesting key uses an X.509 certificate chain <xref target="RFC5280"/>.</t>
        </li>
        <li>
          <t>Key attributes are mostly just a mapping of the private key properties from PKCS#11 <xref target="PKCS11"/>.</t>
        </li>
      </ul>
      <t>For these reasons, this attestation format is called "PKIX Key Attestation" and may be used,
for example within a Certificate Signing Request (CSR) object; <xref target="I-D.ietf-lamps-csr-attestation"/> specifies how to carry evidence within PKCS#10 <xref target="RFC2986"/> or Certificate Request Message Format (CRMF) <xref target="RFC4211"/>.</t>
      <t>This document provides a vendor-agnostic format for attesting to the logical and physical protection properties of a cryptographic key and it envisions uses such as providing evidence to a Certification Authority that a key is being protected in accordance with the requested certificate profile, or that HSMs can perform key import and maintain the private key protection properties in a robust way even when migrating keys across HSMs from different vendors.</t>
    </section>
    <section anchor="terminology">
      <name>Terminology</name>
      <t>The reader is assumed to be familiar with the vocabulary and concepts
defined in <xref target="RFC9334"/>.</t>
      <t>The following terms are used in this document:</t>
      <dl newline="true">
        <dt>Root of Trust (RoT):</dt>
        <dd>
          <t>A set of software and/or hardware components that need to be trusted
to act as a security foundation required for accomplishing the security
goals of a system. In our case, the RoT is expected to offer the
functionality for attesting to the state of the platform, and to attest
the properties of the application key. More precisely, it has to attest
the integrity of the application key (public as well as private key) and the
confidentiality of the private part of the application key. This document makes a simplifying
assumption that the RoT, the attesting environment holding the
attestation key, and the target environment being measured and attested
are all the same environment.</t>
        </dd>
        <dt>Attestation Key (AK):</dt>
        <dd>
          <t>Cryptographic key belonging to the RoT that is only used to sign
attestation tokens.</t>
        </dd>
        <dt>Hardware Security Module (HSM):</dt>
        <dd>
          <t>a physical computing device that safeguards and manages secrets (most importantly cryptographic keys),
and performs encryption, decryption, signing, MACing and other cryptographic operations with the managed
cryptographic keys. HSMs can sometimes host user applications within a secure enclave environment within
the HSM that are often used to extend the cryptographic functionality of the HSM.
This specification takes a broad definition of what counts as an HSM to include smartcards,
USB tokens, and similar devices which this specification refers to as "personal cryptographic tokens",
as well as TPMs, in addition to the usual PCI card, rack-mount, and blade server form-factor
of HSM which this specification refers to as "enterprise-grade" or "cloud-service grade" HSMs.</t>
        </dd>
        <dt>Key Attestation:</dt>
        <dd>
          <t>Evidence containing properties of the environment(s) in which the private
keys are generated and stored. For example, a Relying Party may want to know whether
a private key is stored in a hardware security module and cannot be
exported in cleartext.</t>
        </dd>
        <dt>Usage Protocol:</dt>
        <dd>
          <t>A (security) protocol that requires demonstrating possession of the
private component of the application key.</t>
        </dd>
        <dt>Attestation Token (AT):</dt>
        <dd>
          <t>A collection of claims that a RoT assembles (and signs) with the
purpose of informing - in a verifiable way - relying parties about the
identity and state of the platform. Essentially a type of Evidence as
per the RATS architecture terminology <xref target="RFC9334"/>.</t>
        </dd>
        <dt>Platform Attestation Entity:</dt>
        <dd>
          <t>An Entity containing attributes relating to the security state of the
platform,. The process of generating a platform entity typically involves gathering
data during measured boot.</t>
        </dd>
        <dt>Key Attestation Entity:</dt>
        <dd>
          <t>An Entity containing attributes relating to a specific application key
protected by the HSM. The key attestation service is part
of the root of trust (RoT).</t>
        </dd>
        <dt>Application Key:</dt>
        <dd>
          <t>The application key consists of a private and a public key.  The private key is
used by the usage protocol.  The public key is included in the Key
Attestation Token. The Key Attestation Entity makes claims about the
protection of this key.</t>
        </dd>
        <dt>Trust Anchor:</dt>
        <dd>
          <t>As defined in <xref target="RFC6024"/> and <xref target="RFC9019"/>, a Trust Anchor
"represents an authoritative entity via a public key and
associated data.  The public key is used to verify digital
signatures, and the associated data is used to constrain the types
of information for which the trust anchor is authoritative." The
Trust Anchor may be a certificate, a raw public key, or other
structure, as appropriate.  It can be a non-root certificate when
it is a certificate.</t>
        </dd>
        <dt>Presenter:</dt>
        <dd>
          <t>Party that proves possession of a private key to a recipient of a key
attestation token. Typically this will be an application layer entity,
such as a cryptographiclibrary constructing a Certificate Signing Request
that must embed attestation evidence, or a TLS library attempting to
perform attested TLS. The Presenter is not fulfilling any roles in the
RATS architecture.</t>
        </dd>
        <dt>Recipient:</dt>
        <dd>
          <t>Party that receives the attestation evidence containing the proof-of-possession key
information from the presenter. The Recipient is likely fulfilling
the roles of Verifier and Relying Party in the RATS architecture,
but the exact details of this arrangement is out-of-scope for this
specification.</t>
        </dd>
        <dt>Key Attestation Service (KAS):</dt>
        <dd>
          <t>The module within the HSM that is responsible for parsing the
PKIX Attestation Request, measuring the
Platform and the Key attributes, constructing the PKIX Attestation
object, and signing it with the AK. The KAS fulfills the role of
Attester in the RATS architecture.
Note that real HSMs may or may not implement the Attester as a
single internal module, but this abstraction is used for the
design and security analysis of this specification.</t>
        </dd>
      </dl>
      <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>
      <?line -18?>

</section>
    <section anchor="sec-arch">
      <name>Architecture and Conceptual Model</name>
      <t>Key attestation is an extension to the attestation functionality
described in <xref target="RFC9334"/>. In the general RATS Architecture, an attesting device
consists of a hardware Root of Trust (RoT) which provides the basis for trust in the device,
and then one or more layers of attestations where an attesting environment collects
and signs measurements (evidence) about a target environment. Trust is
established by chaining the cryptographic signatures on each layer of
evidence up to the next layer of attester until the RoT is reached, and trust
is established in the RoT via 3rd party endorsements.
The target devices for this specification tend to operate on a different
architecture and trust model: the devices consist of one single logical environment
(combining the RATS roles of RoT, attesting environment, and target environment together into
a single entity), and trust is established via product validations conducted by third-party
testing labs against standardized security and functional requirements such
as FIPS 140-3 or a given Common Criteria protection profile. A FIPS or CC
certification provided by a testing lab would conceptually count as an
endorsement of the hardware platform in the RATS architecture, but they
are often not digitally-signed
artifacts, and are often conveyed out of band, sometimes via a website or even
via a paper certificate and so they are out of scope for the wire format
specified in this document.</t>
      <t>As such, the attestation data format defined in this document does not
capture the full functionality of the RATS architecture. If a device producing
evidence in the specified format requires to also carry nested attestation
statements or endorsements, then it must
be achieved by placing the attestation from this draft within another wrapper
layer such as RATS Conceptual Message Wrapper (CMW) <xref target="I-D.ietf-rats-msg-wrap"/>.</t>
      <figure anchor="fig-arch">
        <name>Architecture</name>
        <artset>
          <artwork type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="448" width="488" viewBox="0 0 488 448" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
              <path d="M 48,368 L 48,432" fill="none" stroke="black"/>
              <path d="M 56,32 L 56,304" fill="none" stroke="black"/>
              <path d="M 72,208 L 72,256" fill="none" stroke="black"/>
              <path d="M 104,264 L 104,360" fill="none" stroke="black"/>
              <path d="M 128,96 L 128,200" fill="none" stroke="black"/>
              <path d="M 144,264 L 144,360" fill="none" stroke="black"/>
              <path d="M 192,368 L 192,432" fill="none" stroke="black"/>
              <path d="M 200,96 L 200,144" fill="none" stroke="black"/>
              <path d="M 248,152 L 248,200" fill="none" stroke="black"/>
              <path d="M 312,96 L 312,144" fill="none" stroke="black"/>
              <path d="M 320,208 L 320,256" fill="none" stroke="black"/>
              <path d="M 336,368 L 336,432" fill="none" stroke="black"/>
              <path d="M 360,32 L 360,304" fill="none" stroke="black"/>
              <path d="M 480,368 L 480,432" fill="none" stroke="black"/>
              <path d="M 56,32 L 360,32" fill="none" stroke="black"/>
              <path d="M 200,96 L 312,96" fill="none" stroke="black"/>
              <path d="M 200,144 L 312,144" fill="none" stroke="black"/>
              <path d="M 72,208 L 320,208" fill="none" stroke="black"/>
              <path d="M 72,256 L 320,256" fill="none" stroke="black"/>
              <path d="M 56,304 L 360,304" fill="none" stroke="black"/>
              <path d="M 48,368 L 192,368" fill="none" stroke="black"/>
              <path d="M 336,368 L 480,368" fill="none" stroke="black"/>
              <path d="M 192,400 L 328,400" fill="none" stroke="black"/>
              <path d="M 48,432 L 192,432" fill="none" stroke="black"/>
              <path d="M 336,432 L 480,432" fill="none" stroke="black"/>
              <polygon class="arrowhead" points="336,400 324,394.4 324,405.6 " fill="black" transform="rotate(0,328,400)"/>
              <polygon class="arrowhead" points="256,152 244,146.4 244,157.6 " fill="black" transform="rotate(270,248,152)"/>
              <polygon class="arrowhead" points="152,360 140,354.4 140,365.6 " fill="black" transform="rotate(90,144,360)"/>
              <polygon class="arrowhead" points="136,96 124,90.4 124,101.6 " fill="black" transform="rotate(270,128,96)"/>
              <polygon class="arrowhead" points="112,264 100,258.4 100,269.6 " fill="black" transform="rotate(270,104,264)"/>
              <g class="text">
                <text x="100" y="52">Hardware</text>
                <text x="172" y="52">Security</text>
                <text x="236" y="52">Module</text>
                <text x="116" y="84">Platform</text>
                <text x="200" y="84">environment</text>
                <text x="256" y="116">Application</text>
                <text x="228" y="132">Keys</text>
                <text x="188" y="196">measurements</text>
                <text x="128" y="228">Attestation</text>
                <text x="112" y="244">Service</text>
                <text x="48" y="324">Attestation</text>
                <text x="172" y="324">PKIX</text>
                <text x="64" y="340">Request</text>
                <text x="200" y="340">Attestation</text>
                <text x="224" y="388">Usage</text>
                <text x="284" y="388">Protocol</text>
                <text x="120" y="404">Presenter</text>
                <text x="408" y="404">Recipient</text>
              </g>
            </svg>
          </artwork>
          <artwork type="ascii-art"><![CDATA[
      .-------------------------------------.
      | Hardware Security Module            |
      |                                     |
      |   Platform environment              |
      |        ^        .-------------.     |
      |        |        | Application |     |
      |        |        | Keys        |     |
      |        |        '-------------'     |
      |        |              ^             |
      |        |              |             |
      |        | measurements |             |
      | .------------------------------.    |
      | | Attestation                  |    |
      | | Service                      |    |
      | '------------------------------'    |
      |     ^    |                          |
      |     |    |                          |
      '-----+----+--------------------------'
Attestation |    | PKIX
    Request |    | Attestation
            |    v
     .-----------------.                 .-----------------.
     |                 | Usage Protocol  |                 |
     |    Presenter    +---------------->|    Recipient    |
     |                 |                 |                 |
     '-----------------'                 '-----------------'
]]></artwork>
        </artset>
      </figure>
      <t><xref target="fig-arch"/> depicts a typical workflow where an external tool queries the HSM
for the status of one or more cryptographic keys that it is protecting ("Application Keys").
The "Presenter" may be, for example, a command-line or graphical user interface which will display
the evidence to an operator or auditor; a cryptographic library which will include
the evidence in a CSR for transmission to a Certification Authority; a TLS library
which will include the evidence in at attested TLS session <xref target="I-D.fossati-tls-attestation"/>;
or similar applications, refered to as the "Usage Protocol".</t>
      <t>This model does not assume any internal structure or logical separation within the HSM
except for the existence of some kind of attestation service which may or may not be logically separate
from the overall HSM Root of Trust, and that this attestation service measures the
required evidence about both the hardware environment and the application keys
that are being attested.
In addition to emitting key attestation evidence, an HSM may also need to parse it,
for example when running in an operational mode that only allows importing keys
from other HSMs at a comparable security level (requires checking for specific claims) or within the same operational network (requires checking the trust anchor of the attestation key certificate chain).
This implies that the attestation service needs to be
part of the core HSM "kernel" and therefore would be subject to validations such as
FIPS 140-3 or Common Criteria, which motivates a design requirement to keep the evidence
data format as simple as possible and as close as possible to existing functionality
and data models of existing HSM and TPM products.
As such, the information model presented in <xref target="sec-data-model"/>
will feel familiar to implementers with experience with PKI and PKCS#11.</t>
      <section anchor="sec-ak-chain">
        <name>Attestation Key Certificate Chain</name>
        <t>The data format in this specification represents attestation evidence and
requires third-party endorsement in order to establish trust. Part of this
endorsement is a trust anchor that chains to the HSM's attestation key (AK)
which signs the evidence. In practice the trust anchor will usually be a
manufacturing CA belonging to the device vendor which proves
that the device is genuine and not counterfeit. The trust anchor can also belong
to the device operator as would be the case when the AK certificate is replaced
as part of onboarding the device into a new operational network.</t>
        <t>Note that the data format specified in <xref target="sec-data-model"/> allows for zero, one, or multiple
'SignatureBlock's, so a single evidence statement could be un-protected, or could be endorsed by multiple
AK chains leading to different trust anchors. See <xref target="sec-verif-proc"/> for a discussion of handling multiple SignatureBlocks.</t>
      </section>
    </section>
    <section anchor="sec-data-model">
      <name>Information Model</name>
      <t>This section describes the semantics of the key claims as part of the information
model.</t>
      <t>The envelop structure is:</t>
      <sourcecode type="asn.1"><![CDATA[
PkixAttestation ::= SEQUENCE {
    tbs TbsPkixAttestation,
    signatures SEQUENCE SIZE (0..MAX) of SignatureBlock
}

TbsPkixAttestation ::= SEQUENCE {
    version INTEGER,
    reportedEntities SEQUENCE SIZE (1..MAX) OF ReportedEntity
}

SignatureBlock ::= SEQUENCE {
   certChain SEQUENCE of Certificate,
   signatureAlgorithm AlgorithmIdentifier,
   signatureValue OCTET STRING
}
]]></sourcecode>
      <t>A PkixAttestation message is composed of a protected section known as the To-Be-Signed or TBS. The integrity of the To-Be-Signed section is ensured with one or multiple cryptographic signatures over the content of the section. There is a provision to carry the X.509 certificates supporting the signature(s).</t>
      <t>The TBS section is composed of a version number, to ensure future extensibility, and a sequence of reported entities.</t>
      <t>For compliance with this specification, <tt>TbsPkixAttestation.version</tt> <bcp14>MUST</bcp14> be <tt>1</tt>.
This envelope format is not extensible; future specifications which make compatibility-breaking changes <bcp14>MUST</bcp14> increment the version number.</t>
      <t>EDNOTE: do we want extension marks on the TbsAttestation object? I can see pros and cons to doing that.</t>
      <t><tt>SignatureBlock.certChain</tt> <bcp14>MUST</bcp14> contain at least one X.509 certificate as per <xref target="RFC5280"/>.
While there might exist attesting environments which use out-of-band or non-X.509 mechanisms for communicating
the AK public key to the Verifier, these <bcp14>SHALL</bcp14> be considered non-compliant with this specification.</t>
      <t>The attribute format is intended to be generic, flexible, and extensible with a default set of attributes defined in this document. Attributes are grouped into entities; an entity can be either a key, a platform, or a request containing a set of claims that are requested to be filled by the attesting environment.</t>
      <sourcecode type="asn.1"><![CDATA[
ReportedEntity ::= SEQUENCE {
    entityType         OBJECT IDENTIFIER,
    reportedAttributes SEQUENCE SIZE (1..MAX) OF ReportedAttribute
}
]]></sourcecode>
      <t>A reported entity is a unit of observation measured by the Attester (the HSM). In this specification, there are three types of entities defined:
- Platform Entity : An entity that reports attributes about the platform, itself. A PKIX Attestation <bcp14>MAY</bcp14> contain only one Platform Entity.
- Key Entity : An entity that represents a single cryptographic key found in a HSM ad its associated attributes. A PKIX Attestation <bcp14>MAY</bcp14> contain one or more Key Entities.
- Transaction Entity : An entity reporting attributes observed from the request itself. A PKIX Attestation <bcp14>MAY</bcp14> contain only one Transaction Entity.</t>
      <t>A reported entity is composed of an Object Identifier (OID), specifying the entity type, and a sequence of reported attributes associated with the entity.</t>
      <t>Although this specification defines only three types of entities, implementations <bcp14>MAY</bcp14> define additional entity types by registering additional OIDs.</t>
      <t>An Attester (HSM) which is requested to provide information about unrecognized entity types <bcp14>MUST</bcp14> fail the operation.</t>
      <t>A Verifier which encounters an unrecognized entity type <bcp14>MAY</bcp14> ignore it.</t>
      <sourcecode type="asn.1"><![CDATA[
id-pkix-attest                    OBJECT IDENTIFIER ::= { 1 2 3 999 }
id-pkix-attest-entity-type        OBJECT IDENTIFIER ::= { id-pkix-attest 0 }
id-pkix-attest-entity-transaction OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 0 }
id-pkix-attest-entity-platform    OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 1 }
id-pkix-attest-entity-key         OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 2 }
id-pkix-attest-entity-request     OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 3 }
]]></sourcecode>
      <t>TODO: do we need entity types for "platform policy" and "key policy" ?</t>
      <t>A PKIX Attestation <bcp14>MUST NOT</bcp14> contain more than one platform entity since duplicate and conflicting platform claims across multiple platform entities can easily lead to security bugs.
A parser <bcp14>MUST</bcp14> fail with an error if it encouters multiple platform entities.</t>
      <t>A PKIX Attestation <bcp14>MUST NOT</bcp14> contain more than one transaction entity. A transaction entity contains attributes that are related to the request such as a "nonce".
A parser <bcp14>MUST</bcp14> fail with an error if it encouters multiple transaction entities.</t>
      <t>A PKIX Attestation <bcp14>MAY</bcp14> contain one or more application key entities. Each key entity <bcp14>SHOULD</bcp14> describe a unique application key. Multiple ReportedEntity objects of type <tt>entity-key</tt> that describe the same application key <bcp14>SHOULD</bcp14> be avoided since different or conflicting claims could lead to security issues on the part of the Verifier or Relying Party.</t>
      <t>TODO: note that we need to be careful about whether it is allowed to include the AK(s) and other "platform-owned" keys in the set of keys you can attest, or only attesting application keys.</t>
      <t>Each reported attribute is composed of an Object Identifier (OID), identifying the type of the attribute, and a value which must be one of the prescribed data types.</t>
      <sourcecode type="asn.1"><![CDATA[
ReportedAttribute ::= SEQUENCE {
    attributeType      OBJECT IDENTIFIER,
    value              OPTIONAL AttributeValue
}

AttributeValue :== CHOICE {
   bytes       [0] IMPLICIT OCTET STRING
   utf8String  [1] IMPLICIT UTF8String,
   bool        [2] IMPLICIT BOOLEAN,
   time        [3] IMPLICIT GeneralizedTime,
   int         [4] IMPLICIT INTEGER,
   oid         [5] IMPLICIT OBJECT IDENTIFIER
}
]]></sourcecode>
      <t>An attribute type is generally associated with a single entity type. In the following sub-sections, defined attributes are grouped according to their related entity types.</t>
      <t>There are circumstances where an attribute type can be repeated for a given entity while other attribute types are unique.
For example, the <tt>hwmodel</tt>, <tt>uptime</tt>, and <tt>fipsboot</tt> attributes are not allowed to have multiple instances since these are global measurements of the platform. However, other attribute types such as <tt>usermods</tt> allow multiple instances as an HSM can have more than one user module loaded. The tables below list for each attribute type whether multiples are allowed.
For attribute types that do not allow multiples, a parser <bcp14>MUST</bcp14> fail with an error if it encouters multiple instances.
For attribute types that allow multiples, a parser <bcp14>MUST</bcp14> treat each one as an independent attribute and <bcp14>MUST NOT</bcp14>, for example, consider later ones to overwrite the previous one. Appraisal policies and profiles <bcp14>SHOULD</bcp14> be clear about how to handle multiples when requiring attribute types that allow multiples.</t>
      <t>PKIX Attestation Requests are discussed in <xref target="sec-reqs"/>.
In the tables in the sections that follow, the column "Request Contains a Value" specifies whether,
when the given attribute appears in a request, whether it is to be a valued or un-valued request attribute as described in <xref target="sec-reqs"/>.</t>
      <section anchor="transaction-attributes">
        <name>Transaction Attributes</name>
        <t>A default and vendor-agnostic set of transaction attributes is defined in this section.</t>
        <t>These attribute types <bcp14>MAY</bcp14> be contained within a transaction entity; i.e. an entity identified by <tt>id-pkix-attest-entity-transaction</tt>.</t>
        <table>
          <thead>
            <tr>
              <th align="left">Attribute</th>
              <th align="left">AttributeValue</th>
              <th align="left">Reference</th>
              <th align="left">Multiple Allowed</th>
              <th align="left">Request Contains a Value</th>
              <th align="left">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">nonce</td>
              <td align="left">bytes</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST</bcp14></td>
              <td align="left">Repeats a "nonce" provided during the atttestation request.</td>
            </tr>
            <tr>
              <td align="left">timestamp</td>
              <td align="left">time</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">The time at which this attestation was generated. Corresponds to EAT IAT claim.</td>
            </tr>
          </tbody>
        </table>
        <section anchor="nonce">
          <name>nonce</name>
          <t>The nonce attribute is used to provide "freshness" quality as to the information provided by the Attester (HSM) in the PkixAttestation message. A client requesting a PkixAttestation message <bcp14>MAY</bcp14> provide a nonce value as part of the request. This nonce value, if provided, <bcp14>SHOULD</bcp14> be repeated as an attribute to the transaction entity.</t>
        </section>
        <section anchor="time">
          <name>time</name>
          <t>The time at which this attestation was generated, according to the internal system clock of the HSM.</t>
          <t>Note that it is common for HSMs to not have an accurate system clock; consider an HSM for a root CA kept offline and booted up infrequently in an local network segregated from all other network, or a smart card which boots up only when held against an NFC reader.
Implementers of emitters <bcp14>SHOULD</bcp14> include this attribute only if the device reliably knows its own time (for example has had recent contact with an NTP server).
Implementers of parsers <bcp14>SHOULD</bcp14> be wary of trusting the contents of this attribute. A challenge-response protocol that makes use of the nonce attribute is a far more reliable way of establishing freshness.</t>
        </section>
      </section>
      <section anchor="platform-attributes">
        <name>Platform Attributes</name>
        <t>A default and vendor-agnostic set of platform attributes is defined in this section.</t>
        <t>These attribute types <bcp14>MAY</bcp14> be contained within a platform entity; i.e. an entity identified by <tt>id-pkix-attest-entity-platform</tt>.</t>
        <table>
          <thead>
            <tr>
              <th align="left">Attribute</th>
              <th align="left">AttributeValue</th>
              <th align="left">Reference</th>
              <th align="left">Multiple Allowed</th>
              <th align="left">Request Contains a Value</th>
              <th align="left">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">vendor</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">A human-readable string by which the vendor identifies themself.</td>
            </tr>
            <tr>
              <td align="left">oemid</td>
              <td align="left">bytes</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">The EAT OEM ID as defined in <xref target="I-D.ietf-rats-eat"/>.</td>
            </tr>
            <tr>
              <td align="left">hwmodel</td>
              <td align="left">utf8String</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Model or product line of the hardware module.</td>
            </tr>
            <tr>
              <td align="left">hwserial</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Serial number of the hardware module, often matches the number engraved or stickered on the case.</td>
            </tr>
            <tr>
              <td align="left">swversion</td>
              <td align="left">utf8String</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">A text string identifying the firmware or software running on the HSM.</td>
            </tr>
            <tr>
              <td align="left">dbgstat</td>
              <td align="left">int</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Indicates whether the HSM is currently in a debug state, or is capable in the future of being turned to a debug state. Semantics and integer codes are defined in <xref target="I-D.ietf-rats-eat"/>.</td>
            </tr>
            <tr>
              <td align="left">uptime</td>
              <td align="left">int</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Contains the number of seconds that have elapsed since the entity was last booted.</td>
            </tr>
            <tr>
              <td align="left">bootcount</td>
              <td align="left">int</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Contains a count of the number of times the entity has been booted.</td>
            </tr>
            <tr>
              <td align="left">usermods</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">Yes</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">This attribute lists user modules currently loaded onto the HSM in a human readable format, preferabbly JSON.</td>
            </tr>
            <tr>
              <td align="left">fipsboot</td>
              <td align="left">bool</td>
              <td align="left">
                <xref target="FIPS.140-3"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Indicates whether the devices is currently running in FIPS mode.</td>
            </tr>
            <tr>
              <td align="left">fipsver</td>
              <td align="left">utf8String</td>
              <td align="left">
                <xref target="FIPS.140-3"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Indicates the version of the FIPS CMVP standard that is being enforced. At time of writing this is typically "FIPS 140-2" or "FIPS 140-3".</td>
            </tr>
            <tr>
              <td align="left">fipslevel</td>
              <td align="left">int</td>
              <td align="left">
                <xref target="FIPS.140-3"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Indicates the FIPS Level to which the device is currently operating in compliance with.</td>
            </tr>
            <tr>
              <td align="left">envid</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">Yes</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">An environment ID, which will typically be a URI, UUID, or similar.</td>
            </tr>
            <tr>
              <td align="left">envdesc</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">Yes</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Further description of the environment.</td>
            </tr>
          </tbody>
        </table>
        <t>TODO: find the actual reference for "FIPS Mode" -- FIPS 140-3 does not define it (at least not the 11 page useless version of 140-3 that I found).</t>
        <t>Each attribute has an assigned OID, see <xref target="sec-asn1-mod"/>.</t>
        <t>Some of the attributes defined in this specification have further details below.</t>
        <section anchor="usermods">
          <name>usermods</name>
          <t>Most HSMs have some concept of trusted execution environment where user software modules can be loaded inside the HSM to run with some level of privileged access to the application keys. This attribute lists user modules currently loaded onto the HSM in a human readable format, preferably JSON.</t>
        </section>
        <section anchor="fipsboot-fipsver-and-fipslevel">
          <name>fipsboot, fipsver and fipslevel</name>
          <t>FIPS 140-3 CMVP validation places stringent requirements on the mode of operation of the device and the cryptography offered by the module, including only enabling FIPS-approved algorithms, certain requirements on entropy sources, and extensive start-up self-tests. FIPS 140-3 offers compliance levels 1 through 4 with increasingly strict requirements. Many HSMs include a configuration setting that allows the device to be taken out of FIPS mode and thus enable additional functionality or performance, and some offer configuration settings to change between compliance levels.</t>
          <t>The boolean attribute <tt>fipsboot</tt> indicates whether the device is currently operating in FIPS mode. For most HSMs, changing this configuration setting from <tt>fipsboot=true</tt> to <tt>fips-boos=false</tt> is destructive and will result in zeroization of all cryptographic keys held within the module.</t>
          <t>The UTF8String attribet <tt>fipsver</tt> indicates the version of the FIPS CMVP specification with which the device's operational mode is compliant. At the time of writing, the strings "FIPS 140-2" or "FIPS 140-3" <bcp14>SHOULD</bcp14> be used.</t>
          <t>The integer attribute <tt>fipslevel</tt> indicates the compliance level to which the device is currently operating and <bcp14>MUST</bcp14> only be 1, 2, 3, or 4. The <tt>fipslevel</tt> attribute has no meaning if <tt>fipsboot</tt> is absent or <tt>false</tt>.</t>
          <t>The FIPS status information in a PKIX Attestation indicates only the mode of operation of the device and is not authoritative of its validation status.
This information is available on the NIST CMVP website or by contacting the device vendor.
As an example, some devices may have the option to enable FIPS mode in configuration even if the vendor has not sumbitted this model for validation. As another example, a device may be running in a mode consistent with FIPS Level 3 but the device was only validated and certified to Level 2.
A Relying Party wishing to know the validation status of the device <bcp14>MUST</bcp14> couple the device state information contained in the attestation with a valid FIPS CMVP certificate for the device.</t>
        </section>
        <section anchor="envid">
          <name>envid</name>
          <t>An identifier for an environment to which the attested keys belong. These will be an a vendor-chosen format, but are constrained to ASCII as URIs, UUID, and similar types of identifiers are envisioned.</t>
          <t>There <bcp14>MAY</bcp14> be multiple envid attributes if the attested keys simultaneously belong to multiple environments.</t>
          <t>Note that by including envid as a Platform Attribute, this implies that it applies to all attested key entities. If the HSM needs to attest multiple keys across multiple disjoint environments, then multiple PKIXAttestations are required. This naturally enforces privacy constraints of only attesting a single environment at a time.</t>
          <t>If an envdid request attribute contains a value, this means that the Presenter is requesting that only keys belogning to the given environment be included in the returned attestation.</t>
        </section>
        <section anchor="envdesc">
          <name>envdesc</name>
          <t>Further description of the environment beyond hwvendor, hwmodel, hwserial, swversion; for example if there is a need to describe multiple logical partitions within the same device. Contents could be a human-readable description or other identifiers.</t>
        </section>
      </section>
      <section anchor="key-attributes">
        <name>Key Attributes</name>
        <t>A default and vendor-agnostic set of key attributes is defined in this section.</t>
        <t>These attribute types <bcp14>MAY</bcp14> be contained within a key entity; i.e. an entity identified by <tt>id-pkix-attest-entity-key</tt>.</t>
        <table>
          <thead>
            <tr>
              <th align="left">Attribute</th>
              <th align="left">AttributeValue</th>
              <th align="left">Reference</th>
              <th align="left">Multiple Allowed</th>
              <th align="left">Request Contains a Value</th>
              <th align="left">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">identifier</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">Yes</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Identifies the subject key, with a vendor-specific format which could be numeric, UUID, or other textual identifier.</td>
            </tr>
            <tr>
              <td align="left">spki</td>
              <td align="left">bytes</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">A complete DER-encoded SubjectPublicKeyInfo representing the public key associated with the asymetric key pair being attested.</td>
            </tr>
            <tr>
              <td align="left">purpose</td>
              <td align="left">bytes</td>
              <td align="left">
                <xref target="PKCS11"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Defines the intended usage for the key.</td>
            </tr>
            <tr>
              <td align="left">extractable</td>
              <td align="left">bool</td>
              <td align="left">
                <xref target="PKCS11"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Indicates if the key is able to be exported from the module. Corresponds directly to PKCS#11 CKA_EXTRACTABLE.</td>
            </tr>
            <tr>
              <td align="left">sensitive</td>
              <td align="left">bool</td>
              <td align="left">
                <xref target="PKCS11"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Indicates that the key cannot leave the module in plaintext. Corresponds directly to PKCS#11 CKA_SENSITIVE.</td>
            </tr>
            <tr>
              <td align="left">never-extractable</td>
              <td align="left">bool</td>
              <td align="left">
                <xref target="PKCS11"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Indicates if the key was able to be exported from the module. Corresponds directly to PKCS#11  CKA_NEVER_EXTRACTABLE.</td>
            </tr>
            <tr>
              <td align="left">local</td>
              <td align="left">bool</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Indicates whether the key was generated locally or imported.</td>
            </tr>
            <tr>
              <td align="left">expiry</td>
              <td align="left">time</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Defines the expiry date or "not after" time for the key.</td>
            </tr>
            <tr>
              <td align="left">protection</td>
              <td align="left">bytes</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Indicates any additional key protection properties.</td>
            </tr>
          </tbody>
        </table>
        <t>PKCS#11 private key attributes can be somewhat complex to parse, especially as their exact meanings can vary by the key type and the exact details of key export mechanisms supported by the HSM.</t>
        <t>In most cases, the Verifier of a PKIX Attestation will want to know simply that the key is in hardware and cannot be extracted to be used with a software cryptographic module. A setting of <tt>extractable=false</tt> satisfies this requirement. Generally <tt>extractable=true &amp;&amp; sensitive=true</tt> also satisfies this requirement as the key cannot be extracted in plaintext, but only under key wrap. This is common in HSM clustering scenarios, and is also common in scenarios where keys are exported under wrap so that they can be stored in an off-board database for re-import later, thus allowing the HSM to protect and manage a much larger set of keys than it has internal memory for. The <tt>never-extractable</tt> and <tt>local</tt> attributes give additional assurance that the key has always been in hardware and was not imported from software.</t>
        <section anchor="purpose">
          <name>purpose</name>
          <t>TODO: probably need to define a mapping from PKCS#11 CKA enums to a bit-indexed byte array.</t>
        </section>
        <section anchor="protection">
          <name>protection</name>
          <t>Indicates any additional key protection properties around use or modification of this key. These are generalized properties and will not apply the same way to all HSM vendors. Consult vendor documentation for the in-context meaning of these flags.</t>
          <t>TODO: define a bit-indexed byte array</t>
          <t>BIT MASK / Boolean Array {DualControl (0), CardControl (1), PasswordControl (2), ...}</t>
          <t>We may need to say that the first X are reserved for use by future RFCs that update this specification, and beyond that is private use.</t>
        </section>
      </section>
      <section anchor="sec-additional-attr-types">
        <name>Additional Entity and Attribute Types</name>
        <t>It is expected that HSM vendors will register additional Entity and Attribute types by assigning OIDs from their own proprietary OID arcs to hold data describing additional proprietary key properties.</t>
        <t>An Attester (HSM) which is requested to provide information about unrecognized Entity or Attribute types <bcp14>MUST</bcp14> fail the operation.</t>
        <t>A Verifier which encounters an unrecognized Entity or Attribute type <bcp14>MAY</bcp14> ignore it.</t>
      </section>
      <section anchor="encoding">
        <name>Encoding</name>
        <t>A PKIXAttestation is to be DER encoded <xref target="X.690"/>.</t>
        <t>If a textual representation is required, then the DER encoding <bcp14>MAY</bcp14> be subsequently encoded into Base64.</t>
        <t>EDNOTE: I think we have to be precise about which flavour of Base64 we are referrring to.</t>
      </section>
    </section>
    <section anchor="signing-procedure">
      <name>Signing Procedure</name>
      <t>The <tt>SignatureBlock.signatureValue</tt> signs over the DER-encoded to-be-signed attestation data
<tt>PkixAttestation.tbs</tt> and <bcp14>MUST</bcp14> be validated with the subject public key of the leaf
X.509 certificate contained in the <tt>SignatureBlock.certChain</tt>.</t>
    </section>
    <section anchor="sec-verif-proc">
      <name>Verification Procedure</name>
      <t>The <tt>SignatureBlock.signatureValue</tt> signs over the DER-encoded to-be-signed attestation data
<tt>PkixAttestation.tbs</tt> and <bcp14>MUST</bcp14> be validated with the subject public key of the leaf
X.509 certificate contained in the <tt>SignatureBlock.certChain</tt>.</t>
      <t>Note that a PkixAttestation <bcp14>MAY</bcp14> contain zero or more SignatureBlocks.
A PkixAttestation with zero SignatureBlocks is unsigned, <bcp14>MUST</bcp14> be treated as un-protected and un-trusted,
and any signature validation procedure <bcp14>MUST</bcp14> fail.</t>
      <t>More than one SignatureBlocks <bcp14>MAY</bcp14> be used to convey a number of different semantics.
For example, the HSM's Attesting Service might hold multiple Attestation Keys on different cryptographic
algorithms in order to provide algorithm redundancy in the case that one algorithm becomes cryptographically broken. In this case a Verifier would be expected to validate all SignatureBlocks. Alternatively, the HSM's Attesting Service may hold multiple Attestion Keys (or multiple X.509 certificates for the same key) from multiple operational environments to which it belongs. In this case a Verifier would be expected to only validate the SignatureBlock corresponding to its own environment. Alternatively, multiple SignatureBlocks could be used to convey counter-signatures from external parties, in which case the Verifier will need to be equipped with environment-specific verification logic. Multiple of these cases, and potentially others, could be present in a single PkixAttestation object.</t>
      <t>Note that each SignatureBlock is a fully detached signature over the tbs content with no binding between the signed content and the SignatureBlocks, or between SignatureBlocks, meaning that a third party can add a
counter-signature of the evidence after the fact, or an attacker can remove a SignatureBlock without leaving any artifact. See {#sec-detached-sigs} for further discussion.</t>
    </section>
    <section anchor="sec-reqs">
      <name>Attestation Requests</name>
      <t>EDNOTE: MikeO: this is complex, but I'm not really sure how to define a request format in any simpler way. Ideas are welcome!</t>
      <t>This section specifies a standardized format that a Presenter can use to request a PKIX Attestation about a specific key or set of keys, a specific environment, or containing specific attributes.</t>
      <t>Hardware Security Modules range greatly in size and complexity from personal cryptographic tokens containing a single application key such as a smartcard acting as a personal ID card, up to clusters of enterprise-grade HSMs serving an entire cloud service.</t>
      <t>The manufacturer of a HSM device with limited capabilities may implement a response to the attestation request which includes a fixed set of reported entities, each with a fixed set of reported attributes and parses an Attestion Request object only for the purposes of extracting the nonce.</t>
      <t>On the other hand, an enterprise grade HSM with the capability to hold a large number of private keys is expected to be capable of parsing attestation requests such that a Presenter can request attestation of specific key(s) by their identifier, or request attestation of all keys with given key attributes within a given sub-environment of the HSM. A full implementation will also create a PKIX Attestation containing exactly the set of requested attributes so that the Presenter can fine-tune the information that it wishes to disclose to the Recipient.</t>
      <t>A PKIX Attestation Request consists of a un-signed TbsPkixAttestation object containing a single <tt>ReportedEntity</tt> identified with <tt>id-pkix-attest-entity-request</tt>, called a request entity. A TbsPkixAttestation containing a request entity <bcp14>MUST NOT</bcp14> contain any other type of entities. Request entities <bcp14>MAY</bcp14> contain Attributes of any type; transaction, platform, key, or any additional attribute type. Any attribute contained in a request entity is called a request attribute. Request entities <bcp14>MUST NOT</bcp14> appear in PKIX Attestation response objects. The TbsPkixAttestation object of an attestation request <bcp14>MAY</bcp14> appear inside a signed PKIXAttestation for the purposes of authenticating and authorizing the requester, but the semantics of doing so are left to the implementer.</t>
      <t>An Attester that supports Attestation Requests <bcp14>MUST</bcp14>, at the minimum, support extracting the value from a <tt>nonce</tt> attribute and echoing it into a <tt>nonce</tt> attribute within a TransactionEntity.</t>
      <t>Some request attributes contain a value that the HSM uses as a filter or search parameter in constructing the PKIX Attestation; these are called valued requests attributes.
Other requests attributes omit the optional <tt>value</tt> field so that they consist of only the attribute type OID and indicate that the HSM <bcp14>SHOULD</bcp14> collect and return the appropriate measurement; these are called un-valued request attributes.
An Attester <bcp14>SHOULD</bcp14> return a PKIX Attestation containing exactly the set of attributes listed in the request, including both valued and un-valued request attributes but <bcp14>MAY</bcp14> omit requested attributes if it cannot be measured in the current device configuration.
Note that an Attestation Request will contain all request attributes inside a single request entity, but the HSM <bcp14>MUST</bcp14> sort the attributes in the response PKIX Attestation into the appropriate entity types.
For example, if the request contains the key <tt>purpose</tt> attribute (either valued or un-valued), then all returned key entities will contain the <tt>purpose</tt> attribute when this data is available for the given key.
The tables in the following sections indicate whether an attribute of the given type <bcp14>MUST</bcp14>, <bcp14>MAY</bcp14>, or <bcp14>MUST NOT</bcp14> contain a value when included in a request entity.</t>
      <t>Generally errors should be handled gracefully by simply omitting an unfulfillable request attribute from the response.
An example would be if the <tt>hwserial</tt> attribute was requested but the devices does not have a serial number.
However in some cases a fatal error <bcp14>MAY</bcp14> be returned, for example if attestation of a specific key is requested by key identifier or SubjectPublicKeyInfo but the HSM does not contain a matching key.
HSMs <bcp14>SHOULD</bcp14> ignore request attributes with unrecognized type OIDs.</t>
      <t>Generally, the Attester <bcp14>SHOULD NOT</bcp14> include additional attributes beyond those that were requested. This is to allow the Presenter to fine-tune the information that will be disclosed to the Recipient.
Further privacy concerns are discussed in <xref target="sec-cons-privacy"/>.
However, in some contexts this <bcp14>MAY</bcp14> be appropriate, for example, a request containing only a key <tt>identifier</tt> attribute could be responded to with the full set of platform and key attributes that apply to that key.
Discretion is left to implementers.</t>
      <t>For both error handling and privacy reasons, the Presenter <bcp14>SHOULD</bcp14> check that the returned PKIX Attestation contains the expected attributes prior to forwarding it to the Recipient.</t>
    </section>
    <section anchor="sec-profiles">
      <name>Appraisal Policies and Profiles</name>
      <t>This section provides some sample profiles of appraisal policies that verifiers
<bcp14>MAY</bcp14> apply when evaluating evidence. These appraisal profiles represent environment-specific requirements
on the contents of the evidence and / or endorsement certificate chain.</t>
      <section anchor="key-import-into-an-hsm">
        <name>Key Import into an HSM</name>
        <t>An HSM which is compliant with this draft <bcp14>SHOULD</bcp14> validate any PKIX Key Attestations that are provided
along with the key being imported.</t>
        <t>The SignatureBlocks <bcp14>MUST</bcp14> be validated and <bcp14>MUST</bcp14> chain to a trust anchor known to the HSM. In most cases this will
be the same trust anchor that endorsed the HSMs own AK, but the HSM <bcp14>MAY</bcp14> be configured with set of third party trust anchors from which it will accept key attestations.</t>
        <t>If the HSM is operating in FIPS Mode, then it <bcp14>MUST</bcp14> only import keys from HSMs also operating in FIPS Mode.</t>
        <t>The claims <tt>key-purpose</tt>, <tt>key-extractable</tt>, <tt>key-never-extractable</tt>, <tt>key-local</tt> <bcp14>MUST</bcp14> be checked and honoured during key import, which typically means that after import, the key <bcp14>MUST NOT</bcp14> claim a stronger protection property than it had on the previous hardware. In other words, Key Attestation allows and requires that key protection properties be preserved over export / import operations between different HSMs, and this format provides a vendor-agnostic
way to acheive this.</t>
        <t>How to handle errors is outside the scope of this specification and is left to implementors; for example the
key import <bcp14>MAY</bcp14> be aborted, or a prompt <bcp14>MAY</bcp14> be given to the user administrator, or any similar reasonable error handling logic.</t>
      </section>
      <section anchor="cabrowser-forum-code-signing">
        <name>CA/Browser Forum Code-Signing</name>
        <t>TODO: ... intro text</t>
        <t>The subscriber <bcp14>MUST</bcp14>:</t>
        <ul spacing="normal">
          <li>
            <t>Provide the CA with a CSR containing the subscriber key.</t>
          </li>
          <li>
            <t>Provide an attestation token as per this specification describing the private key protection properties of the subscriber's private key. This token <bcp14>MAY</bcp14> be transported inside the CSR as per draft-ietf-lamps-csr-attest, or it <bcp14>MAY</bcp14> be transported adjacent to the CSR over any other certificate enrollment mechanism.</t>
          </li>
        </ul>
        <t>The CA / RA / RP / Verifier <bcp14>MUST</bcp14>:</t>
        <ul spacing="normal">
          <li>
            <t>Ensure that the subscriber key which is the subject of the CSR is also described by a KAT by matching either the key fingerprint or full SubjectPublicKeyInfo.</t>
          </li>
          <li>
            <t>The hardware root-of-trust described by a PAT has a valid and active FIPS certificate according to the NIST CMVP database.</t>
          </li>
          <li>
            <t>The attestation signing key (AK) which has signed the attestation token chains to a root certificate that A) belongs to the hardware vendor described in the PAT token, and B) is trusted by the CA / RA / RP / Verifier to endorse hardware from this vendor, for example through a CA's partner program or through a network operator's device on-boarding process.</t>
          </li>
          <li>
            <t>The key is protected by a module running in FIPS mode. The parsing logic is to start at the leaf KAT token that matches the key in the CSR and parsing towards the root PAT ensuring that there is at least one <tt>fipsboot=true</tt> and no <tt>fipsboot=false</tt> on that path.</t>
          </li>
        </ul>
      </section>
    </section>
    <section anchor="sec-asn1-mod">
      <name>ASN.1 Module</name>
      <sourcecode type="asn.1"><![CDATA[
<CODE STARTS>

PKIX-Key-Attest-2025
      { iso(1) identified-organization(3) dod(6) internet(1) 
        security(5) mechanisms(5) pkix(7) id-mod(0) 
        id-mod-pkik-key-attest-2025(TBDMOD) }


PkixAttestation ::= SEQUENCE {
    tbs TbsPkixAttestation,
    signatures SEQUENCE SIZE (0..MAX) of SignatureBlock
}

TbsPkixAttestation ::= SEQUENCE {
    version INTEGER,
    reportedEntities SEQUENCE SIZE (1..MAX) OF ReportedEntity
}

ReportedEntity ::= SEQUENCE {
    entityType         OBJECT IDENTIFIER,
    reportedAttributes SEQUENCE SIZE (1..MAX) OF ReportedAttribute
}

ReportedAttribute ::= SEQUENCE {
    attributeType      OBJECT IDENTIFIER,
    value              AttributeValue
}

AttributeValue :== CHOICE {
   bytes       [0] IMPLICIT OCTET STRING
   utf8String  [1] IMPLICIT UTF8String,
   bool        [2] IMPLICIT BOOLEAN,
   time        [3] IMPLICIT GeneralizedTime,
   int         [4] IMPLICIT INTEGER,
   oid         [5] IMPLICIT OBJECT IDENTIFIER
}

SignatureBlock ::= SEQUENCE {
   certChain SEQUENCE of Certificate,
   signatureAlgorithm AlgorithmIdentifier,
   signatureValue OCTET STRING
}

id-pkix-attest OBJECT IDENTIFIER ::= { 1 2 3 999 }

id-pkix-attest-entity-type        OBJECT IDENTIFIER ::= { id-pkix-attest 0 }
id-pkix-attest-entity-transaction OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 0 }
id-pkix-attest-entity-platform    OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 1 }
id-pkix-attest-entity-key         OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 2 }

id-pkix-attest-attribute-type OBJECT IDENTIFIER ::= { id-pkix-attest 1 }

id-pkix-attest-attribute-transaction       OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-type 0 }
id-pkix-attest-attribute-transaction-nonce OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-transaction 0 }

id-pkix-attest-attribute-platform            OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-type 1 }
id-pkix-attest-attribute-platform-vendor     OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 0 }
id-pkix-attest-attribute-platform-hwserial   OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 1 }
id-pkix-attest-attribute-platform-fipsboot   OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 2 }
id-pkix-attest-attribute-platform-desc       OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 3 }
id-pkix-attest-attribute-platform-time       OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 4 }
id-pkix-attest-attribute-platform-swversion  OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 5 }
id-pkix-attest-attribute-platform-oemid      OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 6 }
id-pkix-attest-attribute-platform-debugstat  OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 7 }
id-pkix-attest-attribute-platform-uptime     OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 8 }
id-pkix-attest-attribute-platform-bootcount  OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 9 }
id-pkix-attest-attribute-platform-usermods   OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 8 }
id-pkix-attest-attribute-platform-envid      OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 9 }
id-pkix-attest-attribute-platform-envdesc    OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 10 }
id-pkix-attest-attribute-platform-fipsver  OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 11 }
id-pkix-attest-attribute-platform-fipslevel  OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 12 }



id-pkix-attest-attribute-key                   OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-type 2 }
id-pkix-attest-attribute-key-identifier        OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 0 }
id-pkix-attest-attribute-key-spki              OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 1 }
id-pkix-attest-attribute-key-purpose           OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 2 }
id-pkix-attest-attribute-key-extractable       OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 3 }
id-pkix-attest-attribute-key-never-extractable OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 4 }
id-pkix-attest-attribute-key-local             OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 5 }
id-pkix-attest-attribute-key-expiry            OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 6 }
id-pkix-attest-attribute-key-protection        OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 7 }

<CODE ENDS>

]]></sourcecode>
    </section>
    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <t>Please replace "RFCthis" with the RFC number assigned to this document.</t>
      <t>TODO: list out all the OIDs that need IANA registration.</t>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>A Verifier <bcp14>MAY</bcp14> reject a PKIX Attestation if it lacks required attributes per their
appraisal policy. For example, if a Relying Party mandates a FIPS-certified device,
it <bcp14>SHOULD</bcp14> reject evidence lacking sufficient information to verify the device's FIPS
certification status.</t>
      <section anchor="sec-cons-simple">
        <name>Simple to Implement</name>
        <t>The nature of attestation requires the attestation service to be implemented in an extremely privileged position within the HSM so that it can collect measurements of both the hardware environment and the application keys being attested. For many HSM and TPM architectures, this will place the Attestation Service inside the "HSM kernel" and potentially subject to FIPS 140-3 or Common Criteria validation and change control. For both security and compliance reasons there is incentive for the emitting and parsing logic to be simple and easy to implement correctly. Additionally, when the data formats contained in this specification are parsed within an HSM boundary -- that would be parsing a request entity, or parsing an attestation produced by a different HSM -- implementers <bcp14>SHOULD</bcp14> opt for simple logic that rejects any data that does not match the expected format instead of attempting to be flexible.</t>
        <t>In particular, Attesting Services <bcp14>SHOULD</bcp14> generate the attestation object from scratch and avoid copying any content from the request. Attesting Services <bcp14>MUST NOT</bcp14> allow unrecognized attributes or any attribute value other than the nonce to be echoed from the request into the attestation object.</t>
      </section>
      <section anchor="sec-detached-sigs">
        <name>Detached Signatures</name>
        <t>TODO beef this up</t>
        <t>No indication within the tbs content about what or how many signatures to expect.</t>
        <t>A SignatureBlock can be trivially stripped off without leaving any evidence.</t>
        <t>When multiple SignatureBlocks are used for providing third party counter-signatures, note that the counter signature only covers the tbs content and not existing SignatureBlocks.</t>
      </section>
      <section anchor="sec-cons-privacy">
        <name>Privacy</name>
        <t>Often, a TPM will host cryptographic keys for both the kernel and userspace of a local operating system but a Presenter may only represents a single user or application.
Similarly, a single enterprise-grade Hardware Security Module will often host cryptographic keys for an entire multi-tenant cloud service and the Presenter or Reciever or Recipient belongs only to a single tenant. For example the HSM backing a TLS-terminating loadbalancer fronting thousands of un-related web domains.
In these cases, disclosing that two different keys reside on the same hardware, or in some cases even disclosing the existance of a given key, let alone its attributes, to an unauthorized party would constitute an egregious privacy violation.</t>
        <t>Implementions <bcp14>SHOULD</bcp14> be careful to avoid over-disclosure of information, for example by authenticating the Presenter as described in <xref target="sec-cons-auth-the-presenter"/> and only returning results for keys and envirnments for which it is authorized.
In absence of an existing mechanism for authenticating and authorizing administrative connections to the HSM, the attestation request <bcp14>MAY</bcp14> be authenticated by embedding the TbsPkixAttestation of the request inside a PKIXAttestation signed with a certificate belogning to the Presenter.</t>
        <t>Furthermore, enterprise and cloud-services grade HSMs <bcp14>SHOULD</bcp14> support the full set of attestation request functionality described in <xref target="sec-reqs"/> so that Presenters can fine-tune the content of a PKIX Attestation such that it is appropriate for the intended Recipient.</t>
      </section>
      <section anchor="sec-cons-auth-the-presenter">
        <name>Authenticating and Authorizing the Presenter</name>
        <t>The Presenter represents a priviledged role within the architecture of this specification as it gets to learn about the existence of application keys and their protection properties, as well as details of the platform.
The Presenter is in the position of deciding how much information to disclose to the Recipient, and to request a suitably redacted attestation from the HSM.</t>
        <t>For personal cryptographic tokens it might be appropriate for the attestation request interface to be un-authenticated. However, for enterprise and cloud-services grade HSMs the Presenter <bcp14>SHOULD</bcp14> be authenticated using the HSM's native authentication mechanism. The details will be HSM-specific and are thus left up to the implementer, however it is <bcp14>RECOMMENDED</bcp14> to implement an authorization framework similar to the following.</t>
        <t>A Presenter <bcp14>SHOULD</bcp14> be allowed to request attestation for any application keys which it is allowed to use.
For example, a TLS application that is correctly authenticated to the HSM in order to use its TLS keys <bcp14>SHOULD</bcp14> be able to request attestation of those same keys without needing to perform any additional authentication or requiring any additional roles or permissions.
HSMs that wish to allow a Presenter to request attestation of keys which is not allowed to use, for example for the purposes of displaying HSM status information on an administrative console or UI, <bcp14>SHOULD</bcp14> have a "Attestation Requester" role or permission and <bcp14>SHOULD</bcp14> enforce the HSM's native access controls such that the Presenter can only retrieve attestations for keys for which it has read access.</t>
      </section>
      <section anchor="proof-of-possession-of-application-keys">
        <name>Proof-of-Possession of Application Keys</name>
        <t>With asymmetric keys within a Public Key Infrastructure (PKI) it is common to require a key holder to prove that they are in control of the private key by using it. This is called "proof-of-possession (PoP)". This specification intentionally does not provide a mechnaism for PoP of application keys and relies on the Presenter, Recipient, Verifier, and Relying Party trusting the Attester to correctly report the cryptographic keys that it is holding.</t>
        <t>It would be easy to add a PoP Key Attribute that uses the attested application key to sign over, for example, the Transaction Entity, however this is a bad idea and <bcp14>MUST NOT</bcp14> be added as a custom attribute for several reasons.</t>
        <t>First, an application key intended, for example, for TLS <bcp14>SHOULD</bcp14> only be used with the TLS protocol and introducing a signature oracle whereby the TLS application key is used to sign attestation content could lead to cross-protocol attacks whereby the attacker submits a nonce value which is in fact not random but is crafted in such a way as to appear as a valid message in some other protocol context or exploit some other weakness in the signature algorithm.</t>
        <t>Second, the Presenter who has connected to the HSM to request an attestation may have permissions to view the requested application keys but not permission to use them, as in the case where the Presenter is an administrative UI displaying HSM status information to an systems administrator or auditor.
Requiring the Attestation Service to use the attested application keys could, in some architectures, require the Attestation Service to resolve complex access control logic and handle complex error conditions for each requested key, which violates the "simple to implement" design principle outlined in <xref target="sec-cons-simple"/>. More discussion of authenticating the Presenter can be found in <xref target="sec-cons-auth-the-presenter"/>.</t>
        <t>In cases where explicit PoP is required for a given attested application key, it <bcp14>MUST</bcp14> be done as part of the regular usage protocol for which that key is intended and performed through the HSM's regular application interface, not its attestation interface. For example, PoP could be performed by signing a Certificate Signing Request (CSR), through a PKI enrollment protocol such as Certificate Management Protocol (CMP) which includes a challenge-response PoP, by using the key within a TLS handshake, or some other protocol which is part of the key's intended usage.</t>
      </section>
    </section>
  </middle>
  <back>
    <references anchor="sec-combined-references">
      <name>References</name>
      <references anchor="sec-normative-references">
        <name>Normative References</name>
        <reference anchor="RFC2119" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC9334">
          <front>
            <title>Remote ATtestation procedureS (RATS) Architecture</title>
            <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
            <author fullname="D. Thaler" initials="D." surname="Thaler"/>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="N. Smith" initials="N." surname="Smith"/>
            <author fullname="W. Pan" initials="W." surname="Pan"/>
            <date month="January" year="2023"/>
            <abstract>
              <t>In network protocol exchanges, it is often useful for one end of a communication to know whether the other end is in an intended operating state. This document provides an architectural overview of the entities involved that make such tests possible through the process of generating, conveying, and evaluating evidentiary Claims. It provides a model that is neutral toward processor architectures, the content of Claims, and protocols.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9334"/>
          <seriesInfo name="DOI" value="10.17487/RFC9334"/>
        </reference>
        <reference anchor="RFC5280" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5280.xml">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author fullname="D. Cooper" initials="D." surname="Cooper"/>
            <author fullname="S. Santesson" initials="S." surname="Santesson"/>
            <author fullname="S. Farrell" initials="S." surname="Farrell"/>
            <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="W. Polk" initials="W." surname="Polk"/>
            <date month="May" year="2008"/>
            <abstract>
              <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5280"/>
          <seriesInfo name="DOI" value="10.17487/RFC5280"/>
        </reference>
        <reference anchor="I-D.ietf-rats-eat">
          <front>
            <title>The Entity Attestation Token (EAT)</title>
            <author fullname="Laurence Lundblade" initials="L." surname="Lundblade">
              <organization>Security Theory LLC</organization>
            </author>
            <author fullname="Giridhar Mandyam" initials="G." surname="Mandyam">
              <organization>Mediatek USA</organization>
            </author>
            <author fullname="Jeremy O'Donoghue" initials="J." surname="O'Donoghue">
              <organization>Qualcomm Technologies Inc.</organization>
            </author>
            <author fullname="Carl Wallace" initials="C." surname="Wallace">
              <organization>Red Hound Software, Inc.</organization>
            </author>
            <date day="6" month="September" year="2024"/>
            <abstract>
              <t>   An Entity Attestation Token (EAT) provides an attested claims set
   that describes state and characteristics of an entity, a device like
   a smartphone, IoT device, network equipment or such.  This claims set
   is used by a relying party, server or service to determine the type
   and degree of trust placed in the entity.

   An EAT is either a CBOR Web Token (CWT) or JSON Web Token (JWT) with
   attestation-oriented claims.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-rats-eat-31"/>
        </reference>
        <reference anchor="X.680" target="https://www.itu.int/rec/T-REC-X.680">
          <front>
            <title>Information technology -- Abstract Syntax Notation One (ASN.1): Specification of basic notation</title>
            <author>
              <organization>ITU-T</organization>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="X.690">
          <front>
            <title>Information technology - ASN.1 encoding Rules: Specification of Basic Encoding Rules (BER), Canonical Encoding Rules (CER) and Distinguished Encoding Rules (DER)</title>
            <author>
              <organization>ITU-T</organization>
            </author>
            <date year="2015" month="November"/>
          </front>
          <seriesInfo name="ISO/IEC" value="8825-1:2015"/>
        </reference>
        <reference anchor="PKCS11" target="https://docs.oasis-open.org/pkcs11/pkcs11-spec/v3.1/cs01/pkcs11-spec-v3.1-cs01.html">
          <front>
            <title>PKCS #11 Specification Version 3.1</title>
            <author initials="T." surname="Cox" fullname="Tony Cox">
              <organization>OASIS PKCS 11 TC</organization>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="FIPS.140-3" target="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-3.pdf">
          <front>
            <title>SECURITY REQUIREMENTS FOR CRYPTOGRAPHIC MODULES</title>
            <author>
              <organization>NIST - Information Technology Laboratory</organization>
            </author>
            <date>n.d.</date>
          </front>
          <seriesInfo name="FIPS" value="140-3"/>
        </reference>
        <reference anchor="RFC8174" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
      </references>
      <references anchor="sec-informative-references">
        <name>Informative References</name>
        <reference anchor="RFC2986" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2986.xml">
          <front>
            <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
            <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
            <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
            <date month="November" year="2000"/>
            <abstract>
              <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2986"/>
          <seriesInfo name="DOI" value="10.17487/RFC2986"/>
        </reference>
        <reference anchor="RFC6024">
          <front>
            <title>Trust Anchor Management Requirements</title>
            <author fullname="R. Reddy" initials="R." surname="Reddy"/>
            <author fullname="C. Wallace" initials="C." surname="Wallace"/>
            <date month="October" year="2010"/>
            <abstract>
              <t>A trust anchor represents an authoritative entity via a public key and associated data. The public key is used to verify digital signatures, and the associated data is used to constrain the types of information for which the trust anchor is authoritative. A relying party uses trust anchors to determine if a digitally signed object is valid by verifying a digital signature using the trust anchor's public key, and by enforcing the constraints expressed in the associated data for the trust anchor. This document describes some of the problems associated with the lack of a standard trust anchor management mechanism and defines requirements for data formats and push-based protocols designed to address these problems. This document is not an Internet Standards Track specification; it is published for informational purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6024"/>
          <seriesInfo name="DOI" value="10.17487/RFC6024"/>
        </reference>
        <reference anchor="RFC9019">
          <front>
            <title>A Firmware Update Architecture for Internet of Things</title>
            <author fullname="B. Moran" initials="B." surname="Moran"/>
            <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
            <author fullname="D. Brown" initials="D." surname="Brown"/>
            <author fullname="M. Meriac" initials="M." surname="Meriac"/>
            <date month="April" year="2021"/>
            <abstract>
              <t>Vulnerabilities in Internet of Things (IoT) devices have raised the need for a reliable and secure firmware update mechanism suitable for devices with resource constraints. Incorporating such an update mechanism is a fundamental requirement for fixing vulnerabilities, but it also enables other important capabilities such as updating configuration settings and adding new functionality.</t>
              <t>In addition to the definition of terminology and an architecture, this document provides the motivation for the standardization of a manifest format as a transport-agnostic means for describing and protecting firmware updates.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9019"/>
          <seriesInfo name="DOI" value="10.17487/RFC9019"/>
        </reference>
        <reference anchor="RFC4211" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4211.xml">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate Request Message Format (CRMF)</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="September" year="2005"/>
            <abstract>
              <t>This document describes the Certificate Request Message Format (CRMF) syntax and semantics. This syntax is used to convey a request for a certificate to a Certification Authority (CA), possibly via a Registration Authority (RA), for the purposes of X.509 certificate production. The request will typically include a public key and the associated registration information. This document does not define a certificate request protocol. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4211"/>
          <seriesInfo name="DOI" value="10.17487/RFC4211"/>
        </reference>
        <reference anchor="I-D.ietf-lamps-csr-attestation">
          <front>
            <title>Use of Remote Attestation with Certification Signing Requests</title>
            <author fullname="Mike Ounsworth" initials="M." surname="Ounsworth">
              <organization>Entrust Limited</organization>
            </author>
            <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
              <organization>Siemens</organization>
            </author>
            <author fullname="Henk Birkholz" initials="H." surname="Birkholz">
              <organization>Fraunhofer SIT</organization>
            </author>
            <author fullname="Monty Wiseman" initials="M." surname="Wiseman">
              <organization>Beyond Identity</organization>
            </author>
            <author fullname="Ned Smith" initials="N." surname="Smith">
              <organization>Intel Corporation</organization>
            </author>
            <date day="1" month="February" year="2025"/>
            <abstract>
              <t>   A PKI end entity requesting a certificate from a Certification
   Authority (CA) may wish to offer trustworthy claims about the
   platform generating the certification request and the environment
   associated with the corresponding private key, such as whether the
   private key resides on a hardware security module.

   This specification defines an attribute and an extension that allow
   for conveyance of Evidence and Attestation Results in Certificate
   Signing Requests (CSRs), such as PKCS#10 or Certificate Request
   Message Format (CRMF) payloads.  This provides an elegant and
   automatable mechanism for transporting Evidence to a Certification
   Authority.

   Including Evidence and Attestation Results along with a CSR can help
   to improve the assessment of the security posture for the private
   key, and can help the Certification Authority to assess whether it
   satisfies the requested certificate profile.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-lamps-csr-attestation-16"/>
        </reference>
        <reference anchor="I-D.fossati-tls-attestation">
          <front>
            <title>Using Attestation in Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
            <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
         </author>
            <author fullname="Yaron Sheffer" initials="Y." surname="Sheffer">
              <organization>Intuit</organization>
            </author>
            <author fullname="Paul Howard" initials="P." surname="Howard">
              <organization>Arm Limited</organization>
            </author>
            <author fullname="Ionuț Mihalcea" initials="I." surname="Mihalcea">
              <organization>Arm Limited</organization>
            </author>
            <author fullname="Yogesh Deshpande" initials="Y." surname="Deshpande">
              <organization>Arm Limited</organization>
            </author>
            <author fullname="Arto Niemi" initials="A." surname="Niemi">
              <organization>Huawei</organization>
            </author>
            <author fullname="Thomas Fossati" initials="T." surname="Fossati">
              <organization>Linaro</organization>
            </author>
            <date day="21" month="October" year="2024"/>
            <abstract>
              <t>   The TLS handshake protocol allows authentication of one or both peers
   using static, long-term credentials.  In some cases, it is also
   desirable to ensure that the peer runtime environment is in a secure
   state.  Such an assurance can be achieved using attestation which is
   a process by which an entity produces evidence about itself that
   another party can use to appraise whether that entity is found in a
   secure state.  This document describes a series of protocol
   extensions to the TLS 1.3 handshake that enables the binding of the
   TLS authentication key to a remote attestation session.  This enables
   an entity capable of producing attestation evidence, such as a
   confidential workload running in a Trusted Execution Environment
   (TEE), or an IoT device that is trying to authenticate itself to a
   network access point, to present a more comprehensive set of security
   metrics to its peer.  These extensions have been designed to allow
   the peers to use any attestation technology, in any remote
   attestation topology, and mutually.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-fossati-tls-attestation-08"/>
        </reference>
        <reference anchor="I-D.ietf-rats-msg-wrap">
          <front>
            <title>RATS Conceptual Messages Wrapper (CMW)</title>
            <author fullname="Henk Birkholz" initials="H." surname="Birkholz">
              <organization>Fraunhofer SIT</organization>
            </author>
            <author fullname="Ned Smith" initials="N." surname="Smith">
              <organization>Intel</organization>
            </author>
            <author fullname="Thomas Fossati" initials="T." surname="Fossati">
              <organization>Linaro</organization>
            </author>
            <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
              <organization>University of Applied Sciences Bonn-Rhein-Sieg</organization>
            </author>
            <author fullname="Dionna Glaze" initials="D." surname="Glaze">
              <organization>Google LLC</organization>
            </author>
            <date day="15" month="November" year="2024"/>
            <abstract>
              <t>   This document defines the RATS conceptual message wrapper (CMW)
   format, a type of encapsulation format that can be used for any RATS
   messages, such as Evidence, Attestation Results, Endorsements, and
   Reference Values.  Additionally, the document describes a collection
   type that enables the aggregation of one or more CMWs into a single
   message.

   This document also defines corresponding CBOR tag, JSON Web Tokens
   (JWT) and CBOR Web Tokens (CWT) claims, as well as an X.509
   extension.  These allow embedding the wrapped conceptual messages
   into CBOR-based protocols, web APIs, and PKIX protocols.  In
   addition, a Media Type and a CoAP Content-Format are defined for
   transporting CMWs in HTTP, MIME, CoAP and other Internet protocols.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-rats-msg-wrap-11"/>
        </reference>
      </references>
    </references>
    <?line 920?>

<section anchor="samples">
      <name>Samples</name>
      <t>A reference implementation of this specification can be found at https://github.com/hannestschofenig/keyattestation</t>
      <t>It produces the following sample attestation:</t>
      <artwork><![CDATA[
PkixAttestation:
 tbs=TbsPkixAttestation:
  version=2
  reportedEntities=SequenceOf:
   ReportedEntity:
    entityType=1.2.3.999.0.0
    reportedAttributes=SequenceOf:
     ReportedAttribute:
      attributeType=1.2.3.999.1.0.0
      value=AttributeValue:
       bytes=0102030405


   ReportedEntity:
    entityType=1.2.3.999.0.1
    reportedAttributes=SequenceOf:
     ReportedAttribute:
      attributeType=1.2.3.999.1.1.0
      value=AttributeValue:
       utf8String=HSM-123

     ReportedAttribute:
      attributeType=1.2.3.999.1.1.1
      value=AttributeValue:
       bool=True

     ReportedAttribute:
      attributeType=1.2.3.999.1.1.2
      value=AttributeValue:
       utf8String=Model ABC

     ReportedAttribute:
      attributeType=1.2.3.999.1.1.4
      value=AttributeValue:
       utf8String=3.1.9

     ReportedAttribute:
      attributeType=1.2.3.999.1.1.3
      value=AttributeValue:
       time=202502032234Z


   ReportedEntity:
    entityType=1.2.3.999.0.2
    reportedAttributes=SequenceOf:
     ReportedAttribute:
      attributeType=1.2.3.999.1.2.0
      value=AttributeValue:
       utf8String=26d765d8-1afd-4dfb-a290-cf867ddecfa1

     ReportedAttribute:
      attributeType=1.2.3.999.1.2.3
      value=AttributeValue:
       bool=False

     ReportedAttribute:
      attributeType=1.2.3.999.1.2.1
      value=AttributeValue:
       bytes=0x3059301306072a8648ce3d020106082a8648ce3d03010703420004422548f88fb782ffb5eca3744452c72a1e558fbd6f73be5e48e93232cc45c5b16c4cd10c4cb8d5b8a17139e94882c8992572993425f41419ab7e90a42a494272


   ReportedEntity:
    entityType=1.2.3.999.0.2
    reportedAttributes=SequenceOf:
     ReportedAttribute:
      attributeType=1.2.3.999.1.2.0
      value=AttributeValue:
       utf8String=49a96ace-e39a-4fd2-bec1-13165a99621c

     ReportedAttribute:
      attributeType=1.2.3.999.1.2.3
      value=AttributeValue:
       bool=True

     ReportedAttribute:
      attributeType=1.2.3.999.1.2.1
      value=AttributeValue:
       bytes=0x3059301306072a8648ce3d020106082a8648ce3d03010703420004422548f88fb782ffb5eca3744452c72a1e558fbd6f73be5e48e93232cc45c5b16c4cd10c4cb8d5b8a17139e94882c8992572993425f41419ab7e90a42a494272


   ReportedEntity:
    entityType=1.2.3.888.0
    reportedAttributes=SequenceOf:
     ReportedAttribute:
      attributeType=1.2.3.888.1
      value=AttributeValue:
       utf8String=partition 1




 signatures=SequenceOf:
  SignatureBlock:
   certChain=SequenceOf:
    Certificate:
     tbsCertificate=TBSCertificate:
      version=v3
      serialNumber=510501933685942792810365453374472870755160518925
      signature=AlgorithmIdentifier:
       algorithm=1.2.840.113549.1.1.11
       parameters=0x0500

      issuer=Name:
       rdnSequence=RDNSequence:
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.10
          value=0x0c0449455446
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.11
          value=0x0c0452415453
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.3
          value=0x0c06414b20525341


      validity=Validity:
       notBefore=Time:
        utcTime=250117171303Z

       notAfter=Time:
        generalTime=20520604171303Z


      subject=Name:
       rdnSequence=RDNSequence:
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.10
          value=0x0c0449455446
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.11
          value=0x0c0452415453
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.3
          value=0x0c06414b20525341


      subjectPublicKeyInfo=SubjectPublicKeyInfo:
       algorithm=AlgorithmIdentifier:
        algorithm=1.2.840.113549.1.1.1
        parameters=0x0500

       subjectPublicKey=31795268810366627125468059984427145931784542919710733587190808152893606542214208096328883077225607136393362795609997601968312039001251339428349101203532726047646450301142882318337709398316574407647199690000689245113739552615279534528145776090813314822312012607567736073057936820713733090928849092672110937300300755561797808000438134839458043673852453722969649609202093945235393494912138691342219564365300965387743701570507112064401758218314760153081271981340812350365663466513620853326534252424706992841033652817461354632316129312597825542820569667842318342646457447037125609399476844336456206583416539426479221164971369788464727307915820767918489601

      extensions=Extensions:
       Extension:
        extnID=2.5.29.14
        critical=False
        extnValue=0x04148919595e0ef169f5cbbd47e134fce298cc693091
       Extension:
        extnID=2.5.29.35
        critical=False
        extnValue=0x301680148919595e0ef169f5cbbd47e134fce298cc693091
       Extension:
        extnID=2.5.29.19
        critical=True
        extnValue=0x30030101ff


     signatureAlgorithm=AlgorithmIdentifier:
      algorithm=1.2.840.113549.1.1.11
      parameters=0x0500

     signature=12977775424631768289542539102653382982431795551146145281750189553757940982572813264428982985997740595878077027853994515775116752030963858469651548765808775269857271167748512795017916284867051302884465315751010913658016640170608413935780119349866986170148033301955753116984041271273907756544780231564646860424999020990745523383622980115200446260103173103500647838758197610238552349053064525420240826193553395378873725256584269666918504793674497748455574822238022085054752185687440807655337724821853332688158460379554906105417720665175648371832825939577039874730442790337726004105878168375998123110331993348833629325492

   signatureAlgorithm=AlgorithmIdentifier:
    algorithm=1.2.840.113549.1.1.10
    parameters=RSASSA_PSS_params:
     hashAlgorithm=AlgorithmIdentifier:
      algorithm=2.16.840.1.101.3.4.2.1

     maskGenAlgorithm=AlgorithmIdentifier:
      algorithm=1.2.840.113549.1.1.8

     saltLength=20
     trailerField=1


   signatureValue=0x9b6ac1932f1cd85befbde054e084577ebc9181bcf05179658a700e22556fc3f1931f59dc9734efe08df204fcfe55c64c6a97e8d520e58c1f64080b6cce1c08e88db510c06d6914a818b70df82326b37a2abe54fab0567d748e1e82e2de954cac63c5ab3bc92fff9cb8aa64fbcb83dd8bacbce96392f91dd40ee05058adceb11f5cf0c379241fd470918abceea70fd01c0cbc64d96067fe549ec443738655bc2bcf7e5bd54c15d5e5ac2f4ad180d973a7e6025126ccd2b45d78e9944662237959ef73f47e9ae0fa9b0c55177bb6f867a90b41d0efb72c192f15a66531d030bc85fed3d135aea4045e024ef2e807517504d313dbea4b0f709d0553b60793b2dcaa
  SignatureBlock:
   certChain=SequenceOf:
    Certificate:
     tbsCertificate=TBSCertificate:
      version=v3
      serialNumber=43752118382009037811618748949928339462896457144
      signature=AlgorithmIdentifier:
       algorithm=1.2.840.10045.4.3.2

      issuer=Name:
       rdnSequence=RDNSequence:
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.10
          value=0x0c0449455446
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.11
          value=0x0c0452415453
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.3
          value=0x0c07414b2050323536


      validity=Validity:
       notBefore=Time:
        utcTime=250117171428Z

       notAfter=Time:
        generalTime=20520604171428Z


      subject=Name:
       rdnSequence=RDNSequence:
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.10
          value=0x0c0449455446
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.11
          value=0x0c0452415453
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.3
          value=0x0c07414b2050323536


      subjectPublicKeyInfo=SubjectPublicKeyInfo:
       algorithm=AlgorithmIdentifier:
        algorithm=1.2.840.10045.2.1
        parameters=0x06082a8648ce3d030107

       subjectPublicKey=57095560233504924588952816185508037812996307929249104847846164660564888397123390877585670462836285725041261897550020311481127562655774333675293173915140722

      extensions=Extensions:
       Extension:
        extnID=2.5.29.14
        critical=False
        extnValue=0x04145b70a79817f79ff637d2f7e3dc446c2109d7bbd4
       Extension:
        extnID=2.5.29.35
        critical=False
        extnValue=0x301680145b70a79817f79ff637d2f7e3dc446c2109d7bbd4
       Extension:
        extnID=2.5.29.19
        critical=True
        extnValue=0x30030101ff


     signatureAlgorithm=AlgorithmIdentifier:
      algorithm=1.2.840.10045.4.3.2

     signature=182167519797146035745575043154801415115532979136731128676399180692664821804883990401552040789643013103202424486088058364982966709324496782518079519267269438816178719668437

   signatureAlgorithm=AlgorithmIdentifier:
    algorithm=1.2.840.10045.2.1
    parameters=0x06082a8648ce3d030107

   signatureValue=0x304402201e7703f63bff951917714e5fa813de5265f151a6802165ef0be5f1fe6c91225b02200ad06b41a5062b07ff3ad37c7d112e19575f0e14a9750fe95e615550b88b5fed



DER Base64:
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
]]></artwork>
    </section>
    <section anchor="acknowledgements">
      <name>Acknowledgements</name>
      <t>This specification is the work of a design team created by the chairs
of the RATS working group. This specification has been developed
based on discussions in that design team and also with great amounts of
input taken from discussions on the RATS mailing list.</t>
    </section>
  </back>
  <!-- ##markdown-source:
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
0kSJo1Gp9FYwXqIeiX4rzG3m9GhW9aYeBlc6wWIBp9CBYTBvJxWXwWBP3mzx
uxhX6xh2IsqkEvDGZP3HKwahtZ6rqMmadF/y5bErLytCv5OP8LwyJYQuCgfl
mET5Leyd+TbHUWkDXRroXRN2T/w0LOyB0guRUqkWwwdKiP2nbIFt3HGEdVbo
vAJoGcIuw4KlhIFBLIGob8tz8KC6+oYaWCiD7EYihSIhUPOU/vL1JIxUmD4W
yDJnwgBJyV4WmWuT6ZndVZTMHjJi4SJnjEUNWHEamXaotiBWpHxkaBhh+hOH
bH02F7R9GOSFYexEyGrMZJ+5tcf2ioE2EqwMYE8YBohhS0JOCCjW6VX2o/Ry
++xcx7x5ODGDeaK0q2jjuqwU8eGP/LT5qtP/+Nr8e3Ya/j/gmP7zP//TsqIH
WdCRz33Lv7x4+tfns3m1f7+qp7/ln/70Rey0innXs0/Tv/8tPyR3ks9+Wvug
+4d+/erTJ+goTnz9/NM/JVby01eeTm3jm55O/pnxdELGP/f0V84+n3z614RR
tfPv1/TT0qzL/Jd6+qeXV/LT7i7/dwZUnofJr9/4NK/jjfrPM8tJeO3E2Ggc
0igyc0N8r9uLOxB44K92DyK/s8SMZwxth8mhk1GCzGe0l2NXCPzb2fe//cq7
ko6G1Mupmb/hG35598h/2nk04xnkX5iD8JeJNyXjgMu53iUyKzEv4Zdf5BNg
pjnu0rPRcynd4JRJNplz0Ib1ZzQmyEReBQAyOEMs1ZKeB0OKQzzKdSQ1OKmb
v5Cf7UVKOwEZ8Gov5ZaO9l6zKrqnTmFP+Bn3zUky/IRF4CCzc2RKwU9iPlgy
hUxVNYOwOMhf53gRyJ8teYISiTe+ytkjxWrtePDx553EHulW04YUbuzkkJxL
NRwIo8byI1GS/2KWz89J552xO4u5M8sq4cwzpcfs7y8Upv3jZwNWJYOremhZ
JGirVGmcbS9JPXsyw4oU+ji5kzNxyFeovCtxPh/MJ/X6yAXNWFQEJNxZRpz7
KXxsYBzQPmXi/r2HnoVJZhAkLnjQXEFjZU6A5iomdg3lPQwe0MYlL1LSVE3n
6WZNKGQKAclQqTdx3i6Zj+NA+L6UXpyVQZzO8jZUuJ5zOOQJ541eMlLtLryV
Sl7M9giLiDtChPQ5mVeEPkIs60rlAaLiFq599t35MV2wTYJnboqyBQwVYp5U
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
9eKDXa+6w/P7bT96PHocH0Wjs25/dHp3vT45ejx3571p5N1++HRye9b5VDhq
L8LJsnN/cj/v2HeddhSfQwf27/c7DW29rf6Hw8vqzei+dPPxbH768erp/GN3
dXZ8e9/3it7tx/4jnNFTf3RThGeqZ3e9x5vEefUO6byOb7Qxu92PT+3bPpx6
e/vleNivNOG7405HfN5037cKvVa725sPL7yLVeX0YOVu75zuYPi4DdzrmzfN
cfn8zaf7u2X/7rQ/sD8+jrtPg8PutlIcezN75C+HvdPeYni9XYwu58325e2X
cu1y2Vl+uPR7m/ebmyPY77ELh3l017pqT69grbeV1uXm1D4+2jrH84L1sbnu
HXYBry0XcL3r3gGuF67g77M2/N05sQDDp3B2s8GtVT89LXZvv6xuLmqjL6PZ
4qnt3R6uHg9HrbP29P7L7N47bm4KcO7REbz10L8sbDqbm8Pry8uTw9bgw+B6
cKx9dwrfDS+vB6P+ZWNzeEnfHR62btvDbXt4Vehuem37rH93temPuuX+yH4E
+nj6OJte9O9aRfj/Uv/w8vHsCc7k8MyCs8R1nLanZ9ftVtBvd+dH190b7buo
3z760L4+6j8ePuF68bt+v31/dNo7+jC6HMG+hz1cxwfEx9mDfYY02L5sHU6n
3YvWIfx+GXTgc7t1elitteeHy1rt5v5L6B41lo3Li1lh9KbwML26W2zPv3hu
udA6urqrX92ehCen19HVcefxGAiv7368mhUeoy83i+K4Yy/HG79+X2sVyk+n
y8nxwWZx89S8WzQ7ZevjydPgzdK9GT8OLi4G12e3pau241pHw6cv173WeaMd
zOqzo4/RyaNfjh6cefv84cNdBLt+jN57w6PLsm35o5PD+tPo+sPkfHp9dhZW
L29m3WgUfulP/OtlOL926+XSsXtwVetNtsXO+qx0ur2ZfKmM33zYhjO3MqsU
bzafJuOWG0wrlTfN9uPtJ/vp/sI66N4PLx5GN1/qX0aFatu97Nx9Wi+PekPP
uR1P3cJqXbo93Tj1q/tC8+nNxCleD8fVxlNQmp7Zb6bRwfrCvx+X++FJYBVu
2rd25+Lqsd8Bemi1rLNR/6i7eY/4MCict9s33aPe/e3H68p546Nf3NaL7yuj
UaOyvOtbo86g324ct4pXTm9zedNvW60Xn23xs13guweby6M+kG9r0kif+ak4
83breHz22J82vaOrUuGxFFUfiqADLqet8+vzaufTp9OPt6Wo39yc1s/H7UW9
FUSL+lPp+OD45rpwvroqPi07m8IXezJoWoVH/2g0H7TP18vx7e3BsL+6c9Zn
jcUlcKr2l24lfLQv3Fln2XSugg/1yubmenDy/uHqaOA8Ta9mh/2N/2XRHdcX
X3onXzYXhe7Dm9a1czD7clfp3s0+dI6urdPg+n3lvtJ9OiqXr86mFx+8hwBE
aKH9cLYcr3vns6vB7fuPi2arPX/48Hj75uAqmN19Ab3rw+Gg+AGkZTCFoyyd
fzm97QzG3uXFeul0V9PlZvNmWb/uNb/cjY9npzfhxWNvVgIua6/r0YcHp3W6
nryZDta9cHo/u7oYlzq97aJa8LftqButL1rn0cnHp1HvsOYebicHneHw9HJz
sknA+6Tfrk2ZTufT2f20fXvZ77amxzP+Tucr0y6cS2tRCtv324ZdOnp4eHDb
V5Xe4NMk3A6m46fN1af53PNb57359cPm4Hj0vujb86fRQ6VX3rYvnt5c27d9
azkJisPD+V27ed9praKn2aZX65WK3X57ZQ2GwfGpffam019E5eDLw3xUi45u
m06v4k7Xp+78ahvdND6G5437h4PqtvJlMapvKxeOV9s2ah/Ph28G5avDdfvy
40n5PBo07Ub/rPqhfXBlfzg+eTiv+YfNln14+nhf+tj2D+ZD97F79jSbf2yc
NJpvPjav+0fOp3nYaZ4Ubg5v7dpk0Zp3F09nJ4VPn+6W8+6t1yvPb+vli8Jk
GU7fLKP+9cCprx5m/pfLVbtw/qZ82r5/OLJu532ntXnofXpTaHaL4ZfL7qfp
h/PGevr+6tNVt/B4Ma7dRxf2h8LRVf3m/X391P6CfH+2Ab5/XAe+316hznNd
mraAC7emvat2zV+GB9vu8n3TOdhcrBqb2mlQbU3m4+mmM1UyvAvPb/qH3bN+
K0Ja63amm+7w6vpqcKd9t9l0r+6Prq6eupf9VoW+a22A5K+i6RXoKWd3renR
prA9G4EeBXwfeHyhfzezjlsN0GOu4P9vNmeHKBMut+dHwR8w33+XjD65u3pq
Aw8rEF86nF5+bLcHYzBnb44O3EnzbjJsvrmwB8ebWcdx68XD1gTl1vthv3t8
2Po4ffnZC3p2QDyu2x61WD9pBWpvIP9A1oPi073q9C47l5PNcH3R7Eel6aBx
773xLi8vzz5a3cn8YDVoOaV1dPqhfTPszmut3vTD8dPpwfXHL+d37pfDJijL
3tZvb97fNAPn7rTy0Z48lMbnblBfn129pO91B3ftbstruc7monR+8Ob6eOA8
juZvgm6zOrydHA2WQWt26zZOq5P3b8Yfut7HTW/aWbXDS+vq+GQzOThfnTUm
g+76+NqZHM6GS+fyYPlpcXR9deqdAva/kx3lWjbevER1+Hx9lZFVicgp9Xyn
ArYcEIUsK9daiEud1Y0PeNVEGBmicmDQGg3pPUzEn4bBeplZ6ojlU2O6OAf7
XAZLsDfwCgy66ieufhFFTdYqMT8VceMdIHyFNa7GtBbYNwcLbQ3PX2JTAAvv
XqAieX08URBJq1xYHt9C40XYC+H/A82DQHAfHwEA

-->

</rfc>
