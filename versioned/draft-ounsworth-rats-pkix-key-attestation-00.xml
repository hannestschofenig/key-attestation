<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.23 (Ruby 3.0.2) -->
<?rfc rfcedstyle="yes"?>
<?rfc tocindent="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>
<?rfc toc_levels="4"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ounsworth-rats-pkix-key-attestation-00" category="std" consensus="true" submissionType="IETF" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.27.0 -->
  <front>
    <title abbrev="PKIX Key Attestation">PKIX Key Attestation</title>
    <seriesInfo name="Internet-Draft" value="draft-ounsworth-rats-pkix-key-attestation-00"/>
    <author initials="M." surname="Ounsworth" fullname="Mike Ounsworth">
      <organization abbrev="Entrust">Entrust Limited</organization>
      <address>
        <postal>
          <street>2500 Solandt Road - Suite 100</street>
          <city>Ottawa, Ontario</city>
          <code>K2K 3G5</code>
          <country>Canada</country>
        </postal>
        <email>mike.ounsworth@entrust.com</email>
      </address>
    </author>
    <author initials="J.-P." surname="Fiset" fullname="Jean-Pierre Fiset">
      <organization abbrev="Crypto4A">Crypto4A Inc.</organization>
      <address>
        <postal>
          <street>1550A Laperriere Ave</street>
          <city>Ottawa, Ontario</city>
          <code>K1Z 7T2</code>
          <country>Canada</country>
        </postal>
        <email>jp@crypto4a.com</email>
      </address>
    </author>
    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization abbrev="H-BRS">University of Applied Sciences Bonn-Rhein-Sieg</organization>
      <address>
        <postal>
          <country>Germany</country>
        </postal>
        <email>Hannes.Tschofenig@gmx.net</email>
      </address>
    </author>
    <author initials="H." surname="Birkholz" fullname="Henk Birkholz">
      <organization>Fraunhofer SIT</organization>
      <address>
        <email>henk.birkholz@ietf.contact</email>
      </address>
    </author>
    <author initials="M." surname="Wiseman" fullname="Monty Wiseman">
      <organization>Beyond Identity</organization>
      <address>
        <postal>
          <country>USA</country>
        </postal>
        <email>monty.wiseman@beyondidentity.com</email>
      </address>
    </author>
    <author initials="N." surname="Smith" fullname="Ned Smith">
      <organization>Intel Corporation</organization>
      <address>
        <postal>
          <country>USA</country>
        </postal>
        <email>ned.smith@intel.com</email>
      </address>
    </author>
    <date year="2025" month="March" day="04"/>
    <area>Security</area>
    <workgroup>Remote ATtestation procedureS</workgroup>
    <keyword>Internet-Draft</keyword>
    <abstract>
      <?line 116?>

<t>This document specifies a vendor-agnostic format for attesting to the protection properties of a symmetric or asymmetric cryptographic key within a hardware cryptographic module to support applications such as providing evidence to a Certification Authority that a key is being protected in accordance with the requested certificate profile, or that HSMs can perform key import and maintain the private key protection properties in a robust way even when migrating keys across HSM vendors. This specification includes a format for requesting a key attestation containing certain attributes. This specification is called "PKIX Attestation" because it is designed to be easy to implement on top of a code base that already supports X.509 and PKCS#11 data models.</t>
    </abstract>
    <note removeInRFC="true">
      <name>Discussion Venues</name>
      <t>Discussion of this document takes place on the
    Remote ATtestation ProcedureS Working Group mailing list (rats@ietf.org),
    which is archived at <eref target="https://mailarchive.ietf.org/arch/browse/rats/"/>.</t>
      <t>Source for this draft and an issue tracker can be found at
    <eref target="https://github.com/hannestschofenig/key-attestation"/>.</t>
    </note>
  </front>
  <middle>
    <?line 120?>

<section anchor="introduction">
      <name>Introduction</name>
      <t>This specification is targeted at attesting to the storage of cryptographic key
material -- symmetric keys or asymmetric private keys -- within a hardware cryptographic
module such as a Hardware Security Module (HSM) or Trusted Platform Module (TPM).
HSMs and TPMs are devices whose primary purpose is to hold cryptographic keys and support interfaces whereby they can be used to perform encrypt, decrypt, sign, MAC and other keyed cryptographic operations on provided data without the key material ever leaving the hardware module.
Typically an HSM or TPM holds an uses cryptographic keys on behalf of an application such as a Certification Authority, a code signing service, a TLS server.
However, also included in the scope of this draft are single-purpose cryptographic devices such as smartcards which may hold only a single application key for a single purpose such as authenticating to a near-field "tap" terminal.
Within this specification we will generically refer to the attesting device as an "HSM", and to the cryptographic keys that it holds an operates on behalf of some other application as "application keys".</t>
      <t>The goal of this specification is to provide a standardized format in which an HSM can attest that one or more application keys are contained within a hardware module, and attest to any additional attributes relating to the protection of this key material.</t>
      <t>This requires providing evidence to the key protection properties of that key, referred to in
this specification as "key attributes", as well as to the operational state of the hardware platform,
referred to as "platform attributes". This specification also provides a format for requesting that a cryptographic module produce a key attestation about a specific application key, the application keys in a specific sub-environment of the HSM, or that the returned attestation contain a specific set of attributes.
See <xref target="sec-data-model"/> for the full information model.</t>
      <t>As described below in <xref target="sec-arch"/> "Architecture and Conceptual Model", this specification
uses a simplification of the Remote ATtestation procedureS (RATS) Architecture <xref target="RFC9334"/>
by assuming that the attesting environment and the target environment
are the same environment, and that this environment only produces evidence as this aligns with the
target hardware platforms. As such, the attestation data format specified in <xref target="sec-data-model"/> only contains
evidence (referred to in this document as "attributes") and does not provide for any form of endorsement except for
endorsement of the device's attestation signing key which is endorsed via an X.509 certificate chain rooted
in a trust anchor belonging either to the device manufacturer or to the device operator, as described in <xref target="sec-ak-chain"/>.</t>
      <t>Unlike other attestation data formats defined by the RATS working group, the format defined in this
document is targeting devices designed to operate within Public Key Infrastructure (PKI) ecosystems;
this motivates the following design choices:</t>
      <ul spacing="normal">
        <li>
          <t>Attestation data structure defined in ASN.1 <xref target="X.680"/> and encoded in Distinguished Encoding Rules (DER) <xref target="X.690"/>.</t>
        </li>
        <li>
          <t>Endorsement of attesting key uses an X.509 certificate chain <xref target="RFC5280"/>.</t>
        </li>
        <li>
          <t>Key attributes are mostly just a mapping of the private key properties from PKCS#11 <xref target="PKCS11"/>.</t>
        </li>
      </ul>
      <t>For these reasons, this attestation format is called "PKIX Key Attestation" and may be used,
for example within a Certificate Signing Request (CSR) object; <xref target="I-D.ietf-lamps-csr-attestation"/> specifies how to carry evidence within PKCS#10 <xref target="RFC2986"/> or Certificate Request Message Format (CRMF) <xref target="RFC4211"/>.</t>
      <t>This document provides a vendor-agnostic format for attesting to the logical and physical protection properties of a cryptographic key and it envisions uses such as providing evidence to a Certification Authority that a key is being protected in accordance with the requested certificate profile, or that HSMs can perform key import and maintain the private key protection properties in a robust way even when migrating keys across HSMs from different vendors.</t>
    </section>
    <section anchor="terminology">
      <name>Terminology</name>
      <t>The reader is assumed to be familiar with the vocabulary and concepts
defined in <xref target="RFC9334"/>.</t>
      <t>The following terms are used in this document:</t>
      <dl newline="true">
        <dt>Root of Trust (RoT):</dt>
        <dd>
          <t>A set of software and/or hardware components that need to be trusted
to act as a security foundation required for accomplishing the security
goals of a system. In our case, the RoT is expected to offer the
functionality for attesting to the state of the platform, and to attest
the properties of the application key. More precisely, it has to attest
the integrity of the application key (public as well as private key) and the
confidentiality of the private part of the application key. This document makes a simplifying
assumption that the RoT, the attesting environment holding the
attestation key, and the target environment being measured and attested
are all the same environment.</t>
        </dd>
        <dt>Attestation Key (AK):</dt>
        <dd>
          <t>Cryptographic key belonging to the RoT that is only used to sign
attestation tokens.</t>
        </dd>
        <dt>Hardware Security Module (HSM):</dt>
        <dd>
          <t>a physical computing device that safeguards and manages secrets (most importantly cryptographic keys),
and performs encryption, decryption, signing, MACing and other cryptographic operations with the managed
cryptographic keys. HSMs can sometimes host user applications within a secure enclave environment within
the HSM that are often used to extend the cryptographic functionality of the HSM.
This specification takes a broad definition of what counts as an HSM to include smartcards,
USB tokens, and similar devices which this specification refers to as "personal cryptographic tokens",
as well as TPMs, in addition to the usual PCI card, rack-mount, and blade server form-factor
of HSM which this specification refers to as "enterprise-grade" or "cloud-service grade" HSMs.</t>
        </dd>
        <dt>Key Attestation:</dt>
        <dd>
          <t>Evidence containing properties of the environment(s) in which the private
keys are generated and stored. For example, a Relying Party may want to know whether
a private key is stored in a hardware security module and cannot be
exported in cleartext.</t>
        </dd>
        <dt>Usage Protocol:</dt>
        <dd>
          <t>A (security) protocol that requires demonstrating possession of the
private component of the application key.</t>
        </dd>
        <dt>Attestation Token (AT):</dt>
        <dd>
          <t>A collection of claims that a RoT assembles (and signs) with the
purpose of informing - in a verifiable way - relying parties about the
identity and state of the platform. Essentially a type of Evidence as
per the RATS architecture terminology <xref target="RFC9334"/>.</t>
        </dd>
        <dt>Platform Attestation Entity:</dt>
        <dd>
          <t>An Entity containing attributes relating to the security state of the
platform,. The process of generating a platform entity typically involves gathering
data during measured boot.</t>
        </dd>
        <dt>Key Attestation Entity:</dt>
        <dd>
          <t>An Entity containing attributes relating to a specific application key
protected by the HSM. The key attestation service is part
of the root of trust (RoT).</t>
        </dd>
        <dt>Application Key:</dt>
        <dd>
          <t>The application key consists of a private and a public key.  The private key is
used by the usage protocol.  The public key is included in the Key
Attestation Token. The Key Attestation Entity makes claims about the
protection of this key.</t>
        </dd>
        <dt>Trust Anchor:</dt>
        <dd>
          <t>As defined in <xref target="RFC6024"/> and <xref target="RFC9019"/>, a Trust Anchor
"represents an authoritative entity via a public key and
associated data.  The public key is used to verify digital
signatures, and the associated data is used to constrain the types
of information for which the trust anchor is authoritative." The
Trust Anchor may be a certificate, a raw public key, or other
structure, as appropriate.  It can be a non-root certificate when
it is a certificate.</t>
        </dd>
        <dt>Presenter:</dt>
        <dd>
          <t>Party that proves possession of a private key to a recipient of a key
attestation token. Typically this will be an application layer entity,
such as a cryptographiclibrary constructing a Certificate Signing Request
that must embed attestation evidence, or a TLS library attempting to
perform attested TLS. The Presenter is not fulfilling any roles in the
RATS architecture.</t>
        </dd>
        <dt>Recipient:</dt>
        <dd>
          <t>Party that receives the attestation evidence containing the proof-of-possession key
information from the presenter. The Recipient is likely fulfilling
the roles of Verifier and Relying Party in the RATS architecture,
but the exact details of this arrangement is out-of-scope for this
specification.</t>
        </dd>
        <dt>Key Attestation Service (KAS):</dt>
        <dd>
          <t>The module within the HSM that is responsible for parsing the
PKIX Attestation Request, measuring the
Platform and the Key attributes, constructing the PKIX Attestation
object, and signing it with the AK. The KAS fulfills the role of
Attester in the RATS architecture.
Note that real HSMs may or may not implement the Attester as a
single internal module, but this abstraction is used for the
design and security analysis of this specification.</t>
        </dd>
      </dl>
      <t>The key words "<bcp14>MUST</bcp14>", "<bcp14>MUST NOT</bcp14>", "<bcp14>REQUIRED</bcp14>", "<bcp14>SHALL</bcp14>", "<bcp14>SHALL
NOT</bcp14>", "<bcp14>SHOULD</bcp14>", "<bcp14>SHOULD NOT</bcp14>", "<bcp14>RECOMMENDED</bcp14>", "<bcp14>NOT RECOMMENDED</bcp14>",
"<bcp14>MAY</bcp14>", and "<bcp14>OPTIONAL</bcp14>" in this document are to be interpreted as
described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they
appear in all capitals, as shown here.</t>
      <?line -18?>

</section>
    <section anchor="sec-arch">
      <name>Architecture and Conceptual Model</name>
      <t>Key attestation is an extension to the attestation functionality
described in <xref target="RFC9334"/>. In the general RATS Architecture, an attesting device
consists of a hardware Root of Trust (RoT) which provides the basis for trust in the device,
and then one or more layers of attestations where an attesting environment collects
and signs measurements (evidence) about a target environment. Trust is
established by chaining the cryptographic signatures on each layer of
evidence up to the next layer of attester until the RoT is reached, and trust
is established in the RoT via 3rd party endorsements.
The target devices for this specification tend to operate on a different
architecture and trust model: the devices consist of one single logical environment
(combining the RATS roles of RoT, attesting environment, and target environment together into
a single entity), and trust is established via product validations conducted by third-party
testing labs against standardized security and functional requirements such
as FIPS 140-3 or a given Common Criteria protection profile. A FIPS or CC
certification provided by a testing lab would conceptually count as an
endorsement of the hardware platform in the RATS architecture, but they
are often not digitally-signed
artifacts, and are often conveyed out of band, sometimes via a website or even
via a paper certificate and so they are out of scope for the wire format
specified in this document.</t>
      <t>As such, the attestation data format defined in this document does not
capture the full functionality of the RATS architecture. If a device producing
evidence in the specified format requires to also carry nested attestation
statements or endorsements, then it must
be achieved by placing the attestation from this draft within another wrapper
layer such as RATS Conceptual Message Wrapper (CMW) <xref target="I-D.ietf-rats-msg-wrap"/>.</t>
      <figure anchor="fig-arch">
        <name>Architecture</name>
        <artset>
          <artwork type="svg"><svg xmlns="http://www.w3.org/2000/svg" version="1.1" height="448" width="488" viewBox="0 0 488 448" class="diagram" text-anchor="middle" font-family="monospace" font-size="13px">
              <path d="M 48,368 L 48,432" fill="none" stroke="black"/>
              <path d="M 56,32 L 56,304" fill="none" stroke="black"/>
              <path d="M 72,208 L 72,256" fill="none" stroke="black"/>
              <path d="M 104,264 L 104,360" fill="none" stroke="black"/>
              <path d="M 128,96 L 128,200" fill="none" stroke="black"/>
              <path d="M 144,264 L 144,360" fill="none" stroke="black"/>
              <path d="M 192,368 L 192,432" fill="none" stroke="black"/>
              <path d="M 200,96 L 200,144" fill="none" stroke="black"/>
              <path d="M 248,152 L 248,200" fill="none" stroke="black"/>
              <path d="M 312,96 L 312,144" fill="none" stroke="black"/>
              <path d="M 320,208 L 320,256" fill="none" stroke="black"/>
              <path d="M 336,368 L 336,432" fill="none" stroke="black"/>
              <path d="M 360,32 L 360,304" fill="none" stroke="black"/>
              <path d="M 480,368 L 480,432" fill="none" stroke="black"/>
              <path d="M 56,32 L 360,32" fill="none" stroke="black"/>
              <path d="M 200,96 L 312,96" fill="none" stroke="black"/>
              <path d="M 200,144 L 312,144" fill="none" stroke="black"/>
              <path d="M 72,208 L 320,208" fill="none" stroke="black"/>
              <path d="M 72,256 L 320,256" fill="none" stroke="black"/>
              <path d="M 56,304 L 360,304" fill="none" stroke="black"/>
              <path d="M 48,368 L 192,368" fill="none" stroke="black"/>
              <path d="M 336,368 L 480,368" fill="none" stroke="black"/>
              <path d="M 192,400 L 328,400" fill="none" stroke="black"/>
              <path d="M 48,432 L 192,432" fill="none" stroke="black"/>
              <path d="M 336,432 L 480,432" fill="none" stroke="black"/>
              <polygon class="arrowhead" points="336,400 324,394.4 324,405.6 " fill="black" transform="rotate(0,328,400)"/>
              <polygon class="arrowhead" points="256,152 244,146.4 244,157.6 " fill="black" transform="rotate(270,248,152)"/>
              <polygon class="arrowhead" points="152,360 140,354.4 140,365.6 " fill="black" transform="rotate(90,144,360)"/>
              <polygon class="arrowhead" points="136,96 124,90.4 124,101.6 " fill="black" transform="rotate(270,128,96)"/>
              <polygon class="arrowhead" points="112,264 100,258.4 100,269.6 " fill="black" transform="rotate(270,104,264)"/>
              <g class="text">
                <text x="100" y="52">Hardware</text>
                <text x="172" y="52">Security</text>
                <text x="236" y="52">Module</text>
                <text x="116" y="84">Platform</text>
                <text x="200" y="84">environment</text>
                <text x="256" y="116">Application</text>
                <text x="228" y="132">Keys</text>
                <text x="188" y="196">measurements</text>
                <text x="128" y="228">Attestation</text>
                <text x="112" y="244">Service</text>
                <text x="48" y="324">Attestation</text>
                <text x="172" y="324">PKIX</text>
                <text x="64" y="340">Request</text>
                <text x="200" y="340">Attestation</text>
                <text x="224" y="388">Usage</text>
                <text x="284" y="388">Protocol</text>
                <text x="120" y="404">Presenter</text>
                <text x="408" y="404">Recipient</text>
              </g>
            </svg>
          </artwork>
          <artwork type="ascii-art"><![CDATA[
      .-------------------------------------.
      | Hardware Security Module            |
      |                                     |
      |   Platform environment              |
      |        ^        .-------------.     |
      |        |        | Application |     |
      |        |        | Keys        |     |
      |        |        '-------------'     |
      |        |              ^             |
      |        |              |             |
      |        | measurements |             |
      | .------------------------------.    |
      | | Attestation                  |    |
      | | Service                      |    |
      | '------------------------------'    |
      |     ^    |                          |
      |     |    |                          |
      '-----+----+--------------------------'
Attestation |    | PKIX
    Request |    | Attestation
            |    v
     .-----------------.                 .-----------------.
     |                 | Usage Protocol  |                 |
     |    Presenter    +---------------->|    Recipient    |
     |                 |                 |                 |
     '-----------------'                 '-----------------'
]]></artwork>
        </artset>
      </figure>
      <t><xref target="fig-arch"/> depicts a typical workflow where an external tool queries the HSM
for the status of one or more cryptographic keys that it is protecting ("Application Keys").
The "Presenter" may be, for example, a command-line or graphical user interface which will display
the evidence to an operator or auditor; a cryptographic library which will include
the evidence in a CSR for transmission to a Certification Authority; a TLS library
which will include the evidence in at attested TLS session <xref target="I-D.fossati-tls-attestation"/>;
or similar applications, refered to as the "Usage Protocol".</t>
      <t>This model does not assume any internal structure or logical separation within the HSM
except for the existence of some kind of attestation service which may or may not be logically separate
from the overall HSM Root of Trust, and that this attestation service measures the
required evidence about both the hardware environment and the application keys
that are being attested.
In addition to emitting key attestation evidence, an HSM may also need to parse it,
for example when running in an operational mode that only allows importing keys
from other HSMs at a comparable security level (requires checking for specific claims) or within the same operational network (requires checking the trust anchor of the attestation key certificate chain).
This implies that the attestation service needs to be
part of the core HSM "kernel" and therefore would be subject to validations such as
FIPS 140-3 or Common Criteria, which motivates a design requirement to keep the evidence
data format as simple as possible and as close as possible to existing functionality
and data models of existing HSM and TPM products.
As such, the information model presented in <xref target="sec-data-model"/>
will feel familiar to implementers with experience with PKI and PKCS#11.</t>
      <section anchor="sec-ak-chain">
        <name>Attestation Key Certificate Chain</name>
        <t>The data format in this specification represents attestation evidence and
requires third-party endorsement in order to establish trust. Part of this
endorsement is a trust anchor that chains to the HSM's attestation key (AK)
which signs the evidence. In practice the trust anchor will usually be a
manufacturing CA belonging to the device vendor which proves
that the device is genuine and not counterfeit. The trust anchor can also belong
to the device operator as would be the case when the AK certificate is replaced
as part of onboarding the device into a new operational network.</t>
        <t>Note that the data format specified in <xref target="sec-data-model"/> allows for zero, one, or multiple
'SignatureBlock's, so a single evidence statement could be un-protected, or could be endorsed by multiple
AK chains leading to different trust anchors. See <xref target="sec-verif-proc"/> for a discussion of handling multiple SignatureBlocks.</t>
      </section>
    </section>
    <section anchor="sec-data-model">
      <name>Information Model</name>
      <t>This section describes the semantics of the key claims as part of the information
model.</t>
      <t>The envelop structure is:</t>
      <sourcecode type="asn.1"><![CDATA[
PkixAttestation ::= SEQUENCE {
    tbs TbsPkixAttestation,
    signatures SEQUENCE SIZE (0..MAX) of SignatureBlock
}

TbsPkixAttestation ::= SEQUENCE {
    version INTEGER,
    reportedEntities SEQUENCE SIZE (1..MAX) OF ReportedEntity
}

SignatureBlock ::= SEQUENCE {
   certChain SEQUENCE of Certificate,
   signatureAlgorithm AlgorithmIdentifier,
   signatureValue OCTET STRING
}
]]></sourcecode>
      <t>A PkixAttestation message is composed of a protected section known as the To-Be-Signed or TBS. The integrity of the To-Be-Signed section is ensured with one or multiple cryptographic signatures over the content of the section. There is a provision to carry the X.509 certificates supporting the signature(s).</t>
      <t>The TBS section is composed of a version number, to ensure future extensibility, and a sequence of reported entities.</t>
      <t>For compliance with this specification, <tt>TbsPkixAttestation.version</tt> <bcp14>MUST</bcp14> be <tt>1</tt>.
This envelope format is not extensible; future specifications which make compatibility-breaking changes <bcp14>MUST</bcp14> increment the version number.</t>
      <t>EDNOTE: do we want extension marks on the TbsAttestation object? I can see pros and cons to doing that.</t>
      <t><tt>SignatureBlock.certChain</tt> <bcp14>MUST</bcp14> contain at least one X.509 certificate as per <xref target="RFC5280"/>.
While there might exist attesting environments which use out-of-band or non-X.509 mechanisms for communicating
the AK public key to the Verifier, these <bcp14>SHALL</bcp14> be considered non-compliant with this specification.</t>
      <t>The attribute format is intended to be generic, flexible, and extensible with a default set of attributes defined in this document. Attributes are grouped into entities; an entity can be either a key, a platform, or a request containing a set of claims that are requested to be filled by the attesting environment.</t>
      <sourcecode type="asn.1"><![CDATA[
ReportedEntity ::= SEQUENCE {
    entityType         OBJECT IDENTIFIER,
    reportedAttributes SEQUENCE SIZE (1..MAX) OF ReportedAttribute
}
]]></sourcecode>
      <t>A reported entity is a unit of observation measured by the Attester (the HSM). In this specification, there are three types of entities defined:
- Platform Entity : An entity that reports attributes about the platform, itself. A PKIX Attestation <bcp14>MAY</bcp14> contain only one Platform Entity.
- Key Entity : An entity that represents a single cryptographic key found in a HSM ad its associated attributes. A PKIX Attestation <bcp14>MAY</bcp14> contain one or more Key Entities.
- Transaction Entity : An entity reporting attributes observed from the request itself. A PKIX Attestation <bcp14>MAY</bcp14> contain only one Transaction Entity.</t>
      <t>A reported entity is composed of an Object Identifier (OID), specifying the entity type, and a sequence of reported attributes associated with the entity.</t>
      <t>Although this specification defines only three types of entities, implementations <bcp14>MAY</bcp14> define additional entity types by registering additional OIDs.</t>
      <t>An Attester (HSM) which is requested to provide information about unrecognized entity types <bcp14>MUST</bcp14> fail the operation.</t>
      <t>A Verifier which encounters an unrecognized entity type <bcp14>MAY</bcp14> ignore it.</t>
      <sourcecode type="asn.1"><![CDATA[
id-pkix-attest                    OBJECT IDENTIFIER ::= { 1 2 3 999 }
id-pkix-attest-entity-type        OBJECT IDENTIFIER ::= { id-pkix-attest 0 }
id-pkix-attest-entity-transaction OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 0 }
id-pkix-attest-entity-platform    OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 1 }
id-pkix-attest-entity-key         OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 2 }
id-pkix-attest-entity-request     OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 3 }
]]></sourcecode>
      <t>TODO: do we need entity types for "platform policy" and "key policy" ?</t>
      <t>A PKIX Attestation <bcp14>MUST NOT</bcp14> contain more than one platform entity since duplicate and conflicting platform claims across multiple platform entities can easily lead to security bugs.
A parser <bcp14>MUST</bcp14> fail with an error if it encouters multiple platform entities.</t>
      <t>A PKIX Attestation <bcp14>MUST NOT</bcp14> contain more than one transaction entity. A transaction entity contains attributes that are related to the request such as a "nonce".
A parser <bcp14>MUST</bcp14> fail with an error if it encouters multiple transaction entities.</t>
      <t>A PKIX Attestation <bcp14>MAY</bcp14> contain one or more application key entities. Each key entity <bcp14>SHOULD</bcp14> describe a unique application key. Multiple ReportedEntity objects of type <tt>entity-key</tt> that describe the same application key <bcp14>SHOULD</bcp14> be avoided since different or conflicting claims could lead to security issues on the part of the Verifier or Relying Party.</t>
      <t>TODO: note that we need to be careful about whether it is allowed to include the AK(s) and other "platform-owned" keys in the set of keys you can attest, or only attesting application keys.</t>
      <t>Each reported attribute is composed of an Object Identifier (OID), identifying the type of the attribute, and a value which must be one of the prescribed data types.</t>
      <sourcecode type="asn.1"><![CDATA[
ReportedAttribute ::= SEQUENCE {
    attributeType      OBJECT IDENTIFIER,
    value              OPTIONAL AttributeValue
}

AttributeValue :== CHOICE {
   bytes       [0] IMPLICIT OCTET STRING
   utf8String  [1] IMPLICIT UTF8String,
   bool        [2] IMPLICIT BOOLEAN,
   time        [3] IMPLICIT GeneralizedTime,
   int         [4] IMPLICIT INTEGER,
   oid         [5] IMPLICIT OBJECT IDENTIFIER
}
]]></sourcecode>
      <t>An attribute type is generally associated with a single entity type. In the following sub-sections, defined attributes are grouped according to their related entity types.</t>
      <t>There are circumstances where an attribute type can be repeated for a given entity while other attribute types are unique.
For example, the <tt>hwmodel</tt>, <tt>uptime</tt>, and <tt>fipsboot</tt> attributes are not allowed to have multiple instances since these are global measurements of the platform. However, other attribute types such as <tt>usermods</tt> allow multiple instances as an HSM can have more than one user module loaded. The tables below list for each attribute type whether multiples are allowed.
For attribute types that do not allow multiples, a parser <bcp14>MUST</bcp14> fail with an error if it encouters multiple instances.
For attribute types that allow multiples, a parser <bcp14>MUST</bcp14> treat each one as an independent attribute and <bcp14>MUST NOT</bcp14>, for example, consider later ones to overwrite the previous one. Appraisal policies and profiles <bcp14>SHOULD</bcp14> be clear about how to handle multiples when requiring attribute types that allow multiples.</t>
      <t>PKIX Attestation Requests are discussed in <xref target="sec-reqs"/>.
In the tables in the sections that follow, the column "Request Contains a Value" specifies whether,
when the given attribute appears in a request, whether it is to be a valued or un-valued request attribute as described in <xref target="sec-reqs"/>.</t>
      <section anchor="transaction-attributes">
        <name>Transaction Attributes</name>
        <t>A default and vendor-agnostic set of transaction attributes is defined in this section.</t>
        <t>These attribute types <bcp14>MAY</bcp14> be contained within a transaction entity; i.e. an entity identified by <tt>id-pkix-attest-entity-transaction</tt>.</t>
        <table>
          <thead>
            <tr>
              <th align="left">Attribute</th>
              <th align="left">AttributeValue</th>
              <th align="left">Reference</th>
              <th align="left">Multiple Allowed</th>
              <th align="left">Request Contains a Value</th>
              <th align="left">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">nonce</td>
              <td align="left">bytes</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST</bcp14></td>
              <td align="left">Repeats a "nonce" provided during the atttestation request.</td>
            </tr>
            <tr>
              <td align="left">timestamp</td>
              <td align="left">time</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">The time at which this attestation was generated. Corresponds to EAT IAT claim.</td>
            </tr>
          </tbody>
        </table>
        <section anchor="nonce">
          <name>nonce</name>
          <t>The nonce attribute is used to provide "freshness" quality as to the information provided by the Attester (HSM) in the PkixAttestation message. A client requesting a PkixAttestation message <bcp14>MAY</bcp14> provide a nonce value as part of the request. This nonce value, if provided, <bcp14>SHOULD</bcp14> be repeated as an attribute to the transaction entity.</t>
        </section>
        <section anchor="time">
          <name>time</name>
          <t>The time at which this attestation was generated, according to the internal system clock of the HSM.</t>
          <t>Note that it is common for HSMs to not have an accurate system clock; consider an HSM for a root CA kept offline and booted up infrequently in an local network segregated from all other network, or a smart card which boots up only when held against an NFC reader.
Implementers of emitters <bcp14>SHOULD</bcp14> include this attribute only if the device reliably knows its own time (for example has had recent contact with an NTP server).
Implementers of parsers <bcp14>SHOULD</bcp14> be wary of trusting the contents of this attribute. A challenge-response protocol that makes use of the nonce attribute is a far more reliable way of establishing freshness.</t>
        </section>
      </section>
      <section anchor="platform-attributes">
        <name>Platform Attributes</name>
        <t>A default and vendor-agnostic set of platform attributes is defined in this section.</t>
        <t>These attribute types <bcp14>MAY</bcp14> be contained within a platform entity; i.e. an entity identified by <tt>id-pkix-attest-entity-platform</tt>.</t>
        <table>
          <thead>
            <tr>
              <th align="left">Attribute</th>
              <th align="left">AttributeValue</th>
              <th align="left">Reference</th>
              <th align="left">Multiple Allowed</th>
              <th align="left">Request Contains a Value</th>
              <th align="left">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">vendor</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">A human-readable string by which the vendor identifies themself.</td>
            </tr>
            <tr>
              <td align="left">oemid</td>
              <td align="left">bytes</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">The EAT OEM ID as defined in <xref target="I-D.ietf-rats-eat"/>.</td>
            </tr>
            <tr>
              <td align="left">hwmodel</td>
              <td align="left">utf8String</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Model or product line of the hardware module.</td>
            </tr>
            <tr>
              <td align="left">hwserial</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Serial number of the hardware module, often matches the number engraved or stickered on the case.</td>
            </tr>
            <tr>
              <td align="left">swversion</td>
              <td align="left">utf8String</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">A text string identifying the firmware or software running on the HSM.</td>
            </tr>
            <tr>
              <td align="left">dbgstat</td>
              <td align="left">int</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Indicates whether the HSM is currently in a debug state, or is capable in the future of being turned to a debug state. Semantics and integer codes are defined in <xref target="I-D.ietf-rats-eat"/>.</td>
            </tr>
            <tr>
              <td align="left">uptime</td>
              <td align="left">int</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Contains the number of seconds that have elapsed since the entity was last booted.</td>
            </tr>
            <tr>
              <td align="left">bootcount</td>
              <td align="left">int</td>
              <td align="left">
                <xref target="I-D.ietf-rats-eat"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Contains a count of the number of times the entity has been booted.</td>
            </tr>
            <tr>
              <td align="left">usermods</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">Yes</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">This attribute lists user modules currently loaded onto the HSM in a human readable format, preferabbly JSON.</td>
            </tr>
            <tr>
              <td align="left">fipsboot</td>
              <td align="left">bool</td>
              <td align="left">
                <xref target="FIPS.140-3"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Indicates whether the devices is currently running in FIPS mode.</td>
            </tr>
            <tr>
              <td align="left">fipsver</td>
              <td align="left">utf8String</td>
              <td align="left">
                <xref target="FIPS.140-3"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Indicates the version of the FIPS CMVP standard that is being enforced. At time of writing this is typically "FIPS 140-2" or "FIPS 140-3".</td>
            </tr>
            <tr>
              <td align="left">fipslevel</td>
              <td align="left">int</td>
              <td align="left">
                <xref target="FIPS.140-3"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Indicates the FIPS Level to which the device is currently operating in compliance with.</td>
            </tr>
            <tr>
              <td align="left">envid</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">Yes</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">An environment ID, which will typically be a URI, UUID, or similar.</td>
            </tr>
            <tr>
              <td align="left">envdesc</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">Yes</td>
              <td align="left">
                <bcp14>MUST NOT</bcp14></td>
              <td align="left">Further description of the environment.</td>
            </tr>
          </tbody>
        </table>
        <t>TODO: find the actual reference for "FIPS Mode" -- FIPS 140-3 does not define it (at least not the 11 page useless version of 140-3 that I found).</t>
        <t>Each attribute has an assigned OID, see <xref target="sec-asn1-mod"/>.</t>
        <t>Some of the attributes defined in this specification have further details below.</t>
        <section anchor="usermods">
          <name>usermods</name>
          <t>Most HSMs have some concept of trusted execution environment where user software modules can be loaded inside the HSM to run with some level of privileged access to the application keys. This attribute lists user modules currently loaded onto the HSM in a human readable format, preferably JSON.</t>
        </section>
        <section anchor="fipsboot-fipsver-and-fipslevel">
          <name>fipsboot, fipsver and fipslevel</name>
          <t>FIPS 140-3 CMVP validation places stringent requirements on the mode of operation of the device and the cryptography offered by the module, including only enabling FIPS-approved algorithms, certain requirements on entropy sources, and extensive start-up self-tests. FIPS 140-3 offers compliance levels 1 through 4 with increasingly strict requirements. Many HSMs include a configuration setting that allows the device to be taken out of FIPS mode and thus enable additional functionality or performance, and some offer configuration settings to change between compliance levels.</t>
          <t>The boolean attribute <tt>fipsboot</tt> indicates whether the device is currently operating in FIPS mode. For most HSMs, changing this configuration setting from <tt>fipsboot=true</tt> to <tt>fips-boos=false</tt> is destructive and will result in zeroization of all cryptographic keys held within the module.</t>
          <t>The UTF8String attribet <tt>fipsver</tt> indicates the version of the FIPS CMVP specification with which the device's operational mode is compliant. At the time of writing, the strings "FIPS 140-2" or "FIPS 140-3" <bcp14>SHOULD</bcp14> be used.</t>
          <t>The integer attribute <tt>fipslevel</tt> indicates the compliance level to which the device is currently operating and <bcp14>MUST</bcp14> only be 1, 2, 3, or 4. The <tt>fipslevel</tt> attribute has no meaning if <tt>fipsboot</tt> is absent or <tt>false</tt>.</t>
          <t>The FIPS status information in a PKIX Attestation indicates only the mode of operation of the device and is not authoritative of its validation status.
This information is available on the NIST CMVP website or by contacting the device vendor.
As an example, some devices may have the option to enable FIPS mode in configuration even if the vendor has not sumbitted this model for validation. As another example, a device may be running in a mode consistent with FIPS Level 3 but the device was only validated and certified to Level 2.
A Relying Party wishing to know the validation status of the device <bcp14>MUST</bcp14> couple the device state information contained in the attestation with a valid FIPS CMVP certificate for the device.</t>
        </section>
        <section anchor="envid">
          <name>envid</name>
          <t>An identifier for an environment to which the attested keys belong. These will be an a vendor-chosen format, but are constrained to ASCII as URIs, UUID, and similar types of identifiers are envisioned.</t>
          <t>There <bcp14>MAY</bcp14> be multiple envid attributes if the attested keys simultaneously belong to multiple environments.</t>
          <t>Note that by including envid as a Platform Attribute, this implies that it applies to all attested key entities. If the HSM needs to attest multiple keys across multiple disjoint environments, then multiple PKIXAttestations are required. This naturally enforces privacy constraints of only attesting a single environment at a time.</t>
          <t>If an envdid request attribute contains a value, this means that the Presenter is requesting that only keys belogning to the given environment be included in the returned attestation.</t>
        </section>
        <section anchor="envdesc">
          <name>envdesc</name>
          <t>Further description of the environment beyond hwvendor, hwmodel, hwserial, swversion; for example if there is a need to describe multiple logical partitions within the same device. Contents could be a human-readable description or other identifiers.</t>
        </section>
      </section>
      <section anchor="key-attributes">
        <name>Key Attributes</name>
        <t>A default and vendor-agnostic set of key attributes is defined in this section.</t>
        <t>These attribute types <bcp14>MAY</bcp14> be contained within a key entity; i.e. an entity identified by <tt>id-pkix-attest-entity-key</tt>.</t>
        <table>
          <thead>
            <tr>
              <th align="left">Attribute</th>
              <th align="left">AttributeValue</th>
              <th align="left">Reference</th>
              <th align="left">Multiple Allowed</th>
              <th align="left">Request Contains a Value</th>
              <th align="left">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">identifier</td>
              <td align="left">utf8String</td>
              <td align="left">RFCthis</td>
              <td align="left">Yes</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Identifies the subject key, with a vendor-specific format which could be numeric, UUID, or other textual identifier.</td>
            </tr>
            <tr>
              <td align="left">spki</td>
              <td align="left">bytes</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">A complete DER-encoded SubjectPublicKeyInfo representing the public key associated with the asymetric key pair being attested.</td>
            </tr>
            <tr>
              <td align="left">purpose</td>
              <td align="left">bytes</td>
              <td align="left">
                <xref target="PKCS11"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Defines the intended usage for the key.</td>
            </tr>
            <tr>
              <td align="left">extractable</td>
              <td align="left">bool</td>
              <td align="left">
                <xref target="PKCS11"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Indicates if the key is able to be exported from the module. Corresponds directly to PKCS#11 CKA_EXTRACTABLE.</td>
            </tr>
            <tr>
              <td align="left">sensitive</td>
              <td align="left">bool</td>
              <td align="left">
                <xref target="PKCS11"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Indicates that the key cannot leave the module in plaintext. Corresponds directly to PKCS#11 CKA_SENSITIVE.</td>
            </tr>
            <tr>
              <td align="left">never-extractable</td>
              <td align="left">bool</td>
              <td align="left">
                <xref target="PKCS11"/></td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Indicates if the key was able to be exported from the module. Corresponds directly to PKCS#11  CKA_NEVER_EXTRACTABLE.</td>
            </tr>
            <tr>
              <td align="left">local</td>
              <td align="left">bool</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Indicates whether the key was generated locally or imported.</td>
            </tr>
            <tr>
              <td align="left">expiry</td>
              <td align="left">time</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Defines the expiry date or "not after" time for the key.</td>
            </tr>
            <tr>
              <td align="left">protection</td>
              <td align="left">bytes</td>
              <td align="left">RFCthis</td>
              <td align="left">No</td>
              <td align="left">
                <bcp14>MAY</bcp14></td>
              <td align="left">Indicates any additional key protection properties.</td>
            </tr>
          </tbody>
        </table>
        <t>PKCS#11 private key attributes can be somewhat complex to parse, especially as their exact meanings can vary by the key type and the exact details of key export mechanisms supported by the HSM.</t>
        <t>In most cases, the Verifier of a PKIX Attestation will want to know simply that the key is in hardware and cannot be extracted to be used with a software cryptographic module. A setting of <tt>extractable=false</tt> satisfies this requirement. Generally <tt>extractable=true &amp;&amp; sensitive=true</tt> also satisfies this requirement as the key cannot be extracted in plaintext, but only under key wrap. This is common in HSM clustering scenarios, and is also common in scenarios where keys are exported under wrap so that they can be stored in an off-board database for re-import later, thus allowing the HSM to protect and manage a much larger set of keys than it has internal memory for. The <tt>never-extractable</tt> and <tt>local</tt> attributes give additional assurance that the key has always been in hardware and was not imported from software.</t>
        <section anchor="purpose">
          <name>purpose</name>
          <t>TODO: probably need to define a mapping from PKCS#11 CKA enums to a bit-indexed byte array.</t>
        </section>
        <section anchor="protection">
          <name>protection</name>
          <t>Indicates any additional key protection properties around use or modification of this key. These are generalized properties and will not apply the same way to all HSM vendors. Consult vendor documentation for the in-context meaning of these flags.</t>
          <t>TODO: define a bit-indexed byte array</t>
          <t>BIT MASK / Boolean Array {DualControl (0), CardControl (1), PasswordControl (2), ...}</t>
          <t>We may need to say that the first X are reserved for use by future RFCs that update this specification, and beyond that is private use.</t>
        </section>
      </section>
      <section anchor="sec-additional-attr-types">
        <name>Additional Entity and Attribute Types</name>
        <t>It is expected that HSM vendors will register additional Entity and Attribute types by assigning OIDs from their own proprietary OID arcs to hold data describing additional proprietary key properties.</t>
        <t>An Attester (HSM) which is requested to provide information about unrecognized Entity or Attribute types <bcp14>MUST</bcp14> fail the operation.</t>
        <t>A Verifier which encounters an unrecognized Entity or Attribute type <bcp14>MAY</bcp14> ignore it.</t>
      </section>
      <section anchor="encoding">
        <name>Encoding</name>
        <t>A PKIXAttestation is to be DER encoded <xref target="X.690"/>.</t>
        <t>If a textual representation is required, then the DER encoding <bcp14>MAY</bcp14> be subsequently encoded into Base64.</t>
        <t>EDNOTE: I think we have to be precise about which flavour of Base64 we are referrring to.</t>
      </section>
    </section>
    <section anchor="signing-procedure">
      <name>Signing Procedure</name>
      <t>The <tt>SignatureBlock.signatureValue</tt> signs over the DER-encoded to-be-signed attestation data
<tt>PkixAttestation.tbs</tt> and <bcp14>MUST</bcp14> be validated with the subject public key of the leaf
X.509 certificate contained in the <tt>SignatureBlock.certChain</tt>.</t>
    </section>
    <section anchor="sec-verif-proc">
      <name>Verification Procedure</name>
      <t>The <tt>SignatureBlock.signatureValue</tt> signs over the DER-encoded to-be-signed attestation data
<tt>PkixAttestation.tbs</tt> and <bcp14>MUST</bcp14> be validated with the subject public key of the leaf
X.509 certificate contained in the <tt>SignatureBlock.certChain</tt>.</t>
      <t>Note that a PkixAttestation <bcp14>MAY</bcp14> contain zero or more SignatureBlocks.
A PkixAttestation with zero SignatureBlocks is unsigned, <bcp14>MUST</bcp14> be treated as un-protected and un-trusted,
and any signature validation procedure <bcp14>MUST</bcp14> fail.</t>
      <t>More than one SignatureBlocks <bcp14>MAY</bcp14> be used to convey a number of different semantics.
For example, the HSM's Attesting Service might hold multiple Attestation Keys on different cryptographic
algorithms in order to provide algorithm redundancy in the case that one algorithm becomes cryptographically broken. In this case a Verifier would be expected to validate all SignatureBlocks. Alternatively, the HSM's Attesting Service may hold multiple Attestion Keys (or multiple X.509 certificates for the same key) from multiple operational environments to which it belongs. In this case a Verifier would be expected to only validate the SignatureBlock corresponding to its own environment. Alternatively, multiple SignatureBlocks could be used to convey counter-signatures from external parties, in which case the Verifier will need to be equipped with environment-specific verification logic. Multiple of these cases, and potentially others, could be present in a single PkixAttestation object.</t>
      <t>Note that each SignatureBlock is a fully detached signature over the tbs content with no binding between the signed content and the SignatureBlocks, or between SignatureBlocks, meaning that a third party can add a
counter-signature of the evidence after the fact, or an attacker can remove a SignatureBlock without leaving any artifact. See {#sec-detached-sigs} for further discussion.</t>
    </section>
    <section anchor="sec-reqs">
      <name>Attestation Requests</name>
      <t>EDNOTE: MikeO: this is complex, but I'm not really sure how to define a request format in any simpler way. Ideas are welcome!</t>
      <t>This section specifies a standardized format that a Presenter can use to request a PKIX Attestation about a specific key or set of keys, a specific environment, or containing specific attributes.</t>
      <t>Hardware Security Modules range greatly in size and complexity from personal cryptographic tokens containing a single application key such as a smartcard acting as a personal ID card, up to clusters of enterprise-grade HSMs serving an entire cloud service.</t>
      <t>The manufacturer of a HSM device with limited capabilities may implement a response to the attestation request which includes a fixed set of reported entities, each with a fixed set of reported attributes and parses an Attestion Request object only for the purposes of extracting the nonce.</t>
      <t>On the other hand, an enterprise grade HSM with the capability to hold a large number of private keys is expected to be capable of parsing attestation requests such that a Presenter can request attestation of specific key(s) by their identifier, or request attestation of all keys with given key attributes within a given sub-environment of the HSM. A full implementation will also create a PKIX Attestation containing exactly the set of requested attributes so that the Presenter can fine-tune the information that it wishes to disclose to the Recipient.</t>
      <t>A PKIX Attestation Request consists of a un-signed TbsPkixAttestation object containing a single <tt>ReportedEntity</tt> identified with <tt>id-pkix-attest-entity-request</tt>, called a request entity. A TbsPkixAttestation containing a request entity <bcp14>MUST NOT</bcp14> contain any other type of entities. Request entities <bcp14>MAY</bcp14> contain Attributes of any type; transaction, platform, key, or any additional attribute type. Any attribute contained in a request entity is called a request attribute. Request entities <bcp14>MUST NOT</bcp14> appear in PKIX Attestation response objects. The TbsPkixAttestation object of an attestation request <bcp14>MAY</bcp14> appear inside a signed PKIXAttestation for the purposes of authenticating and authorizing the requester, but the semantics of doing so are left to the implementer.</t>
      <t>An Attester that supports Attestation Requests <bcp14>MUST</bcp14>, at the minimum, support extracting the value from a <tt>nonce</tt> attribute and echoing it into a <tt>nonce</tt> attribute within a TransactionEntity.</t>
      <t>Some request attributes contain a value that the HSM uses as a filter or search parameter in constructing the PKIX Attestation; these are called valued requests attributes.
Other requests attributes omit the optional <tt>value</tt> field so that they consist of only the attribute type OID and indicate that the HSM <bcp14>SHOULD</bcp14> collect and return the appropriate measurement; these are called un-valued request attributes.
An Attester <bcp14>SHOULD</bcp14> return a PKIX Attestation containing exactly the set of attributes listed in the request, including both valued and un-valued request attributes but <bcp14>MAY</bcp14> omit requested attributes if it cannot be measured in the current device configuration.
Note that an Attestation Request will contain all request attributes inside a single request entity, but the HSM <bcp14>MUST</bcp14> sort the attributes in the response PKIX Attestation into the appropriate entity types.
For example, if the request contains the key <tt>purpose</tt> attribute (either valued or un-valued), then all returned key entities will contain the <tt>purpose</tt> attribute when this data is available for the given key.
The tables in the following sections indicate whether an attribute of the given type <bcp14>MUST</bcp14>, <bcp14>MAY</bcp14>, or <bcp14>MUST NOT</bcp14> contain a value when included in a request entity.</t>
      <t>Generally errors should be handled gracefully by simply omitting an unfulfillable request attribute from the response.
An example would be if the <tt>hwserial</tt> attribute was requested but the devices does not have a serial number.
However in some cases a fatal error <bcp14>MAY</bcp14> be returned, for example if attestation of a specific key is requested by key identifier or SubjectPublicKeyInfo but the HSM does not contain a matching key.
HSMs <bcp14>SHOULD</bcp14> ignore request attributes with unrecognized type OIDs.</t>
      <t>Generally, the Attester <bcp14>SHOULD NOT</bcp14> include additional attributes beyond those that were requested. This is to allow the Presenter to fine-tune the information that will be disclosed to the Recipient.
Further privacy concerns are discussed in <xref target="sec-cons-privacy"/>.
However, in some contexts this <bcp14>MAY</bcp14> be appropriate, for example, a request containing only a key <tt>identifier</tt> attribute could be responded to with the full set of platform and key attributes that apply to that key.
Discretion is left to implementers.</t>
      <t>For both error handling and privacy reasons, the Presenter <bcp14>SHOULD</bcp14> check that the returned PKIX Attestation contains the expected attributes prior to forwarding it to the Recipient.</t>
    </section>
    <section anchor="sec-profiles">
      <name>Appraisal Policies and Profiles</name>
      <t>This section provides some sample profiles of appraisal policies that verifiers
<bcp14>MAY</bcp14> apply when evaluating evidence. These appraisal profiles represent environment-specific requirements
on the contents of the evidence and / or endorsement certificate chain.</t>
      <section anchor="key-import-into-an-hsm">
        <name>Key Import into an HSM</name>
        <t>An HSM which is compliant with this draft <bcp14>SHOULD</bcp14> validate any PKIX Key Attestations that are provided
along with the key being imported.</t>
        <t>The SignatureBlocks <bcp14>MUST</bcp14> be validated and <bcp14>MUST</bcp14> chain to a trust anchor known to the HSM. In most cases this will
be the same trust anchor that endorsed the HSMs own AK, but the HSM <bcp14>MAY</bcp14> be configured with set of third party trust anchors from which it will accept key attestations.</t>
        <t>If the HSM is operating in FIPS Mode, then it <bcp14>MUST</bcp14> only import keys from HSMs also operating in FIPS Mode.</t>
        <t>The claims <tt>key-purpose</tt>, <tt>key-extractable</tt>, <tt>key-never-extractable</tt>, <tt>key-local</tt> <bcp14>MUST</bcp14> be checked and honoured during key import, which typically means that after import, the key <bcp14>MUST NOT</bcp14> claim a stronger protection property than it had on the previous hardware. In other words, Key Attestation allows and requires that key protection properties be preserved over export / import operations between different HSMs, and this format provides a vendor-agnostic
way to acheive this.</t>
        <t>How to handle errors is outside the scope of this specification and is left to implementors; for example the
key import <bcp14>MAY</bcp14> be aborted, or a prompt <bcp14>MAY</bcp14> be given to the user administrator, or any similar reasonable error handling logic.</t>
      </section>
      <section anchor="cabrowser-forum-code-signing">
        <name>CA/Browser Forum Code-Signing</name>
        <t>TODO: ... intro text</t>
        <t>The subscriber <bcp14>MUST</bcp14>:</t>
        <ul spacing="normal">
          <li>
            <t>Provide the CA with a CSR containing the subscriber key.</t>
          </li>
          <li>
            <t>Provide an attestation token as per this specification describing the private key protection properties of the subscriber's private key. This token <bcp14>MAY</bcp14> be transported inside the CSR as per draft-ietf-lamps-csr-attest, or it <bcp14>MAY</bcp14> be transported adjacent to the CSR over any other certificate enrollment mechanism.</t>
          </li>
        </ul>
        <t>The CA / RA / RP / Verifier <bcp14>MUST</bcp14>:</t>
        <ul spacing="normal">
          <li>
            <t>Ensure that the subscriber key which is the subject of the CSR is also described by a KAT by matching either the key fingerprint or full SubjectPublicKeyInfo.</t>
          </li>
          <li>
            <t>The hardware root-of-trust described by a PAT has a valid and active FIPS certificate according to the NIST CMVP database.</t>
          </li>
          <li>
            <t>The attestation signing key (AK) which has signed the attestation token chains to a root certificate that A) belongs to the hardware vendor described in the PAT token, and B) is trusted by the CA / RA / RP / Verifier to endorse hardware from this vendor, for example through a CA's partner program or through a network operator's device on-boarding process.</t>
          </li>
          <li>
            <t>The key is protected by a module running in FIPS mode. The parsing logic is to start at the leaf KAT token that matches the key in the CSR and parsing towards the root PAT ensuring that there is at least one <tt>fipsboot=true</tt> and no <tt>fipsboot=false</tt> on that path.</t>
          </li>
        </ul>
      </section>
    </section>
    <section anchor="sec-asn1-mod">
      <name>ASN.1 Module</name>
      <sourcecode type="asn.1"><![CDATA[
<CODE STARTS>

PKIX-Key-Attest-2025
      { iso(1) identified-organization(3) dod(6) internet(1) 
        security(5) mechanisms(5) pkix(7) id-mod(0) 
        id-mod-pkik-key-attest-2025(TBDMOD) }


PkixAttestation ::= SEQUENCE {
    tbs TbsPkixAttestation,
    signatures SEQUENCE SIZE (0..MAX) of SignatureBlock
}

TbsPkixAttestation ::= SEQUENCE {
    version INTEGER,
    reportedEntities SEQUENCE SIZE (1..MAX) OF ReportedEntity
}

ReportedEntity ::= SEQUENCE {
    entityType         OBJECT IDENTIFIER,
    reportedAttributes SEQUENCE SIZE (1..MAX) OF ReportedAttribute
}

ReportedAttribute ::= SEQUENCE {
    attributeType      OBJECT IDENTIFIER,
    value              AttributeValue
}

AttributeValue :== CHOICE {
   bytes       [0] IMPLICIT OCTET STRING
   utf8String  [1] IMPLICIT UTF8String,
   bool        [2] IMPLICIT BOOLEAN,
   time        [3] IMPLICIT GeneralizedTime,
   int         [4] IMPLICIT INTEGER,
   oid         [5] IMPLICIT OBJECT IDENTIFIER
}

SignatureBlock ::= SEQUENCE {
   certChain SEQUENCE of Certificate,
   signatureAlgorithm AlgorithmIdentifier,
   signatureValue OCTET STRING
}

id-pkix-attest OBJECT IDENTIFIER ::= { 1 2 3 999 }

id-pkix-attest-entity-type        OBJECT IDENTIFIER ::= { id-pkix-attest 0 }
id-pkix-attest-entity-transaction OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 0 }
id-pkix-attest-entity-platform    OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 1 }
id-pkix-attest-entity-key         OBJECT IDENTIFIER ::= { id-pkix-attest-entity-type 2 }

id-pkix-attest-attribute-type OBJECT IDENTIFIER ::= { id-pkix-attest 1 }

id-pkix-attest-attribute-transaction       OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-type 0 }
id-pkix-attest-attribute-transaction-nonce OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-transaction 0 }

id-pkix-attest-attribute-platform            OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-type 1 }
id-pkix-attest-attribute-platform-vendor     OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 0 }
id-pkix-attest-attribute-platform-hwserial   OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 1 }
id-pkix-attest-attribute-platform-fipsboot   OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 2 }
id-pkix-attest-attribute-platform-desc       OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 3 }
id-pkix-attest-attribute-platform-time       OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 4 }
id-pkix-attest-attribute-platform-swversion  OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 5 }
id-pkix-attest-attribute-platform-oemid      OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 6 }
id-pkix-attest-attribute-platform-debugstat  OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 7 }
id-pkix-attest-attribute-platform-uptime     OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 8 }
id-pkix-attest-attribute-platform-bootcount  OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 9 }
id-pkix-attest-attribute-platform-usermods   OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 8 }
id-pkix-attest-attribute-platform-envid      OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 9 }
id-pkix-attest-attribute-platform-envdesc    OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 10 }
id-pkix-attest-attribute-platform-fipsver  OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 11 }
id-pkix-attest-attribute-platform-fipslevel  OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-platform 12 }



id-pkix-attest-attribute-key                   OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-type 2 }
id-pkix-attest-attribute-key-identifier        OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 0 }
id-pkix-attest-attribute-key-spki              OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 1 }
id-pkix-attest-attribute-key-purpose           OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 2 }
id-pkix-attest-attribute-key-extractable       OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 3 }
id-pkix-attest-attribute-key-never-extractable OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 4 }
id-pkix-attest-attribute-key-local             OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 5 }
id-pkix-attest-attribute-key-expiry            OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 6 }
id-pkix-attest-attribute-key-protection        OBJECT IDENTIFIER ::= { id-pkix-attest-attribute-key 7 }

<CODE ENDS>

]]></sourcecode>
    </section>
    <section anchor="iana-considerations">
      <name>IANA Considerations</name>
      <t>Please replace "RFCthis" with the RFC number assigned to this document.</t>
      <t>TODO: list out all the OIDs that need IANA registration.</t>
    </section>
    <section anchor="security-considerations">
      <name>Security Considerations</name>
      <t>A Verifier <bcp14>MAY</bcp14> reject a PKIX Attestation if it lacks required attributes per their
appraisal policy. For example, if a Relying Party mandates a FIPS-certified device,
it <bcp14>SHOULD</bcp14> reject evidence lacking sufficient information to verify the device's FIPS
certification status.</t>
      <section anchor="sec-cons-simple">
        <name>Simple to Implement</name>
        <t>The nature of attestation requires the attestation service to be implemented in an extremely privileged position within the HSM so that it can collect measurements of both the hardware environment and the application keys being attested. For many HSM and TPM architectures, this will place the Attestation Service inside the "HSM kernel" and potentially subject to FIPS 140-3 or Common Criteria validation and change control. For both security and compliance reasons there is incentive for the emitting and parsing logic to be simple and easy to implement correctly. Additionally, when the data formats contained in this specification are parsed within an HSM boundary -- that would be parsing a request entity, or parsing an attestation produced by a different HSM -- implementers <bcp14>SHOULD</bcp14> opt for simple logic that rejects any data that does not match the expected format instead of attempting to be flexible.</t>
        <t>In particular, Attesting Services <bcp14>SHOULD</bcp14> generate the attestation object from scratch and avoid copying any content from the request. Attesting Services <bcp14>MUST NOT</bcp14> allow unrecognized attributes or any attribute value other than the nonce to be echoed from the request into the attestation object.</t>
      </section>
      <section anchor="sec-detached-sigs">
        <name>Detached Signatures</name>
        <t>TODO beef this up</t>
        <t>No indication within the tbs content about what or how many signatures to expect.</t>
        <t>A SignatureBlock can be trivially stripped off without leaving any evidence.</t>
        <t>When multiple SignatureBlocks are used for providing third party counter-signatures, note that the counter signature only covers the tbs content and not existing SignatureBlocks.</t>
      </section>
      <section anchor="sec-cons-privacy">
        <name>Privacy</name>
        <t>Often, a TPM will host cryptographic keys for both the kernel and userspace of a local operating system but a Presenter may only represents a single user or application.
Similarly, a single enterprise-grade Hardware Security Module will often host cryptographic keys for an entire multi-tenant cloud service and the Presenter or Reciever or Recipient belongs only to a single tenant. For example the HSM backing a TLS-terminating loadbalancer fronting thousands of un-related web domains.
In these cases, disclosing that two different keys reside on the same hardware, or in some cases even disclosing the existance of a given key, let alone its attributes, to an unauthorized party would constitute an egregious privacy violation.</t>
        <t>Implementions <bcp14>SHOULD</bcp14> be careful to avoid over-disclosure of information, for example by authenticating the Presenter as described in <xref target="sec-cons-auth-the-presenter"/> and only returning results for keys and envirnments for which it is authorized.
In absence of an existing mechanism for authenticating and authorizing administrative connections to the HSM, the attestation request <bcp14>MAY</bcp14> be authenticated by embedding the TbsPkixAttestation of the request inside a PKIXAttestation signed with a certificate belogning to the Presenter.</t>
        <t>Furthermore, enterprise and cloud-services grade HSMs <bcp14>SHOULD</bcp14> support the full set of attestation request functionality described in <xref target="sec-reqs"/> so that Presenters can fine-tune the content of a PKIX Attestation such that it is appropriate for the intended Recipient.</t>
      </section>
      <section anchor="sec-cons-auth-the-presenter">
        <name>Authenticating and Authorizing the Presenter</name>
        <t>The Presenter represents a priviledged role within the architecture of this specification as it gets to learn about the existence of application keys and their protection properties, as well as details of the platform.
The Presenter is in the position of deciding how much information to disclose to the Recipient, and to request a suitably redacted attestation from the HSM.</t>
        <t>For personal cryptographic tokens it might be appropriate for the attestation request interface to be un-authenticated. However, for enterprise and cloud-services grade HSMs the Presenter <bcp14>SHOULD</bcp14> be authenticated using the HSM's native authentication mechanism. The details will be HSM-specific and are thus left up to the implementer, however it is <bcp14>RECOMMENDED</bcp14> to implement an authorization framework similar to the following.</t>
        <t>A Presenter <bcp14>SHOULD</bcp14> be allowed to request attestation for any application keys which it is allowed to use.
For example, a TLS application that is correctly authenticated to the HSM in order to use its TLS keys <bcp14>SHOULD</bcp14> be able to request attestation of those same keys without needing to perform any additional authentication or requiring any additional roles or permissions.
HSMs that wish to allow a Presenter to request attestation of keys which is not allowed to use, for example for the purposes of displaying HSM status information on an administrative console or UI, <bcp14>SHOULD</bcp14> have a "Attestation Requester" role or permission and <bcp14>SHOULD</bcp14> enforce the HSM's native access controls such that the Presenter can only retrieve attestations for keys for which it has read access.</t>
      </section>
      <section anchor="proof-of-possession-of-application-keys">
        <name>Proof-of-Possession of Application Keys</name>
        <t>With asymmetric keys within a Public Key Infrastructure (PKI) it is common to require a key holder to prove that they are in control of the private key by using it. This is called "proof-of-possession (PoP)". This specification intentionally does not provide a mechnaism for PoP of application keys and relies on the Presenter, Recipient, Verifier, and Relying Party trusting the Attester to correctly report the cryptographic keys that it is holding.</t>
        <t>It would be easy to add a PoP Key Attribute that uses the attested application key to sign over, for example, the Transaction Entity, however this is a bad idea and <bcp14>MUST NOT</bcp14> be added as a custom attribute for several reasons.</t>
        <t>First, an application key intended, for example, for TLS <bcp14>SHOULD</bcp14> only be used with the TLS protocol and introducing a signature oracle whereby the TLS application key is used to sign attestation content could lead to cross-protocol attacks whereby the attacker submits a nonce value which is in fact not random but is crafted in such a way as to appear as a valid message in some other protocol context or exploit some other weakness in the signature algorithm.</t>
        <t>Second, the Presenter who has connected to the HSM to request an attestation may have permissions to view the requested application keys but not permission to use them, as in the case where the Presenter is an administrative UI displaying HSM status information to an systems administrator or auditor.
Requiring the Attestation Service to use the attested application keys could, in some architectures, require the Attestation Service to resolve complex access control logic and handle complex error conditions for each requested key, which violates the "simple to implement" design principle outlined in <xref target="sec-cons-simple"/>. More discussion of authenticating the Presenter can be found in <xref target="sec-cons-auth-the-presenter"/>.</t>
        <t>In cases where explicit PoP is required for a given attested application key, it <bcp14>MUST</bcp14> be done as part of the regular usage protocol for which that key is intended and performed through the HSM's regular application interface, not its attestation interface. For example, PoP could be performed by signing a Certificate Signing Request (CSR), through a PKI enrollment protocol such as Certificate Management Protocol (CMP) which includes a challenge-response PoP, by using the key within a TLS handshake, or some other protocol which is part of the key's intended usage.</t>
      </section>
    </section>
  </middle>
  <back>
    <references anchor="sec-combined-references">
      <name>References</name>
      <references anchor="sec-normative-references">
        <name>Normative References</name>
        <reference anchor="RFC2119" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner"/>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC9334">
          <front>
            <title>Remote ATtestation procedureS (RATS) Architecture</title>
            <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
            <author fullname="D. Thaler" initials="D." surname="Thaler"/>
            <author fullname="M. Richardson" initials="M." surname="Richardson"/>
            <author fullname="N. Smith" initials="N." surname="Smith"/>
            <author fullname="W. Pan" initials="W." surname="Pan"/>
            <date month="January" year="2023"/>
            <abstract>
              <t>In network protocol exchanges, it is often useful for one end of a communication to know whether the other end is in an intended operating state. This document provides an architectural overview of the entities involved that make such tests possible through the process of generating, conveying, and evaluating evidentiary Claims. It provides a model that is neutral toward processor architectures, the content of Claims, and protocols.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9334"/>
          <seriesInfo name="DOI" value="10.17487/RFC9334"/>
        </reference>
        <reference anchor="RFC5280" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.5280.xml">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
            <author fullname="D. Cooper" initials="D." surname="Cooper"/>
            <author fullname="S. Santesson" initials="S." surname="Santesson"/>
            <author fullname="S. Farrell" initials="S." surname="Farrell"/>
            <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
            <author fullname="R. Housley" initials="R." surname="Housley"/>
            <author fullname="W. Polk" initials="W." surname="Polk"/>
            <date month="May" year="2008"/>
            <abstract>
              <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="5280"/>
          <seriesInfo name="DOI" value="10.17487/RFC5280"/>
        </reference>
        <reference anchor="I-D.ietf-rats-eat">
          <front>
            <title>The Entity Attestation Token (EAT)</title>
            <author fullname="Laurence Lundblade" initials="L." surname="Lundblade">
              <organization>Security Theory LLC</organization>
            </author>
            <author fullname="Giridhar Mandyam" initials="G." surname="Mandyam">
              <organization>Mediatek USA</organization>
            </author>
            <author fullname="Jeremy O'Donoghue" initials="J." surname="O'Donoghue">
              <organization>Qualcomm Technologies Inc.</organization>
            </author>
            <author fullname="Carl Wallace" initials="C." surname="Wallace">
              <organization>Red Hound Software, Inc.</organization>
            </author>
            <date day="6" month="September" year="2024"/>
            <abstract>
              <t>   An Entity Attestation Token (EAT) provides an attested claims set
   that describes state and characteristics of an entity, a device like
   a smartphone, IoT device, network equipment or such.  This claims set
   is used by a relying party, server or service to determine the type
   and degree of trust placed in the entity.

   An EAT is either a CBOR Web Token (CWT) or JSON Web Token (JWT) with
   attestation-oriented claims.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-rats-eat-31"/>
        </reference>
        <reference anchor="X.680" target="https://www.itu.int/rec/T-REC-X.680">
          <front>
            <title>Information technology -- Abstract Syntax Notation One (ASN.1): Specification of basic notation</title>
            <author>
              <organization>ITU-T</organization>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="X.690">
          <front>
            <title>Information technology - ASN.1 encoding Rules: Specification of Basic Encoding Rules (BER), Canonical Encoding Rules (CER) and Distinguished Encoding Rules (DER)</title>
            <author>
              <organization>ITU-T</organization>
            </author>
            <date year="2015" month="November"/>
          </front>
          <seriesInfo name="ISO/IEC" value="8825-1:2015"/>
        </reference>
        <reference anchor="PKCS11" target="https://docs.oasis-open.org/pkcs11/pkcs11-spec/v3.1/cs01/pkcs11-spec-v3.1-cs01.html">
          <front>
            <title>PKCS #11 Specification Version 3.1</title>
            <author initials="T." surname="Cox" fullname="Tony Cox">
              <organization>OASIS PKCS 11 TC</organization>
            </author>
            <date>n.d.</date>
          </front>
        </reference>
        <reference anchor="FIPS.140-3" target="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-3.pdf">
          <front>
            <title>SECURITY REQUIREMENTS FOR CRYPTOGRAPHIC MODULES</title>
            <author>
              <organization>NIST - Information Technology Laboratory</organization>
            </author>
            <date>n.d.</date>
          </front>
          <seriesInfo name="FIPS" value="140-3"/>
        </reference>
        <reference anchor="RFC8174" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml">
          <front>
            <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
            <author fullname="B. Leiba" initials="B." surname="Leiba"/>
            <date month="May" year="2017"/>
            <abstract>
              <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="8174"/>
          <seriesInfo name="DOI" value="10.17487/RFC8174"/>
        </reference>
      </references>
      <references anchor="sec-informative-references">
        <name>Informative References</name>
        <reference anchor="RFC2986" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.2986.xml">
          <front>
            <title>PKCS #10: Certification Request Syntax Specification Version 1.7</title>
            <author fullname="M. Nystrom" initials="M." surname="Nystrom"/>
            <author fullname="B. Kaliski" initials="B." surname="Kaliski"/>
            <date month="November" year="2000"/>
            <abstract>
              <t>This memo represents a republication of PKCS #10 v1.7 from RSA Laboratories' Public-Key Cryptography Standards (PKCS) series, and change control is retained within the PKCS process. The body of this document, except for the security considerations section, is taken directly from the PKCS #9 v2.0 or the PKCS #10 v1.7 document. This memo provides information for the Internet community.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="2986"/>
          <seriesInfo name="DOI" value="10.17487/RFC2986"/>
        </reference>
        <reference anchor="RFC6024">
          <front>
            <title>Trust Anchor Management Requirements</title>
            <author fullname="R. Reddy" initials="R." surname="Reddy"/>
            <author fullname="C. Wallace" initials="C." surname="Wallace"/>
            <date month="October" year="2010"/>
            <abstract>
              <t>A trust anchor represents an authoritative entity via a public key and associated data. The public key is used to verify digital signatures, and the associated data is used to constrain the types of information for which the trust anchor is authoritative. A relying party uses trust anchors to determine if a digitally signed object is valid by verifying a digital signature using the trust anchor's public key, and by enforcing the constraints expressed in the associated data for the trust anchor. This document describes some of the problems associated with the lack of a standard trust anchor management mechanism and defines requirements for data formats and push-based protocols designed to address these problems. This document is not an Internet Standards Track specification; it is published for informational purposes.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6024"/>
          <seriesInfo name="DOI" value="10.17487/RFC6024"/>
        </reference>
        <reference anchor="RFC9019">
          <front>
            <title>A Firmware Update Architecture for Internet of Things</title>
            <author fullname="B. Moran" initials="B." surname="Moran"/>
            <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
            <author fullname="D. Brown" initials="D." surname="Brown"/>
            <author fullname="M. Meriac" initials="M." surname="Meriac"/>
            <date month="April" year="2021"/>
            <abstract>
              <t>Vulnerabilities in Internet of Things (IoT) devices have raised the need for a reliable and secure firmware update mechanism suitable for devices with resource constraints. Incorporating such an update mechanism is a fundamental requirement for fixing vulnerabilities, but it also enables other important capabilities such as updating configuration settings and adding new functionality.</t>
              <t>In addition to the definition of terminology and an architecture, this document provides the motivation for the standardization of a manifest format as a transport-agnostic means for describing and protecting firmware updates.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="9019"/>
          <seriesInfo name="DOI" value="10.17487/RFC9019"/>
        </reference>
        <reference anchor="RFC4211" xml:base="https://bib.ietf.org/public/rfc/bibxml/reference.RFC.4211.xml">
          <front>
            <title>Internet X.509 Public Key Infrastructure Certificate Request Message Format (CRMF)</title>
            <author fullname="J. Schaad" initials="J." surname="Schaad"/>
            <date month="September" year="2005"/>
            <abstract>
              <t>This document describes the Certificate Request Message Format (CRMF) syntax and semantics. This syntax is used to convey a request for a certificate to a Certification Authority (CA), possibly via a Registration Authority (RA), for the purposes of X.509 certificate production. The request will typically include a public key and the associated registration information. This document does not define a certificate request protocol. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4211"/>
          <seriesInfo name="DOI" value="10.17487/RFC4211"/>
        </reference>
        <reference anchor="I-D.ietf-lamps-csr-attestation">
          <front>
            <title>Use of Remote Attestation with Certification Signing Requests</title>
            <author fullname="Mike Ounsworth" initials="M." surname="Ounsworth">
              <organization>Entrust Limited</organization>
            </author>
            <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
              <organization>Siemens</organization>
            </author>
            <author fullname="Henk Birkholz" initials="H." surname="Birkholz">
              <organization>Fraunhofer SIT</organization>
            </author>
            <author fullname="Monty Wiseman" initials="M." surname="Wiseman">
              <organization>Beyond Identity</organization>
            </author>
            <author fullname="Ned Smith" initials="N." surname="Smith">
              <organization>Intel Corporation</organization>
            </author>
            <date day="1" month="February" year="2025"/>
            <abstract>
              <t>   A PKI end entity requesting a certificate from a Certification
   Authority (CA) may wish to offer trustworthy claims about the
   platform generating the certification request and the environment
   associated with the corresponding private key, such as whether the
   private key resides on a hardware security module.

   This specification defines an attribute and an extension that allow
   for conveyance of Evidence and Attestation Results in Certificate
   Signing Requests (CSRs), such as PKCS#10 or Certificate Request
   Message Format (CRMF) payloads.  This provides an elegant and
   automatable mechanism for transporting Evidence to a Certification
   Authority.

   Including Evidence and Attestation Results along with a CSR can help
   to improve the assessment of the security posture for the private
   key, and can help the Certification Authority to assess whether it
   satisfies the requested certificate profile.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-lamps-csr-attestation-16"/>
        </reference>
        <reference anchor="I-D.fossati-tls-attestation">
          <front>
            <title>Using Attestation in Transport Layer Security (TLS) and Datagram Transport Layer Security (DTLS)</title>
            <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
         </author>
            <author fullname="Yaron Sheffer" initials="Y." surname="Sheffer">
              <organization>Intuit</organization>
            </author>
            <author fullname="Paul Howard" initials="P." surname="Howard">
              <organization>Arm Limited</organization>
            </author>
            <author fullname="Ionuț Mihalcea" initials="I." surname="Mihalcea">
              <organization>Arm Limited</organization>
            </author>
            <author fullname="Yogesh Deshpande" initials="Y." surname="Deshpande">
              <organization>Arm Limited</organization>
            </author>
            <author fullname="Arto Niemi" initials="A." surname="Niemi">
              <organization>Huawei</organization>
            </author>
            <author fullname="Thomas Fossati" initials="T." surname="Fossati">
              <organization>Linaro</organization>
            </author>
            <date day="21" month="October" year="2024"/>
            <abstract>
              <t>   The TLS handshake protocol allows authentication of one or both peers
   using static, long-term credentials.  In some cases, it is also
   desirable to ensure that the peer runtime environment is in a secure
   state.  Such an assurance can be achieved using attestation which is
   a process by which an entity produces evidence about itself that
   another party can use to appraise whether that entity is found in a
   secure state.  This document describes a series of protocol
   extensions to the TLS 1.3 handshake that enables the binding of the
   TLS authentication key to a remote attestation session.  This enables
   an entity capable of producing attestation evidence, such as a
   confidential workload running in a Trusted Execution Environment
   (TEE), or an IoT device that is trying to authenticate itself to a
   network access point, to present a more comprehensive set of security
   metrics to its peer.  These extensions have been designed to allow
   the peers to use any attestation technology, in any remote
   attestation topology, and mutually.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-fossati-tls-attestation-08"/>
        </reference>
        <reference anchor="I-D.ietf-rats-msg-wrap">
          <front>
            <title>RATS Conceptual Messages Wrapper (CMW)</title>
            <author fullname="Henk Birkholz" initials="H." surname="Birkholz">
              <organization>Fraunhofer SIT</organization>
            </author>
            <author fullname="Ned Smith" initials="N." surname="Smith">
              <organization>Intel</organization>
            </author>
            <author fullname="Thomas Fossati" initials="T." surname="Fossati">
              <organization>Linaro</organization>
            </author>
            <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
              <organization>University of Applied Sciences Bonn-Rhein-Sieg</organization>
            </author>
            <author fullname="Dionna Glaze" initials="D." surname="Glaze">
              <organization>Google LLC</organization>
            </author>
            <date day="15" month="November" year="2024"/>
            <abstract>
              <t>   This document defines the RATS conceptual message wrapper (CMW)
   format, a type of encapsulation format that can be used for any RATS
   messages, such as Evidence, Attestation Results, Endorsements, and
   Reference Values.  Additionally, the document describes a collection
   type that enables the aggregation of one or more CMWs into a single
   message.

   This document also defines corresponding CBOR tag, JSON Web Tokens
   (JWT) and CBOR Web Tokens (CWT) claims, as well as an X.509
   extension.  These allow embedding the wrapped conceptual messages
   into CBOR-based protocols, web APIs, and PKIX protocols.  In
   addition, a Media Type and a CoAP Content-Format are defined for
   transporting CMWs in HTTP, MIME, CoAP and other Internet protocols.

              </t>
            </abstract>
          </front>
          <seriesInfo name="Internet-Draft" value="draft-ietf-rats-msg-wrap-11"/>
        </reference>
      </references>
    </references>
    <?line 920?>

<section anchor="samples">
      <name>Samples</name>
      <t>A reference implementation of this specification can be found at https://github.com/hannestschofenig/keyattestation</t>
      <t>It produces the following sample attestation:</t>
      <artwork><![CDATA[
PkixAttestation:
 tbs=TbsPkixAttestation:
  version=2
  reportedEntities=SequenceOf:
   ReportedEntity:
    entityType=1.2.3.999.0.0
    reportedAttributes=SequenceOf:
     ReportedAttribute:
      attributeType=1.2.3.999.1.0.0
      value=AttributeValue:
       bytes=0102030405


   ReportedEntity:
    entityType=1.2.3.999.0.1
    reportedAttributes=SequenceOf:
     ReportedAttribute:
      attributeType=1.2.3.999.1.1.0
      value=AttributeValue:
       utf8String=HSM-123

     ReportedAttribute:
      attributeType=1.2.3.999.1.1.1
      value=AttributeValue:
       bool=True

     ReportedAttribute:
      attributeType=1.2.3.999.1.1.2
      value=AttributeValue:
       utf8String=Model ABC

     ReportedAttribute:
      attributeType=1.2.3.999.1.1.4
      value=AttributeValue:
       utf8String=3.1.9

     ReportedAttribute:
      attributeType=1.2.3.999.1.1.3
      value=AttributeValue:
       time=202502032234Z


   ReportedEntity:
    entityType=1.2.3.999.0.2
    reportedAttributes=SequenceOf:
     ReportedAttribute:
      attributeType=1.2.3.999.1.2.0
      value=AttributeValue:
       utf8String=26d765d8-1afd-4dfb-a290-cf867ddecfa1

     ReportedAttribute:
      attributeType=1.2.3.999.1.2.3
      value=AttributeValue:
       bool=False

     ReportedAttribute:
      attributeType=1.2.3.999.1.2.1
      value=AttributeValue:
       bytes=0x3059301306072a8648ce3d020106082a8648ce3d03010703420004422548f88fb782ffb5eca3744452c72a1e558fbd6f73be5e48e93232cc45c5b16c4cd10c4cb8d5b8a17139e94882c8992572993425f41419ab7e90a42a494272


   ReportedEntity:
    entityType=1.2.3.999.0.2
    reportedAttributes=SequenceOf:
     ReportedAttribute:
      attributeType=1.2.3.999.1.2.0
      value=AttributeValue:
       utf8String=49a96ace-e39a-4fd2-bec1-13165a99621c

     ReportedAttribute:
      attributeType=1.2.3.999.1.2.3
      value=AttributeValue:
       bool=True

     ReportedAttribute:
      attributeType=1.2.3.999.1.2.1
      value=AttributeValue:
       bytes=0x3059301306072a8648ce3d020106082a8648ce3d03010703420004422548f88fb782ffb5eca3744452c72a1e558fbd6f73be5e48e93232cc45c5b16c4cd10c4cb8d5b8a17139e94882c8992572993425f41419ab7e90a42a494272


   ReportedEntity:
    entityType=1.2.3.888.0
    reportedAttributes=SequenceOf:
     ReportedAttribute:
      attributeType=1.2.3.888.1
      value=AttributeValue:
       utf8String=partition 1




 signatures=SequenceOf:
  SignatureBlock:
   certChain=SequenceOf:
    Certificate:
     tbsCertificate=TBSCertificate:
      version=v3
      serialNumber=510501933685942792810365453374472870755160518925
      signature=AlgorithmIdentifier:
       algorithm=1.2.840.113549.1.1.11
       parameters=0x0500

      issuer=Name:
       rdnSequence=RDNSequence:
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.10
          value=0x0c0449455446
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.11
          value=0x0c0452415453
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.3
          value=0x0c06414b20525341


      validity=Validity:
       notBefore=Time:
        utcTime=250117171303Z

       notAfter=Time:
        generalTime=20520604171303Z


      subject=Name:
       rdnSequence=RDNSequence:
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.10
          value=0x0c0449455446
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.11
          value=0x0c0452415453
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.3
          value=0x0c06414b20525341


      subjectPublicKeyInfo=SubjectPublicKeyInfo:
       algorithm=AlgorithmIdentifier:
        algorithm=1.2.840.113549.1.1.1
        parameters=0x0500

       subjectPublicKey=31795268810366627125468059984427145931784542919710733587190808152893606542214208096328883077225607136393362795609997601968312039001251339428349101203532726047646450301142882318337709398316574407647199690000689245113739552615279534528145776090813314822312012607567736073057936820713733090928849092672110937300300755561797808000438134839458043673852453722969649609202093945235393494912138691342219564365300965387743701570507112064401758218314760153081271981340812350365663466513620853326534252424706992841033652817461354632316129312597825542820569667842318342646457447037125609399476844336456206583416539426479221164971369788464727307915820767918489601

      extensions=Extensions:
       Extension:
        extnID=2.5.29.14
        critical=False
        extnValue=0x04148919595e0ef169f5cbbd47e134fce298cc693091
       Extension:
        extnID=2.5.29.35
        critical=False
        extnValue=0x301680148919595e0ef169f5cbbd47e134fce298cc693091
       Extension:
        extnID=2.5.29.19
        critical=True
        extnValue=0x30030101ff


     signatureAlgorithm=AlgorithmIdentifier:
      algorithm=1.2.840.113549.1.1.11
      parameters=0x0500

     signature=12977775424631768289542539102653382982431795551146145281750189553757940982572813264428982985997740595878077027853994515775116752030963858469651548765808775269857271167748512795017916284867051302884465315751010913658016640170608413935780119349866986170148033301955753116984041271273907756544780231564646860424999020990745523383622980115200446260103173103500647838758197610238552349053064525420240826193553395378873725256584269666918504793674497748455574822238022085054752185687440807655337724821853332688158460379554906105417720665175648371832825939577039874730442790337726004105878168375998123110331993348833629325492

   signatureAlgorithm=AlgorithmIdentifier:
    algorithm=1.2.840.113549.1.1.10
    parameters=RSASSA_PSS_params:
     hashAlgorithm=AlgorithmIdentifier:
      algorithm=2.16.840.1.101.3.4.2.1

     maskGenAlgorithm=AlgorithmIdentifier:
      algorithm=1.2.840.113549.1.1.8

     saltLength=20
     trailerField=1


   signatureValue=0x9b6ac1932f1cd85befbde054e084577ebc9181bcf05179658a700e22556fc3f1931f59dc9734efe08df204fcfe55c64c6a97e8d520e58c1f64080b6cce1c08e88db510c06d6914a818b70df82326b37a2abe54fab0567d748e1e82e2de954cac63c5ab3bc92fff9cb8aa64fbcb83dd8bacbce96392f91dd40ee05058adceb11f5cf0c379241fd470918abceea70fd01c0cbc64d96067fe549ec443738655bc2bcf7e5bd54c15d5e5ac2f4ad180d973a7e6025126ccd2b45d78e9944662237959ef73f47e9ae0fa9b0c55177bb6f867a90b41d0efb72c192f15a66531d030bc85fed3d135aea4045e024ef2e807517504d313dbea4b0f709d0553b60793b2dcaa
  SignatureBlock:
   certChain=SequenceOf:
    Certificate:
     tbsCertificate=TBSCertificate:
      version=v3
      serialNumber=43752118382009037811618748949928339462896457144
      signature=AlgorithmIdentifier:
       algorithm=1.2.840.10045.4.3.2

      issuer=Name:
       rdnSequence=RDNSequence:
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.10
          value=0x0c0449455446
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.11
          value=0x0c0452415453
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.3
          value=0x0c07414b2050323536


      validity=Validity:
       notBefore=Time:
        utcTime=250117171428Z

       notAfter=Time:
        generalTime=20520604171428Z


      subject=Name:
       rdnSequence=RDNSequence:
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.10
          value=0x0c0449455446
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.11
          value=0x0c0452415453
        RelativeDistinguishedName:
         AttributeTypeAndValue:
          type=2.5.4.3
          value=0x0c07414b2050323536


      subjectPublicKeyInfo=SubjectPublicKeyInfo:
       algorithm=AlgorithmIdentifier:
        algorithm=1.2.840.10045.2.1
        parameters=0x06082a8648ce3d030107

       subjectPublicKey=57095560233504924588952816185508037812996307929249104847846164660564888397123390877585670462836285725041261897550020311481127562655774333675293173915140722

      extensions=Extensions:
       Extension:
        extnID=2.5.29.14
        critical=False
        extnValue=0x04145b70a79817f79ff637d2f7e3dc446c2109d7bbd4
       Extension:
        extnID=2.5.29.35
        critical=False
        extnValue=0x301680145b70a79817f79ff637d2f7e3dc446c2109d7bbd4
       Extension:
        extnID=2.5.29.19
        critical=True
        extnValue=0x30030101ff


     signatureAlgorithm=AlgorithmIdentifier:
      algorithm=1.2.840.10045.4.3.2

     signature=182167519797146035745575043154801415115532979136731128676399180692664821804883990401552040789643013103202424486088058364982966709324496782518079519267269438816178719668437

   signatureAlgorithm=AlgorithmIdentifier:
    algorithm=1.2.840.10045.2.1
    parameters=0x06082a8648ce3d030107

   signatureValue=0x304402201e7703f63bff951917714e5fa813de5265f151a6802165ef0be5f1fe6c91225b02200ad06b41a5062b07ff3ad37c7d112e19575f0e14a9750fe95e615550b88b5fed



DER Base64:
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
]]></artwork>
    </section>
    <section anchor="acknowledgements">
      <name>Acknowledgements</name>
      <t>This specification is the work of a design team created by the chairs
of the RATS working group. This specification has been developed
based on discussions in that design team and also with great amounts of
input taken from discussions on the RATS mailing list.</t>
    </section>
  </back>
  <!-- ##markdown-source:
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
lLMgtOy5yw18RUZumumLtFfZLougp3M7qWpyAdwcSRbPHW9cycVroOZKUWIi
SzZcitbjBRl1wqckK1wF9wSCwo413N0INhOwcwDpBpPXWUXmxjrUDdbiPGZu
oKClWy+AorArsLRC2Z+lligbwRKwl/MAkFF7bONa93gzu9TiYhCq7nDYUICu
603X1m1mAbEzYRIlBaUuQ5KAVRdLaXKJIgmeu9FNnl0s59J04gUxRxeCGF5c
kAKrt7rjBs6rtMa6K16uet8gmNggZz9OlCz2ICfNGkQv3qo1UBL5Ofd8vOZn
KVp0dIvLPVORAMm6X5gCngvmD65qlJ6Ua8JzTOVNXF0jn+PqFDxxL5Zk1MQo
Phm+xYNQmR0NgkHtRSq2o9TDPbT6kLyw8MDmBnDr1Ty+fjod+fktb1KLxril
WEb/j11ZjN5q6sz8dWcDit2eLxw2jCVIHJ4N1IE8WGvoyhqncNk8d1r7qpIN
q4CpuSKn6sdm/BS95uIWDUWcsWqgqrG8KLZRKRLCiiCVOHCef6ywyFH11Shb
ZZ9bbrNXKY40yp9TgUPcddxuT8053qraC0tPe1VtZGXPhled4YDaFchaBFA4
9AIZtWXZKkwfrE99zem5C/ncq07/4vVusy0wckCp8KduLu7aEFzsxwqILC2I
O6QA40cMj2bWPfvrstikYsv6qcE4P2nHQYfHdVp4mw66Jyn8SyCkcG98k2+q
F1S2MZ/AWrwJfbVaRm8PDqaw9vU4DwR5ACsH/ryK7FkwcX1vegBr0s6TlAkR
RYqSFpYsF9aefssB9ZSr6a2BzvR3uz4o+EGm4r8rGbsZ+O+G1MrYds8n+Ggq
7f5tKq3+XTFfypfzzWYzX8gXnsmkTw9p7ibQi++T+fHa4EU1vMiMf6depZxr
+T6nvL8rFAulQrlQKVThWL9vE8U/cxPFb9tEnI7/Dk38Yqls/I4pi98EtyCY
vxuFa/f3zFT6zs316a7IVrvzeyatfOekZXin+XsmLH/LhJhn+Q7rcxARS6Vy
5fa7MbH0Z2Ji6bsxsVRz6rWq08gVrYmTqziTcc4qNQs5e9Ko1cGWsCdW8cfB
Wvo2sBKaHmG91++Z6tsogjnJY7lQbZYLxXKhVqiXrEat0rDdsgPHWoRvGto3
8FChXihXSoVCoVIplaqVxqTRmIzrjdJkMq66tlWuVyqVasmGcYputQq/ObVJ
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

-->

</rfc>
